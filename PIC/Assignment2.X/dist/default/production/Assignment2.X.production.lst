

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 06 01:17:13 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           ; Version 1.45
    76                           ; Generated 16/11/2017 GMT
    77                           ; 
    78                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4620 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataCOMRAM
   111  0045F0                     __pidataCOMRAM:
   112                           	opt stack 0
   113                           
   114                           ;initializer for _LCD_INIT_STRING
   115  0045F0  28                 	db	40
   116  0045F1  0C                 	db	12
   117  0045F2  01                 	db	1
   118  0045F3  06                 	db	6
   119                           
   120                           ;initializer for _initial
   121  0045F4  0001               	dw	1
   122                           
   123                           	psect	mediumconst
   124  00FEF8                     __pmediumconst:
   125                           	opt stack 0
   126  00FEF8  00                 	db	0
   127  00FEF9                     __powers_:
   128                           	opt stack 0
   129  00FEF9  0000               	dw	0
   130  00FEFB  3F80               	dw	16256
   131  00FEFD  0000               	dw	0
   132  00FEFF  4120               	dw	16672
   133  00FF01  0000               	dw	0
   134  00FF03  42C8               	dw	17096
   135  00FF05  0000               	dw	0
   136  00FF07  447A               	dw	17530
   137  00FF09  4000               	dw	16384
   138  00FF0B  461C               	dw	17948
   139  00FF0D  5000               	dw	20480
   140  00FF0F  47C3               	dw	18371
   141  00FF11  2400               	dw	9216
   142  00FF13  4974               	dw	18804
   143  00FF15  9680               	dw	38528
   144  00FF17  4B18               	dw	19224
   145  00FF19  BC20               	dw	48160
   146  00FF1B  4CBE               	dw	19646
   147  00FF1D  6B28               	dw	27432
   148  00FF1F  4E6E               	dw	20078
   149  00FF21  02F9               	dw	761
   150  00FF23  5015               	dw	20501
   151  00FF25  78EC               	dw	30956
   152  00FF27  60AD               	dw	24749
   153  00FF29  F2CA               	dw	62154
   154  00FF2B  7149               	dw	29001
   155  00FF2D                     __end_of__powers_:
   156                           	opt stack 0
   157  00FF2D                     __npowers_:
   158                           	opt stack 0
   159  00FF2D  0000               	dw	0
   160  00FF2F  3F80               	dw	16256
   161  00FF31  CCCD               	dw	52429
   162  00FF33  3DCC               	dw	15820
   163  00FF35  D70A               	dw	55050
   164  00FF37  3C23               	dw	15395
   165  00FF39  126F               	dw	4719
   166  00FF3B  3A83               	dw	14979
   167  00FF3D  B717               	dw	46871
   168  00FF3F  38D1               	dw	14545
   169  00FF41  C5AC               	dw	50604
   170  00FF43  3727               	dw	14119
   171  00FF45  37BD               	dw	14269
   172  00FF47  3586               	dw	13702
   173  00FF49  BF95               	dw	49045
   174  00FF4B  33D6               	dw	13270
   175  00FF4D  CC77               	dw	52343
   176  00FF4F  322B               	dw	12843
   177  00FF51  705F               	dw	28767
   178  00FF53  3089               	dw	12425
   179  00FF55  E6FF               	dw	59135
   180  00FF57  2EDB               	dw	11995
   181  00FF59  E508               	dw	58632
   182  00FF5B  1E3C               	dw	7740
   183  00FF5D  4260               	dw	16992
   184  00FF5F  0DA2               	dw	3490
   185  00FF61                     __end_of__npowers_:
   186                           	opt stack 0
   187  00FF61                     _dpowers:
   188                           	opt stack 0
   189  00FF61  0001               	dw	1
   190  00FF63  0000               	dw	0
   191  00FF65  000A               	dw	10
   192  00FF67  0000               	dw	0
   193  00FF69  0064               	dw	100
   194  00FF6B  0000               	dw	0
   195  00FF6D  03E8               	dw	1000
   196  00FF6F  0000               	dw	0
   197  00FF71  2710               	dw	10000
   198  00FF73  0000               	dw	0
   199  00FF75  86A0               	dw	34464
   200  00FF77  0001               	dw	1
   201  00FF79  4240               	dw	16960
   202  00FF7B  000F               	dw	15
   203  00FF7D  9680               	dw	38528
   204  00FF7F  0098               	dw	152
   205  00FF81  E100               	dw	57600
   206  00FF83  05F5               	dw	1525
   207  00FF85  CA00               	dw	51712
   208  00FF87  3B9A               	dw	15258
   209  00FF89                     __end_of_dpowers:
   210                           	opt stack 0
   211  00FF89                     STR_11:
   212  00FF89  4F                 	db	79	;'O'
   213  00FF8A  54                 	db	84	;'T'
   214  00FF8B  3A                 	db	58	;':'
   215  00FF8C  25                 	db	37
   216  00FF8D  34                 	db	52	;'4'
   217  00FF8E  2E                 	db	46
   218  00FF8F  32                 	db	50	;'2'
   219  00FF90  66                 	db	102	;'f'
   220  00FF91  43                 	db	67	;'C'
   221  00FF92  20                 	db	32
   222  00FF93  25                 	db	37
   223  00FF94  73                 	db	115	;'s'
   224  00FF95  3A                 	db	58	;':'
   225  00FF96  25                 	db	37
   226  00FF97  30                 	db	48	;'0'
   227  00FF98  64                 	db	100	;'d'
   228  00FF99  25                 	db	37
   229  00FF9A  25                 	db	37
   230  00FF9B  20                 	db	32
   231  00FF9C  00                 	db	0
   232  00FF9D                     STR_6:
   233  00FF9D  53                 	db	83	;'S'
   234  00FF9E  50                 	db	80	;'P'
   235  00FF9F  3A                 	db	58	;':'
   236  00FFA0  25                 	db	37
   237  00FFA1  34                 	db	52	;'4'
   238  00FFA2  2E                 	db	46
   239  00FFA3  32                 	db	50	;'2'
   240  00FFA4  66                 	db	102	;'f'
   241  00FFA5  43                 	db	67	;'C'
   242  00FFA6  20                 	db	32
   243  00FFA7  00                 	db	0
   244  00FFA8                     STR_4:
   245  00FFA8  52                 	db	82	;'R'
   246  00FFA9  54                 	db	84	;'T'
   247  00FFAA  3A                 	db	58	;':'
   248  00FFAB  25                 	db	37
   249  00FFAC  34                 	db	52	;'4'
   250  00FFAD  2E                 	db	46
   251  00FFAE  32                 	db	50	;'2'
   252  00FFAF  66                 	db	102	;'f'
   253  00FFB0  43                 	db	67	;'C'
   254  00FFB1  20                 	db	32
   255  00FFB2  00                 	db	0
   256  00FFB3                     STR_14:
   257  00FFB3  4F                 	db	79	;'O'
   258  00FFB4  54                 	db	84	;'T'
   259  00FFB5  3A                 	db	58	;':'
   260  00FFB6  25                 	db	37
   261  00FFB7  34                 	db	52	;'4'
   262  00FFB8  2E                 	db	46
   263  00FFB9  32                 	db	50	;'2'
   264  00FFBA  66                 	db	102	;'f'
   265  00FFBB  43                 	db	67	;'C'
   266  00FFBC  00                 	db	0
   267  00FFBD                     STR_1:
   268  00FFBD  52                 	db	82	;'R'
   269  00FFBE  3A                 	db	58	;':'
   270  00FFBF  25                 	db	37
   271  00FFC0  34                 	db	52	;'4'
   272  00FFC1  2E                 	db	46
   273  00FFC2  32                 	db	50	;'2'
   274  00FFC3  66                 	db	102	;'f'
   275  00FFC4  00                 	db	0
   276  00FFC5                     STR_26:
   277  00FFC5  28                 	db	40
   278  00FFC6  6E                 	db	110	;'n'
   279  00FFC7  75                 	db	117	;'u'
   280  00FFC8  6C                 	db	108	;'l'
   281  00FFC9  6C                 	db	108	;'l'
   282  00FFCA  29                 	db	41
   283  00FFCB  00                 	db	0
   284  00FFCC                     STR_19:
   285  00FFCC  48                 	db	72	;'H'
   286  00FFCD  53                 	db	83	;'S'
   287  00FFCE  3D                 	db	61	;'='
   288  00FFCF  25                 	db	37
   289  00FFD0  64                 	db	100	;'d'
   290  00FFD1  00                 	db	0
   291  00FFD2                     STR_15:
   292  00FFD2  4D                 	db	77	;'M'
   293  00FFD3  44                 	db	68	;'D'
   294  00FFD4  3A                 	db	58	;':'
   295  00FFD5  25                 	db	37
   296  00FFD6  73                 	db	115	;'s'
   297  00FFD7  00                 	db	0
   298  00FFD8                     STR_20:
   299  00FFD8  20                 	db	32
   300  00FFD9  20                 	db	32
   301  00FFDA  20                 	db	32
   302  00FFDB  20                 	db	32
   303  00FFDC  00                 	db	0
   304  00FFDD                     STR_17:
   305  00FFDD  43                 	db	67	;'C'
   306  00FFDE  6F                 	db	111	;'o'
   307  00FFDF  6F                 	db	111	;'o'
   308  00FFE0  6C                 	db	108	;'l'
   309  00FFE1  00                 	db	0
   310  00FFE2                     STR_18:
   311  00FFE2  41                 	db	65	;'A'
   312  00FFE3  75                 	db	117	;'u'
   313  00FFE4  74                 	db	116	;'t'
   314  00FFE5  6F                 	db	111	;'o'
   315  00FFE6  00                 	db	0
   316  00FFE7                     STR_16:
   317  00FFE7  48                 	db	72	;'H'
   318  00FFE8  65                 	db	101	;'e'
   319  00FFE9  61                 	db	97	;'a'
   320  00FFEA  74                 	db	116	;'t'
   321  00FFEB  00                 	db	0
   322  00FFEC                     STR_5:
   323  00FFEC  48                 	db	72	;'H'
   324  00FFED  20                 	db	32
   325  00FFEE  43                 	db	67	;'C'
   326  00FFEF  00                 	db	0
   327  00FFF0                     STR_24:
   328  00FFF0  48                 	db	72	;'H'
   329  00FFF1  43                 	db	67	;'C'
   330  00FFF2  00                 	db	0
   331  00FFF3                     STR_22:
   332  00FFF3  43                 	db	67	;'C'
   333  00FFF4  4C                 	db	76	;'L'
   334  00FFF5  00                 	db	0
   335  00FFF6                     STR_23:
   336  00FFF6  48                 	db	72	;'H'
   337  00FFF7  54                 	db	84	;'T'
   338  00FFF8  00                 	db	0
   339  00FFF9                     STR_12:
   340  00FFF9  48                 	db	72	;'H'
   341  00FFFA  00                 	db	0
   342  00FFFB                     STR_8:
   343  00FFFB  4E                 	db	78	;'N'
   344  00FFFC  00                 	db	0
   345  00FFFD                     STR_7:
   346  00FFFD  59                 	db	89	;'Y'
   347  00FFFE  00                 	db	0
   348  0000                     
   349                           ; #config settings
   350  00FFFF  00                 	db	0	; dummy byte at the end
   351  0000                     
   352                           	psect	nvBANK1
   353  000173                     __pnvBANK1:
   354                           	opt stack 0
   355  000173                     _heatError:
   356                           	opt stack 0
   357  000173                     	ds	4
   358  000177                     _coolError:
   359                           	opt stack 0
   360  000177                     	ds	4
   361  00017B                     _RT:
   362                           	opt stack 0
   363  00017B                     	ds	4
   364  00017F                     _OT:
   365                           	opt stack 0
   366  00017F                     	ds	4
   367  000183                     _SP:
   368                           	opt stack 0
   369  000183                     	ds	4
   370  0000                     _INTCON2bits	set	4081
   371  0000                     _INTCON3	set	4080
   372  0000                     _INTCON2	set	4081
   373  0000                     _RCONbits	set	4048
   374  0000                     _IPR2bits	set	4002
   375  0000                     _PIE2bits	set	4000
   376  0000                     _T3CONbits	set	4017
   377  0000                     _T1CONbits	set	4045
   378  0000                     _RCSTAbits	set	4011
   379  0000                     _RCSTA	set	4011
   380  0000                     _TXSTAbits	set	4012
   381  0000                     _SPBRG	set	4015
   382  0000                     _TXSTA	set	4012
   383  0000                     _BAUDCONbits	set	4024
   384  0000                     _RCREG	set	4014
   385  0000                     _PIE1	set	3997
   386  0000                     _PORTD	set	3971
   387  0000                     _TRISE	set	3990
   388  0000                     _TRISD	set	3989
   389  0000                     _TRISC	set	3988
   390  0000                     _TRISB	set	3987
   391  0000                     _TRISA	set	3986
   392  0000                     _ADCON1	set	4033
   393  0000                     _INTCON3bits	set	4080
   394  0000                     _INTCONbits	set	4082
   395  0000                     _PORTCbits	set	3970
   396  0000                     _PIR2bits	set	4001
   397  0000                     _CCP1CONbits	set	4029
   398  0000                     _CCPR1L	set	4030
   399  0000                     _TRISCbits	set	3988
   400  0000                     _T2CONbits	set	4042
   401  0000                     _CCP1CON	set	4029
   402  0000                     _T2CON	set	4042
   403  0000                     _PR2	set	4043
   404  0000                     _PORTEbits	set	3972
   405  0000                     _ADRESL	set	4035
   406  0000                     _ADRESH	set	4036
   407  0000                     _ADCON2	set	4032
   408  0000                     _ADCON0bits	set	4034
   409  0000                     _ADCON0	set	4034
   410  0000                     _TMR3L	set	4018
   411  0000                     _TMR3H	set	4019
   412  0000                     _TMR1L	set	4046
   413  0000                     _TMR1H	set	4047
   414                           
   415                           	psect	cinit
   416  004322                     __pcinit:
   417                           	opt stack 0
   418  004322                     start_initialization:
   419                           	opt stack 0
   420  004322                     __initialization:
   421                           	opt stack 0
   422                           
   423                           ; Initialize objects allocated to COMRAM (6 bytes)
   424                           ; load TBLPTR registers with __pidataCOMRAM
   425  004322  0EF0               	movlw	low __pidataCOMRAM
   426  004324  6EF6               	movwf	tblptrl,c
   427  004326  0E45               	movlw	high __pidataCOMRAM
   428  004328  6EF7               	movwf	tblptrh,c
   429  00432A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   430  00432C  6EF8               	movwf	tblptru,c
   431  00432E  EE00  F075         	lfsr	0,__pdataCOMRAM
   432  004332  EE10 F006          	lfsr	1,6
   433  004336                     copy_data0:
   434  004336  0009               	tblrd		*+
   435  004338  CFF5 FFEE          	movff	tablat,postinc0
   436  00433C  50E5               	movf	postdec1,w,c
   437  00433E  50E1               	movf	fsr1l,w,c
   438  004340  E1FA               	bnz	copy_data0
   439                           
   440                           ; Clear objects allocated to BANK1 (38 bytes)
   441  004342  EE01  F04D         	lfsr	0,__pbssBANK1
   442  004346  0E26               	movlw	38
   443  004348                     clear_0:
   444  004348  6AEE               	clrf	postinc0,c
   445  00434A  06E8               	decf	wreg,f,c
   446  00434C  E1FD               	bnz	clear_0
   447                           
   448                           ; Clear objects allocated to COMRAM (18 bytes)
   449  00434E  EE00  F063         	lfsr	0,__pbssCOMRAM
   450  004352  0E12               	movlw	18
   451  004354                     clear_1:
   452  004354  6AEE               	clrf	postinc0,c
   453  004356  06E8               	decf	wreg,f,c
   454  004358  E1FD               	bnz	clear_1
   455  00435A                     end_of_initialization:
   456                           	opt stack 0
   457  00435A                     __end_of__initialization:
   458                           	opt stack 0
   459  00435A  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   460  00435C  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   461  00435E  0100               	movlb	0
   462  004360  EF2F  F006         	goto	_main	;jump to C main() function
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	bssCOMRAM
   473  000063                     __pbssCOMRAM:
   474                           	opt stack 0
   475  000063                     _stpMode:
   476                           	opt stack 0
   477  000063                     	ds	2
   478  000065                     _clkMode:
   479                           	opt stack 0
   480  000065                     	ds	2
   481  000067                     _hours:
   482                           	opt stack 0
   483  000067                     	ds	2
   484  000069                     _minutes:
   485                           	opt stack 0
   486  000069                     	ds	2
   487  00006B                     _seconds:
   488                           	opt stack 0
   489  00006B                     	ds	2
   490  00006D                     _timerCounter:
   491                           	opt stack 0
   492  00006D                     	ds	2
   493  00006F                     _percentCoolCounter:
   494                           	opt stack 0
   495  00006F                     	ds	2
   496  000071                     _autoMode:
   497                           	opt stack 0
   498  000071                     	ds	2
   499  000073                     _operationMode:
   500                           	opt stack 0
   501  000073                     	ds	2
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	dataCOMRAM
   512  000075                     __pdataCOMRAM:
   513                           	opt stack 0
   514  000075                     _LCD_INIT_STRING:
   515                           	opt stack 0
   516  000075                     	ds	4
   517  000079                     _initial:
   518                           	opt stack 0
   519  000079                     	ds	2
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           
   529                           	psect	bssBANK1
   530  00014D                     __pbssBANK1:
   531                           	opt stack 0
   532  00014D                     _RPS_count:
   533                           	opt stack 0
   534  00014D                     	ds	2
   535  00014F                     _percentHeatCounter:
   536                           	opt stack 0
   537  00014F                     	ds	2
   538  000151                     _HS:
   539                           	opt stack 0
   540  000151                     	ds	2
   541  000153                     _Buffer:
   542                           	opt stack 0
   543  000153                     	ds	32
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	cstackBANK1
   554  000100                     __pcstackBANK1:
   555                           	opt stack 0
   556  000100                     ?_sprintf:
   557                           	opt stack 0
   558  000100                     sprintf@sp:
   559                           	opt stack 0
   560  000100                     set_pwm1_percent@tmp:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0x0
   564  000100                     	ds	2
   565  000102                     sprintf@f:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2
   569  000102                     	ds	2
   570  000104                     set_pwm1_percent@raw_val:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x4
   574  000104                     	ds	8
   575  00010C                     ??_sprintf:
   576                           
   577                           ; 1 bytes @ 0xC
   578  00010C                     	ds	4
   579  000110                     _sprintf$1904:
   580                           	opt stack 0
   581                           
   582                           ; 4 bytes @ 0x10
   583  000110                     	ds	4
   584  000114                     sprintf@ap:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x14
   588  000114                     	ds	2
   589  000116                     sprintf@cp:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x16
   593  000116                     	ds	2
   594  000118                     sprintf@len:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x18
   598  000118                     	ds	2
   599  00011A                     sprintf@tmpval:
   600                           	opt stack 0
   601                           
   602                           ; 4 bytes @ 0x1A
   603  00011A                     	ds	4
   604  00011E                     sprintf@val:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x1E
   608  00011E                     	ds	4
   609  000122                     sprintf@exp:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x22
   613  000122                     	ds	2
   614  000124                     sprintf@flag:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x24
   618  000124                     	ds	2
   619  000126                     sprintf@fval:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x26
   623  000126                     	ds	4
   624  00012A                     sprintf@width:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x2A
   628  00012A                     	ds	2
   629  00012C                     sprintf@prec:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x2C
   633  00012C                     	ds	2
   634  00012E                     sprintf@c:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x2E
   638  00012E                     	ds	1
   639  00012F                     _autoHeat$1899:
   640                           	opt stack 0
   641  00012F                     _autoCool$1898:
   642                           	opt stack 0
   643                           
   644                           ; 4 bytes @ 0x2F
   645  00012F                     	ds	4
   646  000133                     _autoCool$1036:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x33
   650  000133                     	ds	4
   651  000137                     autoCool@value:
   652                           	opt stack 0
   653                           
   654                           ; 4 bytes @ 0x37
   655  000137                     	ds	4
   656  00013B                     _main$1202:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x3B
   660  00013B                     	ds	2
   661  00013D                     _main$1206:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x3D
   665  00013D                     	ds	2
   666  00013F                     _main$1211:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x3F
   670  00013F                     	ds	2
   671  000141                     _main$1212:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x41
   675  000141                     	ds	2
   676  000143                     _main$1220:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x43
   680  000143                     	ds	2
   681  000145                     _main$1221:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x45
   685  000145                     	ds	2
   686  000147                     _main$1224:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x47
   690  000147                     	ds	2
   691  000149                     _main$1231:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x49
   695  000149                     	ds	2
   696  00014B                     _main$1232:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x4B
   700  00014B                     	ds	2
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           
   710                           	psect	cstackBANK0
   711  000080                     __pcstackBANK0:
   712                           	opt stack 0
   713  000080                     ??_isdigit:
   714  000080                     ??_delay_cycles:
   715  000080                     ?_read_adc_raw_no_lib:
   716                           	opt stack 0
   717  000080                     ?___wmul:
   718                           	opt stack 0
   719  000080                     ?___awmod:
   720                           	opt stack 0
   721  000080                     ?__tdiv_to_l_:
   722                           	opt stack 0
   723  000080                     ?__div_to_l_:
   724                           	opt stack 0
   725  000080                     ?___lldiv:
   726                           	opt stack 0
   727  000080                     init@dummy:
   728                           	opt stack 0
   729  000080                     delay_ms@n:
   730                           	opt stack 0
   731  000080                     set_pwm1_raw@raw_value:
   732                           	opt stack 0
   733  000080                     ___wmul@multiplier:
   734                           	opt stack 0
   735  000080                     ___awmod@dividend:
   736                           	opt stack 0
   737  000080                     __div_to_l_@f1:
   738                           	opt stack 0
   739  000080                     __tdiv_to_l_@f1:
   740                           	opt stack 0
   741  000080                     ___lldiv@dividend:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x0
   745  000080                     	ds	1
   746  000081                     _isdigit$1518:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1
   750  000081                     	ds	1
   751  000082                     ??_read_adc_raw_no_lib:
   752  000082                     ??_set_pwm1_raw:
   753  000082                     isdigit@c:
   754                           	opt stack 0
   755  000082                     delay_ms@i:
   756                           	opt stack 0
   757  000082                     ___wmul@multiplicand:
   758                           	opt stack 0
   759  000082                     ___awmod@divisor:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x2
   763  000082                     	ds	1
   764  000083                     delay_cycles@n:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x3
   768  000083                     	ds	1
   769  000084                     ___awmod@counter:
   770                           	opt stack 0
   771  000084                     read_adc_raw_no_lib@raw_value:
   772                           	opt stack 0
   773  000084                     delay_cycles@x:
   774                           	opt stack 0
   775  000084                     ___wmul@product:
   776                           	opt stack 0
   777  000084                     __div_to_l_@f2:
   778                           	opt stack 0
   779  000084                     __tdiv_to_l_@f2:
   780                           	opt stack 0
   781  000084                     ___lldiv@divisor:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0x4
   785  000084                     	ds	1
   786  000085                     ___awmod@sign:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x5
   790  000085                     	ds	1
   791  000086                     ??_lcd_send_nibble:
   792  000086                     ?___awdiv:
   793                           	opt stack 0
   794  000086                     ?___xxtofl:
   795                           	opt stack 0
   796  000086                     read_adc_raw_no_lib@channel:
   797                           	opt stack 0
   798  000086                     ___awdiv@dividend:
   799                           	opt stack 0
   800  000086                     ___xxtofl@val:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x6
   804  000086                     	ds	1
   805  000087                     lcd_send_nibble@n:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x7
   809  000087                     	ds	1
   810  000088                     ??__tdiv_to_l_:
   811  000088                     lcd_send_byte@n:
   812                           	opt stack 0
   813  000088                     ___awdiv@divisor:
   814                           	opt stack 0
   815  000088                     __div_to_l_@quot:
   816                           	opt stack 0
   817  000088                     ___lldiv@quotient:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x8
   821  000088                     	ds	1
   822  000089                     lcd_send_byte@cm_data:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x9
   826  000089                     	ds	1
   827  00008A                     ??___xxtofl:
   828  00008A                     lcd_init@i:
   829                           	opt stack 0
   830  00008A                     lcd_gotoxy@y:
   831                           	opt stack 0
   832  00008A                     ___awdiv@counter:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0xA
   836  00008A                     	ds	1
   837  00008B                     lcd_gotoxy@x:
   838                           	opt stack 0
   839  00008B                     ___awdiv@sign:
   840                           	opt stack 0
   841  00008B                     __tdiv_to_l_@quot:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0xB
   845  00008B                     	ds	1
   846  00008C                     lcd_gotoxy@address:
   847                           	opt stack 0
   848  00008C                     __div_to_l_@cntr:
   849                           	opt stack 0
   850  00008C                     ___lldiv@counter:
   851                           	opt stack 0
   852  00008C                     ___awdiv@quotient:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0xC
   856  00008C                     	ds	1
   857  00008D                     ?___llmod:
   858                           	opt stack 0
   859  00008D                     lcd_putc@c:
   860                           	opt stack 0
   861  00008D                     __div_to_l_@exp1:
   862                           	opt stack 0
   863  00008D                     ___llmod@dividend:
   864                           	opt stack 0
   865                           
   866                           ; 4 bytes @ 0xD
   867  00008D                     	ds	1
   868  00008E                     ___xxtofl@sign:
   869                           	opt stack 0
   870  00008E                     lcd_puts@s:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0xE
   874  00008E                     	ds	1
   875  00008F                     __tdiv_to_l_@cntr:
   876                           	opt stack 0
   877  00008F                     ___xxtofl@exp:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0xF
   881  00008F                     	ds	1
   882  000090                     __tdiv_to_l_@exp1:
   883                           	opt stack 0
   884  000090                     ___xxtofl@arg:
   885                           	opt stack 0
   886                           
   887                           ; 4 bytes @ 0x10
   888  000090                     	ds	1
   889  000091                     ___llmod@divisor:
   890                           	opt stack 0
   891                           
   892                           ; 4 bytes @ 0x11
   893  000091                     	ds	3
   894  000094                     ?___fldiv:
   895                           	opt stack 0
   896  000094                     ?___flneg:
   897                           	opt stack 0
   898  000094                     ___flneg@f1:
   899                           	opt stack 0
   900  000094                     ___fldiv@b:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x14
   904  000094                     	ds	1
   905  000095                     ___llmod@counter:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x15
   909  000095                     	ds	3
   910  000098                     ___fldiv@a:
   911                           	opt stack 0
   912                           
   913                           ; 4 bytes @ 0x18
   914  000098                     	ds	4
   915  00009C                     ??___fldiv:
   916                           
   917                           ; 1 bytes @ 0x1C
   918  00009C                     	ds	4
   919  0000A0                     ___fldiv@sign:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x20
   923  0000A0                     	ds	1
   924  0000A1                     ___fldiv@rem:
   925                           	opt stack 0
   926                           
   927                           ; 4 bytes @ 0x21
   928  0000A1                     	ds	4
   929  0000A5                     ___fldiv@new_exp:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x25
   933  0000A5                     	ds	2
   934  0000A7                     ___fldiv@grs:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x27
   938  0000A7                     	ds	4
   939  0000AB                     ___fldiv@bexp:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x2B
   943  0000AB                     	ds	1
   944  0000AC                     ___fldiv@aexp:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x2C
   948  0000AC                     	ds	1
   949  0000AD                     ?_read_adc_voltage:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x2D
   953  0000AD                     	ds	4
   954  0000B1                     read_adc_voltage@voltage:
   955                           	opt stack 0
   956                           
   957                           ; 4 bytes @ 0x31
   958  0000B1                     	ds	4
   959  0000B5                     read_adc_voltage@raw_value:
   960                           	opt stack 0
   961                           
   962                           ; 2 bytes @ 0x35
   963  0000B5                     	ds	2
   964  0000B7                     read_adc_voltage@channel:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x37
   968  0000B7                     	ds	1
   969  0000B8                     ?___flmul:
   970                           	opt stack 0
   971  0000B8                     ___flmul@b:
   972                           	opt stack 0
   973                           
   974                           ; 4 bytes @ 0x38
   975  0000B8                     	ds	4
   976  0000BC                     ___flmul@a:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x3C
   980  0000BC                     	ds	4
   981  0000C0                     ??___flmul:
   982                           
   983                           ; 1 bytes @ 0x40
   984  0000C0                     	ds	4
   985  0000C4                     ___flmul@sign:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x44
   989  0000C4                     	ds	1
   990  0000C5                     ___flmul@grs:
   991                           	opt stack 0
   992                           
   993                           ; 4 bytes @ 0x45
   994  0000C5                     	ds	4
   995  0000C9                     ___flmul@aexp:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x49
   999  0000C9                     	ds	1
  1000  0000CA                     ___flmul@bexp:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x4A
  1004  0000CA                     	ds	1
  1005  0000CB                     ___flmul@prod:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x4B
  1009  0000CB                     	ds	4
  1010  0000CF                     ___flmul@temp:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x4F
  1014  0000CF                     	ds	2
  1015  0000D1                     ?_fround:
  1016                           	opt stack 0
  1017  0000D1                     ?_scale:
  1018                           	opt stack 0
  1019                           
  1020                           ; 4 bytes @ 0x51
  1021  0000D1                     	ds	4
  1022  0000D5                     _fround$1902:
  1023                           	opt stack 0
  1024  0000D5                     _scale$1903:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x55
  1028  0000D5                     	ds	4
  1029  0000D9                     scale@scl:
  1030                           	opt stack 0
  1031  0000D9                     _fround$1901:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x59
  1035  0000D9                     	ds	4
  1036  0000DD                     fround@prec:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x5D
  1040  0000DD                     	ds	1
  1041  0000DE                     ?___fladd:
  1042                           	opt stack 0
  1043  0000DE                     ___fladd@b:
  1044                           	opt stack 0
  1045                           
  1046                           ; 4 bytes @ 0x5E
  1047  0000DE                     	ds	4
  1048  0000E2                     ___fladd@a:
  1049                           	opt stack 0
  1050                           
  1051                           ; 4 bytes @ 0x62
  1052  0000E2                     	ds	4
  1053  0000E6                     ??___fladd:
  1054                           
  1055                           ; 1 bytes @ 0x66
  1056  0000E6                     	ds	8
  1057  0000EE                     ___fladd@signs:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x6E
  1061  0000EE                     	ds	1
  1062  0000EF                     ___fladd@aexp:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x6F
  1066  0000EF                     	ds	1
  1067  0000F0                     ___fladd@bexp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x70
  1071  0000F0                     	ds	1
  1072  0000F1                     ___fladd@grs:
  1073                           	opt stack 0
  1074                           
  1075                           ; 1 bytes @ 0x71
  1076  0000F1                     	ds	1
  1077  0000F2                     ?___flsub:
  1078                           	opt stack 0
  1079  0000F2                     ?___fltol:
  1080                           	opt stack 0
  1081  0000F2                     ___flge@ff1:
  1082                           	opt stack 0
  1083  0000F2                     ___fltol@f1:
  1084                           	opt stack 0
  1085  0000F2                     ___flsub@b:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x72
  1089  0000F2                     	ds	4
  1090  0000F6                     ??___fltol:
  1091  0000F6                     ___flge@ff2:
  1092                           	opt stack 0
  1093  0000F6                     ___flsub@a:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x76
  1097  0000F6                     	ds	4
  1098  0000FA                     ??___flge:
  1099  0000FA                     ___fltol@sign1:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x7A
  1103  0000FA                     	ds	1
  1104  0000FB                     ___fltol@exp1:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x7B
  1108  0000FB                     	ds	1
  1109  0000FC                     set_pwm1_percent@value:
  1110                           	opt stack 0
  1111                           
  1112                           ; 4 bytes @ 0x7C
  1113  0000FC                     	ds	4
  1114  000100                     tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           postdec1	equ	0xFE5
  1121                           fsr1l	equ	0xFE1
  1122                           
  1123                           ; 1 bytes @ 0x80
  1124                           
  1125                           	psect	cstackCOMRAM
  1126  000001                     __pcstackCOMRAM:
  1127                           	opt stack 0
  1128  000001                     ?i2___xxtofl:
  1129                           	opt stack 0
  1130  000001                     i2set_pwm1_raw@raw_value:
  1131                           	opt stack 0
  1132  000001                     i2___xxtofl@val:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x0
  1136  000001                     	ds	2
  1137  000003                     ??i2_set_pwm1_raw:
  1138                           
  1139                           ; 1 bytes @ 0x2
  1140  000003                     	ds	2
  1141  000005                     ??i2___xxtofl:
  1142                           
  1143                           ; 1 bytes @ 0x4
  1144  000005                     	ds	4
  1145  000009                     i2___xxtofl@sign:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x8
  1149  000009                     	ds	1
  1150  00000A                     i2___xxtofl@exp:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x9
  1154  00000A                     	ds	1
  1155  00000B                     i2___xxtofl@arg:
  1156                           	opt stack 0
  1157                           
  1158                           ; 4 bytes @ 0xA
  1159  00000B                     	ds	4
  1160  00000F                     ?i2___flneg:
  1161                           	opt stack 0
  1162  00000F                     ?i2___flmul:
  1163                           	opt stack 0
  1164  00000F                     i2___flneg@f1:
  1165                           	opt stack 0
  1166  00000F                     i2___flmul@b:
  1167                           	opt stack 0
  1168                           
  1169                           ; 4 bytes @ 0xE
  1170  00000F                     	ds	4
  1171  000013                     ?i2___fladd:
  1172                           	opt stack 0
  1173  000013                     i2___fladd@b:
  1174                           	opt stack 0
  1175  000013                     i2___flmul@a:
  1176                           	opt stack 0
  1177                           
  1178                           ; 4 bytes @ 0x12
  1179  000013                     	ds	4
  1180  000017                     ??i2___flmul:
  1181  000017                     i2___fladd@a:
  1182                           	opt stack 0
  1183                           
  1184                           ; 4 bytes @ 0x16
  1185  000017                     	ds	4
  1186  00001B                     ??i2___fladd:
  1187  00001B                     i2___flmul@sign:
  1188                           	opt stack 0
  1189                           
  1190                           ; 1 bytes @ 0x1A
  1191  00001B                     	ds	1
  1192  00001C                     i2___flmul@grs:
  1193                           	opt stack 0
  1194                           
  1195                           ; 4 bytes @ 0x1B
  1196  00001C                     	ds	4
  1197  000020                     i2___flmul@aexp:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0x1F
  1201  000020                     	ds	1
  1202  000021                     i2___flmul@bexp:
  1203                           	opt stack 0
  1204                           
  1205                           ; 1 bytes @ 0x20
  1206  000021                     	ds	1
  1207  000022                     i2___flmul@prod:
  1208                           	opt stack 0
  1209                           
  1210                           ; 4 bytes @ 0x21
  1211  000022                     	ds	1
  1212  000023                     i2___fladd@signs:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0x22
  1216  000023                     	ds	1
  1217  000024                     i2___fladd@aexp:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x23
  1221  000024                     	ds	1
  1222  000025                     i2___fladd@bexp:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x24
  1226  000025                     	ds	1
  1227  000026                     i2___fladd@grs:
  1228                           	opt stack 0
  1229  000026                     i2___flmul@temp:
  1230                           	opt stack 0
  1231                           
  1232                           ; 2 bytes @ 0x25
  1233  000026                     	ds	1
  1234  000027                     ?i2___fltol:
  1235                           	opt stack 0
  1236  000027                     i2___flge@ff1:
  1237                           	opt stack 0
  1238  000027                     i2___fltol@f1:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x26
  1242  000027                     	ds	1
  1243  000028                     ?i2___fldiv:
  1244                           	opt stack 0
  1245  000028                     i2___fldiv@b:
  1246                           	opt stack 0
  1247                           
  1248                           ; 4 bytes @ 0x27
  1249  000028                     	ds	3
  1250  00002B                     ??i2___fltol:
  1251  00002B                     i2___flge@ff2:
  1252                           	opt stack 0
  1253                           
  1254                           ; 4 bytes @ 0x2A
  1255  00002B                     	ds	1
  1256  00002C                     i2___fldiv@a:
  1257                           	opt stack 0
  1258                           
  1259                           ; 4 bytes @ 0x2B
  1260  00002C                     	ds	3
  1261  00002F                     ??i2___flge:
  1262  00002F                     i2___fltol@sign1:
  1263                           	opt stack 0
  1264                           
  1265                           ; 1 bytes @ 0x2E
  1266  00002F                     	ds	1
  1267  000030                     ??i2___fldiv:
  1268  000030                     i2___fltol@exp1:
  1269                           	opt stack 0
  1270                           
  1271                           ; 1 bytes @ 0x2F
  1272  000030                     	ds	4
  1273  000034                     i2___fldiv@sign:
  1274                           	opt stack 0
  1275                           
  1276                           ; 1 bytes @ 0x33
  1277  000034                     	ds	1
  1278  000035                     i2___fldiv@rem:
  1279                           	opt stack 0
  1280                           
  1281                           ; 4 bytes @ 0x34
  1282  000035                     	ds	4
  1283  000039                     i2___fldiv@new_exp:
  1284                           	opt stack 0
  1285                           
  1286                           ; 2 bytes @ 0x38
  1287  000039                     	ds	2
  1288  00003B                     i2___fldiv@grs:
  1289                           	opt stack 0
  1290                           
  1291                           ; 4 bytes @ 0x3A
  1292  00003B                     	ds	4
  1293  00003F                     i2___fldiv@bexp:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0x3E
  1297  00003F                     	ds	1
  1298  000040                     i2___fldiv@aexp:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x3F
  1302  000040                     	ds	1
  1303  000041                     i2set_pwm1_percent@value:
  1304                           	opt stack 0
  1305                           
  1306                           ; 4 bytes @ 0x40
  1307  000041                     	ds	4
  1308  000045                     i2set_pwm1_percent@tmp:
  1309                           	opt stack 0
  1310                           
  1311                           ; 4 bytes @ 0x44
  1312  000045                     	ds	4
  1313  000049                     i2set_pwm1_percent@raw_val:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x48
  1317  000049                     	ds	2
  1318  00004B                     ??_highIsr:
  1319                           
  1320                           ; 1 bytes @ 0x4A
  1321  00004B                     	ds	20
  1322  00005F                     _highIsr$1984:
  1323                           	opt stack 0
  1324                           
  1325                           ; 4 bytes @ 0x5E
  1326  00005F                     	ds	4
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           postdec1	equ	0xFE5
  1334                           fsr1l	equ	0xFE1
  1335                           
  1336 ;;
  1337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1338 ;;
  1339 ;; *************** function _main *****************
  1340 ;; Defined at:
  1341 ;;		line 426 in file "Main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:       18 bytes
  1360 ;; Hardware stack levels required when called:   10
  1361 ;; This function calls:
  1362 ;;		___fladd
  1363 ;;		___flge
  1364 ;;		___flmul
  1365 ;;		___flneg
  1366 ;;		___wmul
  1367 ;;		_autoCool
  1368 ;;		_autoHeat
  1369 ;;		_init
  1370 ;;		_init_adc_no_lib
  1371 ;;		_lcd_gotoxy
  1372 ;;		_lcd_init
  1373 ;;		_lcd_putc
  1374 ;;		_lcd_puts
  1375 ;;		_read_adc_voltage
  1376 ;;		_sprintf
  1377 ;; This function is called by:
  1378 ;;		Startup code after reset
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text0
  1383  000C5E                     __ptext0:
  1384                           	opt stack 0
  1385  000C5E                     _main:
  1386                           	opt stack 21
  1387                           
  1388                           ;Main.c: 428: init();
  1389                           
  1390                           ;incstack = 0
  1391  000C5E  EC2F  F01D         	call	_init	;wreg free
  1392                           
  1393                           ;Main.c: 430: lcd_init();
  1394  000C62  EC57  F020         	call	_lcd_init	;wreg free
  1395                           
  1396                           ;Main.c: 431: init_adc_no_lib();
  1397  000C66  ECF2  F022         	call	_init_adc_no_lib	;wreg free
  1398                           
  1399                           ;Main.c: 432: lcd_putc('\f');
  1400  000C6A  0E0C               	movlw	12
  1401  000C6C  ECC2  F020         	call	_lcd_putc
  1402                           
  1403                           ;Main.c: 434: HS = 0;
  1404  000C70  0E00               	movlw	0
  1405  000C72  0101               	movlb	1	; () banked
  1406  000C74  6F52               	movwf	(_HS+1)& (0+255),b
  1407  000C76  0E00               	movlw	0
  1408  000C78  6F51               	movwf	_HS& (0+255),b
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;Main.c: 435: SP = 0;
  1412  000C7A  0E00               	movlw	0
  1413  000C7C  6F83               	movwf	_SP& (0+255),b
  1414  000C7E  0E00               	movlw	0
  1415  000C80  6F84               	movwf	(_SP+1)& (0+255),b
  1416  000C82  0E00               	movlw	0
  1417  000C84  6F85               	movwf	(_SP+2)& (0+255),b
  1418  000C86  0E00               	movlw	0
  1419  000C88  6F86               	movwf	(_SP+3)& (0+255),b
  1420                           
  1421                           ; BSR set to: 1
  1422                           ;Main.c: 436: OT = 0;
  1423  000C8A  0E00               	movlw	0
  1424  000C8C  6F7F               	movwf	_OT& (0+255),b
  1425  000C8E  0E00               	movlw	0
  1426  000C90  6F80               	movwf	(_OT+1)& (0+255),b
  1427  000C92  0E00               	movlw	0
  1428  000C94  6F81               	movwf	(_OT+2)& (0+255),b
  1429  000C96  0E00               	movlw	0
  1430  000C98  6F82               	movwf	(_OT+3)& (0+255),b
  1431                           
  1432                           ; BSR set to: 1
  1433                           ;Main.c: 437: RT = 0.0;
  1434  000C9A  0E00               	movlw	0
  1435  000C9C  6F7B               	movwf	_RT& (0+255),b
  1436  000C9E  0E00               	movlw	0
  1437  000CA0  6F7C               	movwf	(_RT+1)& (0+255),b
  1438  000CA2  0E00               	movlw	0
  1439  000CA4  6F7D               	movwf	(_RT+2)& (0+255),b
  1440  000CA6  0E00               	movlw	0
  1441  000CA8  6F7E               	movwf	(_RT+3)& (0+255),b
  1442                           
  1443                           ; BSR set to: 1
  1444                           ;Main.c: 438: coolError = 0;
  1445  000CAA  0E00               	movlw	0
  1446  000CAC  6F77               	movwf	_coolError& (0+255),b
  1447  000CAE  0E00               	movlw	0
  1448  000CB0  6F78               	movwf	(_coolError+1)& (0+255),b
  1449  000CB2  0E00               	movlw	0
  1450  000CB4  6F79               	movwf	(_coolError+2)& (0+255),b
  1451  000CB6  0E00               	movlw	0
  1452  000CB8  6F7A               	movwf	(_coolError+3)& (0+255),b
  1453                           
  1454                           ; BSR set to: 1
  1455                           ;Main.c: 439: heatError = 0;
  1456  000CBA  0E00               	movlw	0
  1457  000CBC  6F73               	movwf	_heatError& (0+255),b
  1458  000CBE  0E00               	movlw	0
  1459  000CC0  6F74               	movwf	(_heatError+1)& (0+255),b
  1460  000CC2  0E00               	movlw	0
  1461  000CC4  6F75               	movwf	(_heatError+2)& (0+255),b
  1462  000CC6  0E00               	movlw	0
  1463  000CC8  6F76               	movwf	(_heatError+3)& (0+255),b
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;Main.c: 440: operationMode = 0;
  1467  000CCA  0E00               	movlw	0
  1468  000CCC  6E74               	movwf	_operationMode+1,c
  1469  000CCE  0E00               	movlw	0
  1470  000CD0  6E73               	movwf	_operationMode,c
  1471                           
  1472                           ; BSR set to: 1
  1473                           ;Main.c: 441: autoMode = 0;
  1474  000CD2  0E00               	movlw	0
  1475  000CD4  6E72               	movwf	_autoMode+1,c
  1476  000CD6  0E00               	movlw	0
  1477  000CD8  6E71               	movwf	_autoMode,c
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;Main.c: 442: percentHeatCounter = 0;
  1481  000CDA  0E00               	movlw	0
  1482  000CDC  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  1483  000CDE  0E00               	movlw	0
  1484  000CE0  6F4F               	movwf	_percentHeatCounter& (0+255),b
  1485                           
  1486                           ; BSR set to: 1
  1487                           ;Main.c: 443: percentCoolCounter = 0;
  1488  000CE2  0E00               	movlw	0
  1489  000CE4  6E70               	movwf	_percentCoolCounter+1,c
  1490  000CE6  0E00               	movlw	0
  1491  000CE8  6E6F               	movwf	_percentCoolCounter,c
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;Main.c: 444: timerCounter = 0;
  1495  000CEA  0E00               	movlw	0
  1496  000CEC  6E6E               	movwf	_timerCounter+1,c
  1497  000CEE  0E00               	movlw	0
  1498  000CF0  6E6D               	movwf	_timerCounter,c
  1499  000CF2                     l306:
  1500  000CF2  0004               	clrwdt		;# 
  1501                           
  1502                           ;Main.c: 449: SP = read_adc_voltage(0) * 20;
  1503  000CF4  0E00               	movlw	0
  1504  000CF6  EC53  F01F         	call	_read_adc_voltage
  1505  000CFA  C0AD  F0B8         	movff	?_read_adc_voltage,___flmul@b
  1506  000CFE  C0AE  F0B9         	movff	?_read_adc_voltage+1,___flmul@b+1
  1507  000D02  C0AF  F0BA         	movff	?_read_adc_voltage+2,___flmul@b+2
  1508  000D06  C0B0  F0BB         	movff	?_read_adc_voltage+3,___flmul@b+3
  1509  000D0A  0E00               	movlw	0
  1510  000D0C  0100               	movlb	0	; () banked
  1511  000D0E  6FBC               	movwf	___flmul@a& (0+255),b
  1512  000D10  0E00               	movlw	0
  1513  000D12  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  1514  000D14  0EA0               	movlw	160
  1515  000D16  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  1516  000D18  0E41               	movlw	65
  1517  000D1A  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  1518  000D1C  EC57  F00B         	call	___flmul	;wreg free
  1519  000D20  C0B8  F183         	movff	?___flmul,_SP
  1520  000D24  C0B9  F184         	movff	?___flmul+1,_SP+1
  1521  000D28  C0BA  F185         	movff	?___flmul+2,_SP+2
  1522  000D2C  C0BB  F186         	movff	?___flmul+3,_SP+3
  1523                           
  1524                           ;Main.c: 450: OT = read_adc_voltage(1) * 20;
  1525  000D30  0E01               	movlw	1
  1526  000D32  EC53  F01F         	call	_read_adc_voltage
  1527  000D36  C0AD  F0B8         	movff	?_read_adc_voltage,___flmul@b
  1528  000D3A  C0AE  F0B9         	movff	?_read_adc_voltage+1,___flmul@b+1
  1529  000D3E  C0AF  F0BA         	movff	?_read_adc_voltage+2,___flmul@b+2
  1530  000D42  C0B0  F0BB         	movff	?_read_adc_voltage+3,___flmul@b+3
  1531  000D46  0E00               	movlw	0
  1532  000D48  0100               	movlb	0	; () banked
  1533  000D4A  6FBC               	movwf	___flmul@a& (0+255),b
  1534  000D4C  0E00               	movlw	0
  1535  000D4E  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  1536  000D50  0EA0               	movlw	160
  1537  000D52  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  1538  000D54  0E41               	movlw	65
  1539  000D56  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  1540  000D58  EC57  F00B         	call	___flmul	;wreg free
  1541  000D5C  C0B8  F17F         	movff	?___flmul,_OT
  1542  000D60  C0B9  F180         	movff	?___flmul+1,_OT+1
  1543  000D64  C0BA  F181         	movff	?___flmul+2,_OT+2
  1544  000D68  C0BB  F182         	movff	?___flmul+3,_OT+3
  1545                           
  1546                           ;Main.c: 451: RT = read_adc_voltage(2) * 100.0;
  1547  000D6C  0E02               	movlw	2
  1548  000D6E  EC53  F01F         	call	_read_adc_voltage
  1549  000D72  C0AD  F0B8         	movff	?_read_adc_voltage,___flmul@b
  1550  000D76  C0AE  F0B9         	movff	?_read_adc_voltage+1,___flmul@b+1
  1551  000D7A  C0AF  F0BA         	movff	?_read_adc_voltage+2,___flmul@b+2
  1552  000D7E  C0B0  F0BB         	movff	?_read_adc_voltage+3,___flmul@b+3
  1553  000D82  0E00               	movlw	0
  1554  000D84  0100               	movlb	0	; () banked
  1555  000D86  6FBC               	movwf	___flmul@a& (0+255),b
  1556  000D88  0E00               	movlw	0
  1557  000D8A  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  1558  000D8C  0EC8               	movlw	200
  1559  000D8E  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  1560  000D90  0E42               	movlw	66
  1561  000D92  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  1562  000D94  EC57  F00B         	call	___flmul	;wreg free
  1563  000D98  C0B8  F17B         	movff	?___flmul,_RT
  1564  000D9C  C0B9  F17C         	movff	?___flmul+1,_RT+1
  1565  000DA0  C0BA  F17D         	movff	?___flmul+2,_RT+2
  1566  000DA4  C0BB  F17E         	movff	?___flmul+3,_RT+3
  1567                           
  1568                           ;Main.c: 453: lcd_gotoxy(1, 1);
  1569  000DA8  0E01               	movlw	1
  1570  000DAA  0100               	movlb	0	; () banked
  1571  000DAC  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1572  000DAE  0E01               	movlw	1
  1573  000DB0  EC6D  F021         	call	_lcd_gotoxy
  1574                           
  1575                           ;Main.c: 454: sprintf(Buffer, "RT:%4.2fC ", RT);
  1576  000DB4  0E53               	movlw	low _Buffer
  1577  000DB6  0101               	movlb	1	; () banked
  1578  000DB8  6F00               	movwf	sprintf@sp& (0+255),b
  1579  000DBA  0E01               	movlw	high _Buffer
  1580  000DBC  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1581  000DBE  0EA8               	movlw	low STR_4
  1582  000DC0  6F02               	movwf	sprintf@f& (0+255),b
  1583  000DC2  0EFF               	movlw	high STR_4
  1584  000DC4  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1585  000DC6  C17B  F104         	movff	_RT,?_sprintf+4
  1586  000DCA  C17C  F105         	movff	_RT+1,?_sprintf+5
  1587  000DCE  C17D  F106         	movff	_RT+2,?_sprintf+6
  1588  000DD2  C17E  F107         	movff	_RT+3,?_sprintf+7
  1589  000DD6  EC09  F000         	call	_sprintf	;wreg free
  1590                           
  1591                           ;Main.c: 455: lcd_puts(Buffer);
  1592  000DDA  0E53               	movlw	low _Buffer
  1593  000DDC  0100               	movlb	0	; () banked
  1594  000DDE  6F8E               	movwf	lcd_puts@s& (0+255),b
  1595  000DE0  0E01               	movlw	high _Buffer
  1596  000DE2  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1597  000DE4  ECF3  F020         	call	_lcd_puts	;wreg free
  1598                           
  1599                           ;Main.c: 457: lcd_gotoxy(14, 1);
  1600  000DE8  0E01               	movlw	1
  1601  000DEA  0100               	movlb	0	; () banked
  1602  000DEC  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1603  000DEE  0E0E               	movlw	14
  1604  000DF0  EC6D  F021         	call	_lcd_gotoxy
  1605                           
  1606                           ;Main.c: 458: lcd_puts("H C");
  1607  000DF4  0EEC               	movlw	low STR_5
  1608  000DF6  0100               	movlb	0	; () banked
  1609  000DF8  6F8E               	movwf	lcd_puts@s& (0+255),b
  1610  000DFA  0EFF               	movlw	high STR_5
  1611  000DFC  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1612  000DFE  ECF3  F020         	call	_lcd_puts	;wreg free
  1613                           
  1614                           ;Main.c: 460: lcd_gotoxy(1, 2);
  1615  000E02  0E02               	movlw	2
  1616  000E04  0100               	movlb	0	; () banked
  1617  000E06  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1618  000E08  0E01               	movlw	1
  1619  000E0A  EC6D  F021         	call	_lcd_gotoxy
  1620                           
  1621                           ;Main.c: 461: sprintf(Buffer, "SP:%4.2fC ", SP);
  1622  000E0E  0E53               	movlw	low _Buffer
  1623  000E10  0101               	movlb	1	; () banked
  1624  000E12  6F00               	movwf	sprintf@sp& (0+255),b
  1625  000E14  0E01               	movlw	high _Buffer
  1626  000E16  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1627  000E18  0E9D               	movlw	low STR_6
  1628  000E1A  6F02               	movwf	sprintf@f& (0+255),b
  1629  000E1C  0EFF               	movlw	high STR_6
  1630  000E1E  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1631  000E20  C183  F104         	movff	_SP,?_sprintf+4
  1632  000E24  C184  F105         	movff	_SP+1,?_sprintf+5
  1633  000E28  C185  F106         	movff	_SP+2,?_sprintf+6
  1634  000E2C  C186  F107         	movff	_SP+3,?_sprintf+7
  1635  000E30  EC09  F000         	call	_sprintf	;wreg free
  1636                           
  1637                           ;Main.c: 462: lcd_puts(Buffer);
  1638  000E34  0E53               	movlw	low _Buffer
  1639  000E36  0100               	movlb	0	; () banked
  1640  000E38  6F8E               	movwf	lcd_puts@s& (0+255),b
  1641  000E3A  0E01               	movlw	high _Buffer
  1642  000E3C  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1643  000E3E  ECF3  F020         	call	_lcd_puts	;wreg free
  1644                           
  1645                           ;Main.c: 464: lcd_gotoxy(14, 2);
  1646  000E42  0E02               	movlw	2
  1647  000E44  0100               	movlb	0	; () banked
  1648  000E46  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1649  000E48  0E0E               	movlw	14
  1650  000E4A  EC6D  F021         	call	_lcd_gotoxy
  1651                           
  1652                           ;Main.c: 465: lcd_puts(PORTCbits.RC5 ? "Y" : "N");
  1653  000E4E  BA82               	btfsc	3970,5,c	;volatile
  1654  000E50  D005               	goto	l308
  1655  000E52  0EFB               	movlw	low STR_8
  1656  000E54  0101               	movlb	1	; () banked
  1657  000E56  6F3B               	movwf	_main$1202& (0+255),b
  1658  000E58  0EFF               	movlw	high STR_8
  1659  000E5A  D004               	goto	L3
  1660  000E5C                     l308:
  1661                           
  1662                           ; BSR set to: 1
  1663  000E5C  0EFD               	movlw	low STR_7
  1664  000E5E  0101               	movlb	1	; () banked
  1665  000E60  6F3B               	movwf	_main$1202& (0+255),b
  1666  000E62  0EFF               	movlw	high STR_7
  1667  000E64                     L3:
  1668  000E64  6F3C               	movwf	(_main$1202+1)& (0+255),b
  1669                           
  1670                           ; BSR set to: 1
  1671                           
  1672                           ; BSR set to: 1
  1673  000E66  C13B  F08E         	movff	_main$1202,lcd_puts@s
  1674  000E6A  C13C  F08F         	movff	_main$1202+1,lcd_puts@s+1
  1675  000E6E  ECF3  F020         	call	_lcd_puts	;wreg free
  1676                           
  1677                           ;Main.c: 467: lcd_gotoxy(16, 2);
  1678  000E72  0E02               	movlw	2
  1679  000E74  0100               	movlb	0	; () banked
  1680  000E76  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1681  000E78  0E10               	movlw	16
  1682  000E7A  EC6D  F021         	call	_lcd_gotoxy
  1683                           
  1684                           ;Main.c: 468: lcd_puts(PORTCbits.RC2 ? "Y" : "N");
  1685  000E7E  B482               	btfsc	3970,2,c	;volatile
  1686  000E80  D005               	goto	l312
  1687  000E82  0EFB               	movlw	low STR_8
  1688  000E84  0101               	movlb	1	; () banked
  1689  000E86  6F3D               	movwf	_main$1206& (0+255),b
  1690  000E88  0EFF               	movlw	high STR_8
  1691  000E8A  D004               	goto	L4
  1692  000E8C                     l312:
  1693                           
  1694                           ; BSR set to: 1
  1695  000E8C  0EFD               	movlw	low STR_7
  1696  000E8E  0101               	movlb	1	; () banked
  1697  000E90  6F3D               	movwf	_main$1206& (0+255),b
  1698  000E92  0EFF               	movlw	high STR_7
  1699  000E94                     L4:
  1700  000E94  6F3E               	movwf	(_main$1206+1)& (0+255),b
  1701                           
  1702                           ; BSR set to: 1
  1703                           
  1704                           ; BSR set to: 1
  1705  000E96  C13D  F08E         	movff	_main$1206,lcd_puts@s
  1706  000E9A  C13E  F08F         	movff	_main$1206+1,lcd_puts@s+1
  1707  000E9E  ECF3  F020         	call	_lcd_puts	;wreg free
  1708                           
  1709                           ;Main.c: 470: if (operationMode != 2) {
  1710  000EA2  0E02               	movlw	2
  1711  000EA4  1873               	xorwf	_operationMode,w,c
  1712  000EA6  1074               	iorwf	_operationMode+1,w,c
  1713  000EA8  B4D8               	btfsc	status,2,c
  1714  000EAA  D055               	goto	l315
  1715                           
  1716                           ;Main.c: 471: lcd_gotoxy(1, 3);
  1717  000EAC  0E03               	movlw	3
  1718  000EAE  0100               	movlb	0	; () banked
  1719  000EB0  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1720  000EB2  0E01               	movlw	1
  1721  000EB4  EC6D  F021         	call	_lcd_gotoxy
  1722                           
  1723                           ;Main.c: 472: sprintf(Buffer, "OT:%4.2fC %s:%0d%% ", OT,
  1724                           ;Main.c: 473: operationMode == 0 ? "H" : "C",
  1725                           ;Main.c: 474: operationMode == 0 ? percentHeatCounter * 10 : percentCoolCounter * 10);
  1726  000EB8  5073               	movf	_operationMode,w,c
  1727  000EBA  1074               	iorwf	_operationMode+1,w,c
  1728  000EBC  B4D8               	btfsc	status,2,c
  1729  000EBE  D00C               	goto	l317
  1730  000EC0  C06F  F080         	movff	_percentCoolCounter,___wmul@multiplier
  1731  000EC4  C070  F081         	movff	_percentCoolCounter+1,___wmul@multiplier+1
  1732  000EC8  0E00               	movlw	0
  1733  000ECA  0100               	movlb	0	; () banked
  1734  000ECC  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1735  000ECE  0E0A               	movlw	10
  1736  000ED0  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1737  000ED2  EC5F  F022         	call	___wmul	;wreg free
  1738  000ED6  D00B               	goto	L5
  1739  000ED8                     l317:
  1740  000ED8  C14F  F080         	movff	_percentHeatCounter,___wmul@multiplier
  1741  000EDC  C150  F081         	movff	_percentHeatCounter+1,___wmul@multiplier+1
  1742  000EE0  0E00               	movlw	0
  1743  000EE2  0100               	movlb	0	; () banked
  1744  000EE4  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1745  000EE6  0E0A               	movlw	10
  1746  000EE8  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1747  000EEA  EC5F  F022         	call	___wmul	;wreg free
  1748  000EEE                     L5:
  1749  000EEE  C080  F13F         	movff	?___wmul,_main$1211
  1750  000EF2  C081  F140         	movff	?___wmul+1,_main$1211+1
  1751  000EF6  5073               	movf	_operationMode,w,c
  1752  000EF8  1074               	iorwf	_operationMode+1,w,c
  1753  000EFA  B4D8               	btfsc	status,2,c
  1754  000EFC  D005               	goto	l321
  1755  000EFE  0EEE               	movlw	low (STR_5+2)
  1756  000F00  0101               	movlb	1	; () banked
  1757  000F02  6F41               	movwf	_main$1212& (0+255),b
  1758  000F04  0EFF               	movlw	high (STR_5+2)
  1759  000F06  D004               	goto	L6
  1760  000F08                     l321:
  1761                           
  1762                           ; BSR set to: 1
  1763  000F08  0EF9               	movlw	low STR_12
  1764  000F0A  0101               	movlb	1	; () banked
  1765  000F0C  6F41               	movwf	_main$1212& (0+255),b
  1766  000F0E  0EFF               	movlw	high STR_12
  1767  000F10                     L6:
  1768  000F10  6F42               	movwf	(_main$1212+1)& (0+255),b
  1769                           
  1770                           ; BSR set to: 1
  1771                           
  1772                           ; BSR set to: 1
  1773  000F12  0E53               	movlw	low _Buffer
  1774  000F14  6F00               	movwf	sprintf@sp& (0+255),b
  1775  000F16  0E01               	movlw	high _Buffer
  1776  000F18  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1777  000F1A  0E89               	movlw	low STR_11
  1778  000F1C  6F02               	movwf	sprintf@f& (0+255),b
  1779  000F1E  0EFF               	movlw	high STR_11
  1780  000F20  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1781  000F22  C17F  F104         	movff	_OT,?_sprintf+4
  1782  000F26  C180  F105         	movff	_OT+1,?_sprintf+5
  1783  000F2A  C181  F106         	movff	_OT+2,?_sprintf+6
  1784  000F2E  C182  F107         	movff	_OT+3,?_sprintf+7
  1785  000F32  C141  F108         	movff	_main$1212,?_sprintf+8
  1786  000F36  C142  F109         	movff	_main$1212+1,?_sprintf+9
  1787  000F3A  C13F  F10A         	movff	_main$1211,?_sprintf+10
  1788  000F3E  C140  F10B         	movff	_main$1211+1,?_sprintf+11
  1789  000F42  EC09  F000         	call	_sprintf	;wreg free
  1790                           
  1791                           ;Main.c: 475: lcd_puts(Buffer);
  1792  000F46  0E53               	movlw	low _Buffer
  1793  000F48  0100               	movlb	0	; () banked
  1794  000F4A  6F8E               	movwf	lcd_puts@s& (0+255),b
  1795  000F4C  0E01               	movlw	high _Buffer
  1796  000F4E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1797  000F50  ECF3  F020         	call	_lcd_puts	;wreg free
  1798                           
  1799                           ;Main.c: 476: } else {
  1800  000F54  D020               	goto	l324
  1801  000F56                     l315:
  1802                           
  1803                           ;Main.c: 477: lcd_gotoxy(1, 3);
  1804  000F56  0E03               	movlw	3
  1805  000F58  0100               	movlb	0	; () banked
  1806  000F5A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1807  000F5C  0E01               	movlw	1
  1808  000F5E  EC6D  F021         	call	_lcd_gotoxy
  1809                           
  1810                           ;Main.c: 478: sprintf(Buffer, "OT:%4.2fC", OT);
  1811  000F62  0E53               	movlw	low _Buffer
  1812  000F64  0101               	movlb	1	; () banked
  1813  000F66  6F00               	movwf	sprintf@sp& (0+255),b
  1814  000F68  0E01               	movlw	high _Buffer
  1815  000F6A  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1816  000F6C  0EB3               	movlw	low STR_14
  1817  000F6E  6F02               	movwf	sprintf@f& (0+255),b
  1818  000F70  0EFF               	movlw	high STR_14
  1819  000F72  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1820  000F74  C17F  F104         	movff	_OT,?_sprintf+4
  1821  000F78  C180  F105         	movff	_OT+1,?_sprintf+5
  1822  000F7C  C181  F106         	movff	_OT+2,?_sprintf+6
  1823  000F80  C182  F107         	movff	_OT+3,?_sprintf+7
  1824  000F84  EC09  F000         	call	_sprintf	;wreg free
  1825                           
  1826                           ;Main.c: 479: lcd_puts(Buffer);
  1827  000F88  0E53               	movlw	low _Buffer
  1828  000F8A  0100               	movlb	0	; () banked
  1829  000F8C  6F8E               	movwf	lcd_puts@s& (0+255),b
  1830  000F8E  0E01               	movlw	high _Buffer
  1831  000F90  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1832  000F92  ECF3  F020         	call	_lcd_puts	;wreg free
  1833  000F96                     l324:
  1834                           
  1835                           ;Main.c: 480: }
  1836                           ;Main.c: 482: lcd_gotoxy(1, 4);
  1837  000F96  0E04               	movlw	4
  1838  000F98  0100               	movlb	0	; () banked
  1839  000F9A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1840  000F9C  0E01               	movlw	1
  1841  000F9E  EC6D  F021         	call	_lcd_gotoxy
  1842                           
  1843                           ;Main.c: 483: sprintf(Buffer, "MD:%s", operationMode == 0 ? "Heat" : operationMode == 1 
      +                          ? "Cool" : "Auto");
  1844  000FA2  5073               	movf	_operationMode,w,c
  1845  000FA4  1074               	iorwf	_operationMode+1,w,c
  1846  000FA6  B4D8               	btfsc	status,2,c
  1847  000FA8  D013               	goto	l326
  1848  000FAA  0473               	decf	_operationMode,w,c
  1849  000FAC  1074               	iorwf	_operationMode+1,w,c
  1850  000FAE  B4D8               	btfsc	status,2,c
  1851  000FB0  D005               	goto	l330
  1852  000FB2  0EE2               	movlw	low STR_18
  1853  000FB4  0101               	movlb	1	; () banked
  1854  000FB6  6F45               	movwf	_main$1221& (0+255),b
  1855  000FB8  0EFF               	movlw	high STR_18
  1856  000FBA  D004               	goto	L1
  1857  000FBC                     l330:
  1858                           
  1859                           ; BSR set to: 1
  1860  000FBC  0EDD               	movlw	low STR_17
  1861  000FBE  0101               	movlb	1	; () banked
  1862  000FC0  6F45               	movwf	_main$1221& (0+255),b
  1863  000FC2  0EFF               	movlw	high STR_17
  1864  000FC4                     L1:
  1865  000FC4  6F46               	movwf	(_main$1221+1)& (0+255),b
  1866                           
  1867                           ; BSR set to: 1
  1868  000FC6  C145  F143         	movff	_main$1221,_main$1220
  1869  000FCA  C146  F144         	movff	_main$1221+1,_main$1220+1
  1870  000FCE  D005               	goto	l328
  1871  000FD0                     l326:
  1872                           
  1873                           ; BSR set to: 1
  1874  000FD0  0EE7               	movlw	low STR_16
  1875  000FD2  0101               	movlb	1	; () banked
  1876  000FD4  6F43               	movwf	_main$1220& (0+255),b
  1877  000FD6  0EFF               	movlw	high STR_16
  1878  000FD8  6F44               	movwf	(_main$1220+1)& (0+255),b
  1879  000FDA                     l328:
  1880                           
  1881                           ; BSR set to: 1
  1882                           
  1883                           ; BSR set to: 1
  1884  000FDA  0E53               	movlw	low _Buffer
  1885  000FDC  6F00               	movwf	sprintf@sp& (0+255),b
  1886  000FDE  0E01               	movlw	high _Buffer
  1887  000FE0  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1888  000FE2  0ED2               	movlw	low STR_15
  1889  000FE4  6F02               	movwf	sprintf@f& (0+255),b
  1890  000FE6  0EFF               	movlw	high STR_15
  1891  000FE8  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1892  000FEA  C143  F104         	movff	_main$1220,?_sprintf+4
  1893  000FEE  C144  F105         	movff	_main$1220+1,?_sprintf+5
  1894  000FF2  EC09  F000         	call	_sprintf	;wreg free
  1895                           
  1896                           ;Main.c: 484: lcd_puts(Buffer);
  1897  000FF6  0E53               	movlw	low _Buffer
  1898  000FF8  0100               	movlb	0	; () banked
  1899  000FFA  6F8E               	movwf	lcd_puts@s& (0+255),b
  1900  000FFC  0E01               	movlw	high _Buffer
  1901  000FFE  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1902  001000  ECF3  F020         	call	_lcd_puts	;wreg free
  1903                           
  1904                           ;Main.c: 486: lcd_gotoxy(13, 4);
  1905  001004  0E04               	movlw	4
  1906  001006  0100               	movlb	0	; () banked
  1907  001008  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1908  00100A  0E0D               	movlw	13
  1909  00100C  EC6D  F021         	call	_lcd_gotoxy
  1910                           
  1911                           ;Main.c: 487: if (operationMode == 2)sprintf(Buffer, "HS=%d", HS);
  1912  001010  0E02               	movlw	2
  1913  001012  1873               	xorwf	_operationMode,w,c
  1914  001014  1074               	iorwf	_operationMode+1,w,c
  1915  001016  A4D8               	btfss	status,2,c
  1916  001018  D010               	goto	l333
  1917  00101A  0E53               	movlw	low _Buffer
  1918  00101C  0101               	movlb	1	; () banked
  1919  00101E  6F00               	movwf	sprintf@sp& (0+255),b
  1920  001020  0E01               	movlw	high _Buffer
  1921  001022  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1922  001024  0ECC               	movlw	low STR_19
  1923  001026  6F02               	movwf	sprintf@f& (0+255),b
  1924  001028  0EFF               	movlw	high STR_19
  1925  00102A  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1926  00102C  C151  F104         	movff	_HS,?_sprintf+4
  1927  001030  C152  F105         	movff	_HS+1,?_sprintf+5
  1928  001034  EC09  F000         	call	_sprintf	;wreg free
  1929  001038  D00B               	goto	l334
  1930  00103A                     l333:
  1931                           
  1932                           ;Main.c: 488: else sprintf(Buffer, "    ");
  1933  00103A  0E53               	movlw	low _Buffer
  1934  00103C  0101               	movlb	1	; () banked
  1935  00103E  6F00               	movwf	sprintf@sp& (0+255),b
  1936  001040  0E01               	movlw	high _Buffer
  1937  001042  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1938  001044  0ED8               	movlw	low STR_20
  1939  001046  6F02               	movwf	sprintf@f& (0+255),b
  1940  001048  0EFF               	movlw	high STR_20
  1941  00104A  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1942  00104C  EC09  F000         	call	_sprintf	;wreg free
  1943  001050                     l334:
  1944                           
  1945                           ;Main.c: 489: lcd_puts(Buffer);
  1946  001050  0E53               	movlw	low _Buffer
  1947  001052  0100               	movlb	0	; () banked
  1948  001054  6F8E               	movwf	lcd_puts@s& (0+255),b
  1949  001056  0E01               	movlw	high _Buffer
  1950  001058  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1951  00105A  ECF3  F020         	call	_lcd_puts	;wreg free
  1952                           
  1953                           ;Main.c: 491: if (operationMode == 2) autoMode = OT > 60 ? 0 : OT < 40 ? 1 : 2;
  1954  00105E  0E02               	movlw	2
  1955  001060  1873               	xorwf	_operationMode,w,c
  1956  001062  1074               	iorwf	_operationMode+1,w,c
  1957  001064  A4D8               	btfss	status,2,c
  1958  001066  D03E               	goto	l339
  1959  001068  0E00               	movlw	0
  1960  00106A  0100               	movlb	0	; () banked
  1961  00106C  6FF2               	movwf	___flge@ff1& (0+255),b
  1962  00106E  0E00               	movlw	0
  1963  001070  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  1964  001072  0E70               	movlw	112
  1965  001074  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  1966  001076  0E42               	movlw	66
  1967  001078  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  1968  00107A  C17F  F0F6         	movff	_OT,___flge@ff2
  1969  00107E  C180  F0F7         	movff	_OT+1,___flge@ff2+1
  1970  001082  C181  F0F8         	movff	_OT+2,___flge@ff2+2
  1971  001086  C182  F0F9         	movff	_OT+3,___flge@ff2+3
  1972  00108A  EC0E  F01C         	call	___flge	;wreg free
  1973  00108E  0100               	movlb	0	; () banked
  1974  001090  A0D8               	btfss	status,0,c
  1975  001092  D024               	goto	l337
  1976                           
  1977                           ; BSR set to: 0
  1978  001094  C17F  F0F2         	movff	_OT,___flge@ff1
  1979  001098  C180  F0F3         	movff	_OT+1,___flge@ff1+1
  1980  00109C  C181  F0F4         	movff	_OT+2,___flge@ff1+2
  1981  0010A0  C182  F0F5         	movff	_OT+3,___flge@ff1+3
  1982  0010A4  0E00               	movlw	0
  1983  0010A6  6FF6               	movwf	___flge@ff2& (0+255),b
  1984  0010A8  0E00               	movlw	0
  1985  0010AA  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  1986  0010AC  0E20               	movlw	32
  1987  0010AE  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  1988  0010B0  0E42               	movlw	66
  1989  0010B2  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  1990  0010B4  EC0E  F01C         	call	___flge	;wreg free
  1991  0010B8  0100               	movlb	0	; () banked
  1992  0010BA  A0D8               	btfss	status,0,c
  1993  0010BC  D005               	goto	l341
  1994                           
  1995                           ; BSR set to: 0
  1996  0010BE  0E00               	movlw	0
  1997  0010C0  0101               	movlb	1	; () banked
  1998  0010C2  6F48               	movwf	(_main$1224+1)& (0+255),b
  1999  0010C4  0E02               	movlw	2
  2000  0010C6  D004               	goto	L7
  2001  0010C8                     l341:
  2002                           
  2003                           ; BSR set to: 1
  2004  0010C8  0E00               	movlw	0
  2005  0010CA  0101               	movlb	1	; () banked
  2006  0010CC  6F48               	movwf	(_main$1224+1)& (0+255),b
  2007  0010CE  0E01               	movlw	1
  2008  0010D0                     L7:
  2009  0010D0  6F47               	movwf	_main$1224& (0+255),b
  2010                           
  2011                           ; BSR set to: 1
  2012                           
  2013                           ; BSR set to: 1
  2014  0010D2  C147  F071         	movff	_main$1224,_autoMode
  2015  0010D6  C148  F072         	movff	_main$1224+1,_autoMode+1
  2016  0010DA  D004               	goto	l339
  2017  0010DC                     l337:
  2018                           
  2019                           ; BSR set to: 1
  2020  0010DC  0E00               	movlw	0
  2021  0010DE  6E72               	movwf	_autoMode+1,c
  2022  0010E0  0E00               	movlw	0
  2023  0010E2  6E71               	movwf	_autoMode,c
  2024  0010E4                     l339:
  2025                           
  2026                           ;Main.c: 493: lcd_gotoxy(9, 4);
  2027  0010E4  0E04               	movlw	4
  2028  0010E6  0100               	movlb	0	; () banked
  2029  0010E8  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  2030  0010EA  0E09               	movlw	9
  2031  0010EC  EC6D  F021         	call	_lcd_gotoxy
  2032                           
  2033                           ;Main.c: 494: if (operationMode == 2)sprintf(Buffer, "%s", autoMode == 0 ? "CL" : autoMo
      +                          de == 1 ? "HT" : "HC");
  2034  0010F0  0E02               	movlw	2
  2035  0010F2  1873               	xorwf	_operationMode,w,c
  2036  0010F4  1074               	iorwf	_operationMode+1,w,c
  2037  0010F6  A4D8               	btfss	status,2,c
  2038  0010F8  D02B               	goto	l344
  2039  0010FA  5071               	movf	_autoMode,w,c
  2040  0010FC  1072               	iorwf	_autoMode+1,w,c
  2041  0010FE  B4D8               	btfsc	status,2,c
  2042  001100  D013               	goto	l346
  2043  001102  0471               	decf	_autoMode,w,c
  2044  001104  1072               	iorwf	_autoMode+1,w,c
  2045  001106  B4D8               	btfsc	status,2,c
  2046  001108  D005               	goto	l350
  2047  00110A  0EF0               	movlw	low STR_24
  2048  00110C  0101               	movlb	1	; () banked
  2049  00110E  6F4B               	movwf	_main$1232& (0+255),b
  2050  001110  0EFF               	movlw	high STR_24
  2051  001112  D004               	goto	L2
  2052  001114                     l350:
  2053                           
  2054                           ; BSR set to: 1
  2055  001114  0EF6               	movlw	low STR_23
  2056  001116  0101               	movlb	1	; () banked
  2057  001118  6F4B               	movwf	_main$1232& (0+255),b
  2058  00111A  0EFF               	movlw	high STR_23
  2059  00111C                     L2:
  2060  00111C  6F4C               	movwf	(_main$1232+1)& (0+255),b
  2061                           
  2062                           ; BSR set to: 1
  2063  00111E  C14B  F149         	movff	_main$1232,_main$1231
  2064  001122  C14C  F14A         	movff	_main$1232+1,_main$1231+1
  2065  001126  D005               	goto	l348
  2066  001128                     l346:
  2067                           
  2068                           ; BSR set to: 1
  2069  001128  0EF3               	movlw	low STR_22
  2070  00112A  0101               	movlb	1	; () banked
  2071  00112C  6F49               	movwf	_main$1231& (0+255),b
  2072  00112E  0EFF               	movlw	high STR_22
  2073  001130  6F4A               	movwf	(_main$1231+1)& (0+255),b
  2074  001132                     l348:
  2075                           
  2076                           ; BSR set to: 1
  2077                           
  2078                           ; BSR set to: 1
  2079  001132  0E53               	movlw	low _Buffer
  2080  001134  6F00               	movwf	sprintf@sp& (0+255),b
  2081  001136  0E01               	movlw	high _Buffer
  2082  001138  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2083  00113A  0ED5               	movlw	low (STR_15+3)
  2084  00113C  6F02               	movwf	sprintf@f& (0+255),b
  2085  00113E  0EFF               	movlw	high (STR_15+3)
  2086  001140  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2087  001142  C149  F104         	movff	_main$1231,?_sprintf+4
  2088  001146  C14A  F105         	movff	_main$1231+1,?_sprintf+5
  2089  00114A  EC09  F000         	call	_sprintf	;wreg free
  2090  00114E  D00B               	goto	l353
  2091  001150                     l344:
  2092                           
  2093                           ;Main.c: 495: else sprintf(Buffer, "  ");
  2094  001150  0E53               	movlw	low _Buffer
  2095  001152  0101               	movlb	1	; () banked
  2096  001154  6F00               	movwf	sprintf@sp& (0+255),b
  2097  001156  0E01               	movlw	high _Buffer
  2098  001158  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2099  00115A  0EDA               	movlw	low (STR_20+2)
  2100  00115C  6F02               	movwf	sprintf@f& (0+255),b
  2101  00115E  0EFF               	movlw	high (STR_20+2)
  2102  001160  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2103  001162  EC09  F000         	call	_sprintf	;wreg free
  2104  001166                     l353:
  2105                           
  2106                           ;Main.c: 496: lcd_puts(Buffer);
  2107  001166  0E53               	movlw	low _Buffer
  2108  001168  0100               	movlb	0	; () banked
  2109  00116A  6F8E               	movwf	lcd_puts@s& (0+255),b
  2110  00116C  0E01               	movlw	high _Buffer
  2111  00116E  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  2112  001170  ECF3  F020         	call	_lcd_puts	;wreg free
  2113                           
  2114                           ;Main.c: 498: if (operationMode == 2) {
  2115  001174  0E02               	movlw	2
  2116  001176  1873               	xorwf	_operationMode,w,c
  2117  001178  1074               	iorwf	_operationMode+1,w,c
  2118  00117A  A4D8               	btfss	status,2,c
  2119  00117C  D5BA               	goto	l306
  2120                           
  2121                           ;Main.c: 499: if (autoMode == 0) autoCool();
  2122  00117E  5071               	movf	_autoMode,w,c
  2123  001180  1072               	iorwf	_autoMode+1,w,c
  2124  001182  A4D8               	btfss	status,2,c
  2125  001184  D003               	goto	l355
  2126  001186  EC7A  F017         	call	_autoCool	;wreg free
  2127  00118A  D5B3               	goto	l306
  2128  00118C                     l355:
  2129                           
  2130                           ;Main.c: 500: else if (autoMode == 1) autoHeat();
  2131  00118C  0471               	decf	_autoMode,w,c
  2132  00118E  1072               	iorwf	_autoMode+1,w,c
  2133  001190  A4D8               	btfss	status,2,c
  2134  001192  D003               	goto	l357
  2135  001194  EC96  F018         	call	_autoHeat	;wreg free
  2136  001198  D5AC               	goto	l306
  2137  00119A                     l357:
  2138                           
  2139                           ;Main.c: 501: else (SP - RT) > 0 ? autoHeat() : autoCool();
  2140  00119A  0E00               	movlw	0
  2141  00119C  0100               	movlb	0	; () banked
  2142  00119E  6FF2               	movwf	___flge@ff1& (0+255),b
  2143  0011A0  0E00               	movlw	0
  2144  0011A2  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  2145  0011A4  0E00               	movlw	0
  2146  0011A6  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  2147  0011A8  0E00               	movlw	0
  2148  0011AA  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  2149  0011AC  C183  F0E2         	movff	_SP,___fladd@a
  2150  0011B0  C184  F0E3         	movff	_SP+1,___fladd@a+1
  2151  0011B4  C185  F0E4         	movff	_SP+2,___fladd@a+2
  2152  0011B8  C186  F0E5         	movff	_SP+3,___fladd@a+3
  2153  0011BC  C17B  F094         	movff	_RT,___flneg@f1
  2154  0011C0  C17C  F095         	movff	_RT+1,___flneg@f1+1
  2155  0011C4  C17D  F096         	movff	_RT+2,___flneg@f1+2
  2156  0011C8  C17E  F097         	movff	_RT+3,___flneg@f1+3
  2157  0011CC  ECEC  F021         	call	___flneg	;wreg free
  2158  0011D0  C094  F0DE         	movff	?___flneg,___fladd@b
  2159  0011D4  C095  F0DF         	movff	?___flneg+1,___fladd@b+1
  2160  0011D8  C096  F0E0         	movff	?___flneg+2,___fladd@b+2
  2161  0011DC  C097  F0E1         	movff	?___flneg+3,___fladd@b+3
  2162  0011E0  ECA8  F00E         	call	___fladd	;wreg free
  2163  0011E4  C0DE  F0F6         	movff	?___fladd,___flge@ff2
  2164  0011E8  C0DF  F0F7         	movff	?___fladd+1,___flge@ff2+1
  2165  0011EC  C0E0  F0F8         	movff	?___fladd+2,___flge@ff2+2
  2166  0011F0  C0E1  F0F9         	movff	?___fladd+3,___flge@ff2+3
  2167  0011F4  EC0E  F01C         	call	___flge	;wreg free
  2168  0011F8  0100               	movlb	0	; () banked
  2169  0011FA  B0D8               	btfsc	status,0,c
  2170  0011FC  D003               	goto	l360
  2171                           
  2172                           ; BSR set to: 0
  2173  0011FE  EC96  F018         	call	_autoHeat	;wreg free
  2174  001202  D577               	goto	l306
  2175  001204                     l360:
  2176  001204  EC7A  F017         	call	_autoCool	;wreg free
  2177  001208  D574               	goto	l306
  2178  00120A                     __end_of_main:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           fsr1l	equ	0xFE1
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _read_adc_voltage *****************
  2191 ;; Defined at:
  2192 ;;		line 140 in file "Main.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  channel         1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  channel         1   55[BANK0 ] unsigned char 
  2197 ;;  voltage         4   49[BANK0 ] float 
  2198 ;;  raw_value       2   53[BANK0 ] int 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  4   45[BANK0 ] float 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:       11 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    4
  2215 ;; This function calls:
  2216 ;;		___fldiv
  2217 ;;		___wmul
  2218 ;;		___xxtofl
  2219 ;;		_read_adc_raw_no_lib
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text1
  2226  003EA6                     __ptext1:
  2227                           	opt stack 0
  2228  003EA6                     _read_adc_voltage:
  2229                           	opt stack 26
  2230                           
  2231                           ;incstack = 0
  2232                           ;read_adc_voltage@channel stored from wreg
  2233  003EA6  0100               	movlb	0	; () banked
  2234  003EA8  6FB7               	movwf	read_adc_voltage@channel& (0+255),b
  2235                           
  2236                           ;Main.c: 141: int raw_value;
  2237                           ;Main.c: 142: float voltage;
  2238                           ;Main.c: 143: raw_value = read_adc_raw_no_lib(channel);
  2239  003EAA  0100               	movlb	0	; () banked
  2240  003EAC  51B7               	movf	read_adc_voltage@channel& (0+255),w,b
  2241  003EAE  ECB2  F021         	call	_read_adc_raw_no_lib
  2242  003EB2  C080  F0B5         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  2243  003EB6  C081  F0B6         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  2244                           
  2245                           ;Main.c: 144: voltage = (raw_value * 5) / 1023.0;
  2246  003EBA  C0B5  F080         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  2247  003EBE  C0B6  F081         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  2248  003EC2  0E00               	movlw	0
  2249  003EC4  0100               	movlb	0	; () banked
  2250  003EC6  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2251  003EC8  0E05               	movlw	5
  2252  003ECA  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2253  003ECC  EC5F  F022         	call	___wmul	;wreg free
  2254  003ED0  0100               	movlb	0	; () banked
  2255  003ED2  C080  F086         	movff	?___wmul,___xxtofl@val
  2256  003ED6  C081  F087         	movff	?___wmul+1,___xxtofl@val+1
  2257  003EDA  0E00               	movlw	0
  2258  003EDC  BF87               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2259  003EDE  0EFF               	movlw	-1
  2260  003EE0  6F88               	movwf	(___xxtofl@val+2)& (0+255),b
  2261  003EE2  6F89               	movwf	(___xxtofl@val+3)& (0+255),b
  2262  003EE4  0E01               	movlw	1
  2263  003EE6  EC8D  F019         	call	___xxtofl
  2264  003EEA  C086  F094         	movff	?___xxtofl,___fldiv@b
  2265  003EEE  C087  F095         	movff	?___xxtofl+1,___fldiv@b+1
  2266  003EF2  C088  F096         	movff	?___xxtofl+2,___fldiv@b+2
  2267  003EF6  C089  F097         	movff	?___xxtofl+3,___fldiv@b+3
  2268  003EFA  0E00               	movlw	0
  2269  003EFC  0100               	movlb	0	; () banked
  2270  003EFE  6F98               	movwf	___fldiv@a& (0+255),b
  2271  003F00  0EC0               	movlw	192
  2272  003F02  6F99               	movwf	(___fldiv@a+1)& (0+255),b
  2273  003F04  0E7F               	movlw	127
  2274  003F06  6F9A               	movwf	(___fldiv@a+2)& (0+255),b
  2275  003F08  0E44               	movlw	68
  2276  003F0A  6F9B               	movwf	(___fldiv@a+3)& (0+255),b
  2277  003F0C  ECC5  F014         	call	___fldiv	;wreg free
  2278  003F10  C094  F0B1         	movff	?___fldiv,read_adc_voltage@voltage
  2279  003F14  C095  F0B2         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  2280  003F18  C096  F0B3         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  2281  003F1C  C097  F0B4         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  2282                           
  2283                           ;Main.c: 145: return voltage;
  2284  003F20  C0B1  F0AD         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  2285  003F24  C0B2  F0AE         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  2286  003F28  C0B3  F0AF         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  2287  003F2C  C0B4  F0B0         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  2288  003F30  0012               	return	
  2289  003F32                     __end_of_read_adc_voltage:
  2290                           	opt stack 0
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           postinc0	equ	0xFEE
  2296                           wreg	equ	0xFE8
  2297                           postdec1	equ	0xFE5
  2298                           fsr1l	equ	0xFE1
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _read_adc_raw_no_lib *****************
  2302 ;; Defined at:
  2303 ;;		line 131 in file "Main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  channel         1    wreg     unsigned char 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  channel         1    6[BANK0 ] unsigned char 
  2308 ;;  raw_value       2    4[BANK0 ] int 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  2    0[BANK0 ] int 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:        7 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    3
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_read_adc_voltage
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text2
  2333  004364                     __ptext2:
  2334                           	opt stack 0
  2335  004364                     _read_adc_raw_no_lib:
  2336                           	opt stack 26
  2337                           
  2338                           ;incstack = 0
  2339                           ;read_adc_raw_no_lib@channel stored from wreg
  2340  004364  0100               	movlb	0	; () banked
  2341  004366  6F86               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  2342                           
  2343                           ;Main.c: 132: int raw_value;
  2344                           ;Main.c: 133: ADCON0bits.CHS = channel;
  2345  004368  C086  F082         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  2346  00436C  0100               	movlb	0	; () banked
  2347  00436E  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  2348  004370  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  2349  004372  50C2               	movf	4034,w,c	;volatile
  2350  004374  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  2351  004376  0BC3               	andlw	-61
  2352  004378  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  2353  00437A  6EC2               	movwf	4034,c	;volatile
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;Main.c: 134: ADCON0bits.GO = 1;
  2357  00437C  82C2               	bsf	4034,1,c	;volatile
  2358  00437E                     
  2359                           ; BSR set to: 0
  2360  00437E  B2C2               	btfsc	4034,1,c	;volatile
  2361  004380  D7FE               	goto	l150
  2362                           
  2363                           ;Main.c: 136: raw_value = ADRESH << 8 | ADRESL;
  2364  004382  50C3               	movf	4035,w,c	;volatile
  2365  004384  CFC4 F082          	movff	4036,??_read_adc_raw_no_lib	;volatile
  2366  004388  0100               	movlb	0	; () banked
  2367  00438A  6B83               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  2368  00438C  C082  F083         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  2369  004390  6B82               	clrf	??_read_adc_raw_no_lib& (0+255),b
  2370  004392  1182               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  2371  004394  6F84               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  2372  004396  5183               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  2373  004398  6F85               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;Main.c: 137: return raw_value;
  2377  00439A  C084  F080         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  2378  00439E  C085  F081         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  2379  0043A2  0012               	return	
  2380  0043A4                     __end_of_read_adc_raw_no_lib:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postdec1	equ	0xFE5
  2389                           fsr1l	equ	0xFE1
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _lcd_init *****************
  2393 ;; Defined at:
  2394 ;;		line 172 in file "Main.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  i               1   10[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;Total ram usage:        1 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    6
  2415 ;; This function calls:
  2416 ;;		_delay_ms
  2417 ;;		_lcd_send_byte
  2418 ;;		_lcd_send_nibble
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text3
  2425  0040AE                     __ptext3:
  2426                           	opt stack 0
  2427  0040AE                     _lcd_init:
  2428                           	opt stack 24
  2429                           
  2430                           ;Main.c: 173: unsigned char i;
  2431                           ;Main.c: 174: PORTEbits.RE2 = 0;
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;incstack = 0
  2435  0040AE  9484               	bcf	3972,2,c	;volatile
  2436                           
  2437                           ;Main.c: 175: PORTEbits.RE1 = 0;
  2438  0040B0  9284               	bcf	3972,1,c	;volatile
  2439                           
  2440                           ;Main.c: 177: delay_ms(25);
  2441  0040B2  0E00               	movlw	0
  2442  0040B4  0100               	movlb	0	; () banked
  2443  0040B6  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  2444  0040B8  0E19               	movlw	25
  2445  0040BA  6F80               	movwf	delay_ms@n& (0+255),b
  2446  0040BC  EC4A  F022         	call	_delay_ms	;wreg free
  2447                           
  2448                           ;Main.c: 178: for (i = 1; i <= 3; ++i) {
  2449  0040C0  0E01               	movlw	1
  2450  0040C2  0100               	movlb	0	; () banked
  2451  0040C4  6F8A               	movwf	lcd_init@i& (0+255),b
  2452  0040C6                     l5614:
  2453                           
  2454                           ; BSR set to: 0
  2455  0040C6  0E03               	movlw	3
  2456  0040C8  658A               	cpfsgt	lcd_init@i& (0+255),b
  2457  0040CA  D001               	goto	l172
  2458  0040CC  D00D               	goto	u7010
  2459  0040CE                     l172:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;Main.c: 179: lcd_send_nibble(3);
  2463                           
  2464                           ; BSR set to: 0
  2465  0040CE  0E03               	movlw	3
  2466  0040D0  EC73  F022         	call	_lcd_send_nibble
  2467                           
  2468                           ;Main.c: 180: delay_ms(6);
  2469  0040D4  0E00               	movlw	0
  2470  0040D6  0100               	movlb	0	; () banked
  2471  0040D8  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  2472  0040DA  0E06               	movlw	6
  2473  0040DC  6F80               	movwf	delay_ms@n& (0+255),b
  2474  0040DE  EC4A  F022         	call	_delay_ms	;wreg free
  2475  0040E2  0100               	movlb	0	; () banked
  2476  0040E4  2B8A               	incf	lcd_init@i& (0+255),f,b
  2477  0040E6  D7EF               	goto	l5614
  2478  0040E8                     u7010:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;Main.c: 181: }
  2482                           ;Main.c: 183: lcd_send_nibble(2);
  2483                           
  2484                           ; BSR set to: 0
  2485  0040E8  0E02               	movlw	2
  2486  0040EA  EC73  F022         	call	_lcd_send_nibble
  2487                           
  2488                           ;Main.c: 184: for (i = 0; i <= 3; ++i) lcd_send_byte(0, LCD_INIT_STRING[i]);
  2489  0040EE  0E00               	movlw	0
  2490  0040F0  0100               	movlb	0	; () banked
  2491  0040F2  6F8A               	movwf	lcd_init@i& (0+255),b
  2492  0040F4                     l5628:
  2493                           
  2494                           ; BSR set to: 0
  2495  0040F4  0E03               	movlw	3
  2496  0040F6  658A               	cpfsgt	lcd_init@i& (0+255),b
  2497  0040F8  D001               	goto	l174
  2498  0040FA  0012               	return	
  2499  0040FC                     l174:
  2500                           
  2501                           ; BSR set to: 0
  2502                           
  2503                           ; BSR set to: 0
  2504  0040FC  518A               	movf	lcd_init@i& (0+255),w,b
  2505  0040FE  0D01               	mullw	1
  2506  004100  0E75               	movlw	low _LCD_INIT_STRING
  2507  004102  24F3               	addwf	prodl,w,c
  2508  004104  6ED9               	movwf	fsr2l,c
  2509  004106  0E00               	movlw	high _LCD_INIT_STRING
  2510  004108  20F4               	addwfc	prodh,w,c
  2511  00410A  6EDA               	movwf	fsr2h,c
  2512  00410C  50DF               	movf	indf2,w,c
  2513  00410E  6F88               	movwf	lcd_send_byte@n& (0+255),b
  2514  004110  0E00               	movlw	0
  2515  004112  EC1F  F021         	call	_lcd_send_byte
  2516  004116  0100               	movlb	0	; () banked
  2517  004118  2B8A               	incf	lcd_init@i& (0+255),f,b
  2518  00411A  D7EC               	goto	l5628
  2519  00411C                     __end_of_lcd_init:
  2520                           	opt stack 0
  2521                           tblptru	equ	0xFF8
  2522                           tblptrh	equ	0xFF7
  2523                           tblptrl	equ	0xFF6
  2524                           tablat	equ	0xFF5
  2525                           prodh	equ	0xFF4
  2526                           prodl	equ	0xFF3
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           postdec1	equ	0xFE5
  2530                           fsr1l	equ	0xFE1
  2531                           indf2	equ	0xFDF
  2532                           fsr2h	equ	0xFDA
  2533                           fsr2l	equ	0xFD9
  2534                           status	equ	0xFD8
  2535                           
  2536 ;; *************** function _init_adc_no_lib *****************
  2537 ;; Defined at:
  2538 ;;		line 125 in file "Main.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    3
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text4
  2567  0045E4                     __ptext4:
  2568                           	opt stack 0
  2569  0045E4                     _init_adc_no_lib:
  2570                           	opt stack 27
  2571                           
  2572                           ;Main.c: 126: ADCON0 = 0;
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;incstack = 0
  2576  0045E4  0E00               	movlw	0
  2577  0045E6  6EC2               	movwf	4034,c	;volatile
  2578                           
  2579                           ;Main.c: 127: ADCON0bits.ADON = 1;
  2580  0045E8  80C2               	bsf	4034,0,c	;volatile
  2581                           
  2582                           ;Main.c: 128: ADCON2 = 0b10001001;
  2583  0045EA  0E89               	movlw	137
  2584  0045EC  6EC0               	movwf	4032,c	;volatile
  2585  0045EE  0012               	return		;funcret
  2586  0045F0                     __end_of_init_adc_no_lib:
  2587                           	opt stack 0
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           postdec1	equ	0xFE5
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _init *****************
  2604 ;; Defined at:
  2605 ;;		line 341 in file "Main.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  dummy           1    0[BANK0 ] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        1 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    4
  2626 ;; This function calls:
  2627 ;;		_init_pwm1
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text5
  2634  003A5E                     __ptext5:
  2635                           	opt stack 0
  2636  003A5E                     _init:
  2637                           	opt stack 26
  2638                           
  2639                           ;Main.c: 343: ADCON0 = 0x00 ;
  2640                           
  2641                           ;incstack = 0
  2642  003A5E  0E00               	movlw	0
  2643  003A60  6EC2               	movwf	4034,c	;volatile
  2644                           
  2645                           ;Main.c: 344: ADCON1 = 0x0C ;
  2646  003A62  0E0C               	movlw	12
  2647  003A64  6EC1               	movwf	4033,c	;volatile
  2648                           
  2649                           ;Main.c: 345: TRISA = 0xFF ;
  2650  003A66  6892               	setf	3986,c	;volatile
  2651                           
  2652                           ;Main.c: 346: TRISB = 0xFF ;
  2653  003A68  6893               	setf	3987,c	;volatile
  2654                           
  2655                           ;Main.c: 347: TRISC = 0x80 ;
  2656  003A6A  0E80               	movlw	128
  2657  003A6C  6E94               	movwf	3988,c	;volatile
  2658                           
  2659                           ;Main.c: 348: TRISD = 0x00 ;
  2660  003A6E  0E00               	movlw	0
  2661  003A70  6E95               	movwf	3989,c	;volatile
  2662                           
  2663                           ;Main.c: 349: TRISE = 0x00 ;
  2664  003A72  0E00               	movlw	0
  2665  003A74  6E96               	movwf	3990,c	;volatile
  2666                           
  2667                           ;Main.c: 350: PORTD = 0 ;
  2668  003A76  0E00               	movlw	0
  2669  003A78  6E83               	movwf	3971,c	;volatile
  2670                           
  2671                           ;Main.c: 351: PIE1 = 0 ;
  2672  003A7A  0E00               	movlw	0
  2673  003A7C  6E9D               	movwf	3997,c	;volatile
  2674                           
  2675                           ;Main.c: 353: unsigned char dummy;
  2676                           ;Main.c: 354: dummy = RCREG;
  2677  003A7E  CFAE F080          	movff	4014,init@dummy	;volatile
  2678                           
  2679                           ;Main.c: 356: BAUDCONbits.BRG16 = 0;
  2680  003A82  96B8               	bcf	4024,3,c	;volatile
  2681                           
  2682                           ;Main.c: 357: TXSTA = 0;
  2683  003A84  0E00               	movlw	0
  2684  003A86  6EAC               	movwf	4012,c	;volatile
  2685                           
  2686                           ;Main.c: 358: SPBRG = 25;
  2687  003A88  0E19               	movlw	25
  2688  003A8A  6EAF               	movwf	4015,c	;volatile
  2689                           
  2690                           ;Main.c: 359: TXSTAbits.BRGH = 1;
  2691  003A8C  84AC               	bsf	4012,2,c	;volatile
  2692                           
  2693                           ;Main.c: 360: TXSTAbits.TXEN = 1;
  2694  003A8E  8AAC               	bsf	4012,5,c	;volatile
  2695                           
  2696                           ;Main.c: 361: RCSTA = 0;
  2697  003A90  0E00               	movlw	0
  2698  003A92  6EAB               	movwf	4011,c	;volatile
  2699                           
  2700                           ;Main.c: 362: RCSTAbits.CREN = 1;
  2701  003A94  88AB               	bsf	4011,4,c	;volatile
  2702                           
  2703                           ;Main.c: 363: RCSTAbits.SPEN = 1;
  2704  003A96  8EAB               	bsf	4011,7,c	;volatile
  2705                           
  2706                           ;Main.c: 365: T1CONbits.TMR1CS = 1;
  2707  003A98  82CD               	bsf	4045,1,c	;volatile
  2708                           
  2709                           ;Main.c: 366: T1CONbits.TMR1ON = 1;
  2710  003A9A  80CD               	bsf	4045,0,c	;volatile
  2711                           
  2712                           ;Main.c: 367: T1CONbits.T1CKPS1 = 0;
  2713  003A9C  9ACD               	bcf	4045,5,c	;volatile
  2714                           
  2715                           ;Main.c: 368: T1CONbits.T1CKPS0 = 0;
  2716  003A9E  98CD               	bcf	4045,4,c	;volatile
  2717                           
  2718                           ;Main.c: 370: T3CONbits.T3CKPS1 = 0;
  2719  003AA0  9AB1               	bcf	4017,5,c	;volatile
  2720                           
  2721                           ;Main.c: 371: T3CONbits.T3CKPS0 = 0;
  2722  003AA2  98B1               	bcf	4017,4,c	;volatile
  2723                           
  2724                           ;Main.c: 372: T3CONbits.T3SYNC = 1;
  2725  003AA4  84B1               	bsf	4017,2,c	;volatile
  2726                           
  2727                           ;Main.c: 373: T3CONbits.T3CKPS0 = 0;
  2728  003AA6  98B1               	bcf	4017,4,c	;volatile
  2729                           
  2730                           ;Main.c: 374: T3CONbits.T3CKPS1 = 0;
  2731  003AA8  9AB1               	bcf	4017,5,c	;volatile
  2732                           
  2733                           ;Main.c: 375: T3CONbits.RD16 = 1;
  2734  003AAA  8EB1               	bsf	4017,7,c	;volatile
  2735                           
  2736                           ;Main.c: 377: TMR1H = 0;
  2737  003AAC  0E00               	movlw	0
  2738  003AAE  6ECF               	movwf	4047,c	;volatile
  2739                           
  2740                           ;Main.c: 378: TMR1L = 0;
  2741  003AB0  0E00               	movlw	0
  2742  003AB2  6ECE               	movwf	4046,c	;volatile
  2743                           
  2744                           ;Main.c: 379: TMR3H = 0x40;
  2745  003AB4  0E40               	movlw	64
  2746  003AB6  6EB3               	movwf	4019,c	;volatile
  2747                           
  2748                           ;Main.c: 380: TMR3L = 0x00;
  2749  003AB8  0E00               	movlw	0
  2750  003ABA  6EB2               	movwf	4018,c	;volatile
  2751                           
  2752                           ;Main.c: 382: T3CONbits.TMR3ON = 1;
  2753  003ABC  80B1               	bsf	4017,0,c	;volatile
  2754                           
  2755                           ;Main.c: 383: T3CONbits.TMR3CS = 0;
  2756  003ABE  92B1               	bcf	4017,1,c	;volatile
  2757                           
  2758                           ;Main.c: 385: PIE2bits.TMR3IE = 1;
  2759  003AC0  82A0               	bsf	4000,1,c	;volatile
  2760                           
  2761                           ;Main.c: 386: IPR2bits.TMR3IP = 1;
  2762  003AC2  82A2               	bsf	4002,1,c	;volatile
  2763                           
  2764                           ;Main.c: 388: RCONbits.IPEN = 1;
  2765  003AC4  8ED0               	bsf	4048,7,c	;volatile
  2766                           
  2767                           ;Main.c: 389: INTCONbits.PEIE = 1;
  2768  003AC6  8CF2               	bsf	intcon,6,c	;volatile
  2769                           
  2770                           ;Main.c: 390: INTCONbits.GIE = 1;
  2771  003AC8  8EF2               	bsf	intcon,7,c	;volatile
  2772                           
  2773                           ;Main.c: 392: INTCONbits.GIEH = 1;
  2774  003ACA  8EF2               	bsf	intcon,7,c	;volatile
  2775                           
  2776                           ;Main.c: 393: INTCONbits.GIEL = 1;
  2777  003ACC  8CF2               	bsf	intcon,6,c	;volatile
  2778                           
  2779                           ;Main.c: 394: INTCONbits.T0IE = 1;
  2780  003ACE  8AF2               	bsf	intcon,5,c	;volatile
  2781                           
  2782                           ;Main.c: 395: INTCON2 = 0;
  2783  003AD0  0E00               	movlw	0
  2784  003AD2  6EF1               	movwf	intcon2,c	;volatile
  2785                           
  2786                           ;Main.c: 396: INTCON3 = 0;
  2787  003AD4  0E00               	movlw	0
  2788  003AD6  6EF0               	movwf	intcon3,c	;volatile
  2789                           
  2790                           ;Main.c: 397: INTCON2bits.INTEDG0 = 1;
  2791  003AD8  8CF1               	bsf	intcon2,6,c	;volatile
  2792                           
  2793                           ;Main.c: 398: INTCON2bits.INTEDG1 = 1;
  2794  003ADA  8AF1               	bsf	intcon2,5,c	;volatile
  2795                           
  2796                           ;Main.c: 399: INTCON3bits.INT1IE = 1;
  2797  003ADC  86F0               	bsf	intcon3,3,c	;volatile
  2798                           
  2799                           ;Main.c: 400: INTCON3bits.INT2IE = 1;
  2800  003ADE  88F0               	bsf	intcon3,4,c	;volatile
  2801                           
  2802                           ;Main.c: 402: TRISCbits.RC0 = 1;
  2803  003AE0  8094               	bsf	3988,0,c	;volatile
  2804                           
  2805                           ;Main.c: 403: PORTCbits.RC2 = 0;
  2806  003AE2  9482               	bcf	3970,2,c	;volatile
  2807                           
  2808                           ;Main.c: 404: PORTCbits.RC5 = 0;
  2809  003AE4  9A82               	bcf	3970,5,c	;volatile
  2810                           
  2811                           ;Main.c: 406: HS = 0;
  2812  003AE6  0E00               	movlw	0
  2813  003AE8  0101               	movlb	1	; () banked
  2814  003AEA  6F52               	movwf	(_HS+1)& (0+255),b
  2815  003AEC  0E00               	movlw	0
  2816  003AEE  6F51               	movwf	_HS& (0+255),b
  2817                           
  2818                           ;Main.c: 407: SP = 0;
  2819  003AF0  0E00               	movlw	0
  2820  003AF2  6F83               	movwf	_SP& (0+255),b
  2821  003AF4  0E00               	movlw	0
  2822  003AF6  6F84               	movwf	(_SP+1)& (0+255),b
  2823  003AF8  0E00               	movlw	0
  2824  003AFA  6F85               	movwf	(_SP+2)& (0+255),b
  2825  003AFC  0E00               	movlw	0
  2826  003AFE  6F86               	movwf	(_SP+3)& (0+255),b
  2827                           
  2828                           ;Main.c: 408: OT = 0;
  2829  003B00  0E00               	movlw	0
  2830  003B02  6F7F               	movwf	_OT& (0+255),b
  2831  003B04  0E00               	movlw	0
  2832  003B06  6F80               	movwf	(_OT+1)& (0+255),b
  2833  003B08  0E00               	movlw	0
  2834  003B0A  6F81               	movwf	(_OT+2)& (0+255),b
  2835  003B0C  0E00               	movlw	0
  2836  003B0E  6F82               	movwf	(_OT+3)& (0+255),b
  2837                           
  2838                           ;Main.c: 409: RT = 0.0;
  2839  003B10  0E00               	movlw	0
  2840  003B12  6F7B               	movwf	_RT& (0+255),b
  2841  003B14  0E00               	movlw	0
  2842  003B16  6F7C               	movwf	(_RT+1)& (0+255),b
  2843  003B18  0E00               	movlw	0
  2844  003B1A  6F7D               	movwf	(_RT+2)& (0+255),b
  2845  003B1C  0E00               	movlw	0
  2846  003B1E  6F7E               	movwf	(_RT+3)& (0+255),b
  2847                           
  2848                           ;Main.c: 410: coolError = 0;
  2849  003B20  0E00               	movlw	0
  2850  003B22  6F77               	movwf	_coolError& (0+255),b
  2851  003B24  0E00               	movlw	0
  2852  003B26  6F78               	movwf	(_coolError+1)& (0+255),b
  2853  003B28  0E00               	movlw	0
  2854  003B2A  6F79               	movwf	(_coolError+2)& (0+255),b
  2855  003B2C  0E00               	movlw	0
  2856  003B2E  6F7A               	movwf	(_coolError+3)& (0+255),b
  2857                           
  2858                           ;Main.c: 411: heatError = 0;
  2859  003B30  0E00               	movlw	0
  2860  003B32  6F73               	movwf	_heatError& (0+255),b
  2861  003B34  0E00               	movlw	0
  2862  003B36  6F74               	movwf	(_heatError+1)& (0+255),b
  2863  003B38  0E00               	movlw	0
  2864  003B3A  6F75               	movwf	(_heatError+2)& (0+255),b
  2865  003B3C  0E00               	movlw	0
  2866  003B3E  6F76               	movwf	(_heatError+3)& (0+255),b
  2867                           
  2868                           ;Main.c: 412: operationMode = 0;
  2869  003B40  0E00               	movlw	0
  2870  003B42  6E74               	movwf	_operationMode+1,c
  2871  003B44  0E00               	movlw	0
  2872  003B46  6E73               	movwf	_operationMode,c
  2873                           
  2874                           ;Main.c: 413: autoMode = 0;
  2875  003B48  0E00               	movlw	0
  2876  003B4A  6E72               	movwf	_autoMode+1,c
  2877  003B4C  0E00               	movlw	0
  2878  003B4E  6E71               	movwf	_autoMode,c
  2879                           
  2880                           ;Main.c: 414: percentHeatCounter = 0;
  2881  003B50  0E00               	movlw	0
  2882  003B52  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  2883  003B54  0E00               	movlw	0
  2884  003B56  6F4F               	movwf	_percentHeatCounter& (0+255),b
  2885                           
  2886                           ;Main.c: 415: percentCoolCounter = 0;
  2887  003B58  0E00               	movlw	0
  2888  003B5A  6E70               	movwf	_percentCoolCounter+1,c
  2889  003B5C  0E00               	movlw	0
  2890  003B5E  6E6F               	movwf	_percentCoolCounter,c
  2891                           
  2892                           ;Main.c: 416: timerCounter = 0;
  2893  003B60  0E00               	movlw	0
  2894  003B62  6E6E               	movwf	_timerCounter+1,c
  2895  003B64  0E00               	movlw	0
  2896  003B66  6E6D               	movwf	_timerCounter,c
  2897                           
  2898                           ; BSR set to: 1
  2899                           ;Main.c: 418: RCONbits.IPEN = 0;
  2900  003B68  9ED0               	bcf	4048,7,c	;volatile
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;Main.c: 419: INTCONbits.TMR0IE = 1;
  2904  003B6A  8AF2               	bsf	intcon,5,c	;volatile
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;Main.c: 420: INTCONbits.INT0IE = 1;
  2908  003B6C  88F2               	bsf	intcon,4,c	;volatile
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;Main.c: 422: init_pwm1();
  2912  003B6E  ECE2  F022         	call	_init_pwm1	;wreg free
  2913  003B72  0012               	return		;funcret
  2914  003B74                     __end_of_init:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           intcon	equ	0xFF2
  2923                           intcon2	equ	0xFF1
  2924                           intcon3	equ	0xFF0
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           postdec1	equ	0xFE5
  2928                           fsr1l	equ	0xFE1
  2929                           indf2	equ	0xFDF
  2930                           fsr2h	equ	0xFDA
  2931                           fsr2l	equ	0xFD9
  2932                           status	equ	0xFD8
  2933                           
  2934 ;; *************** function _init_pwm1 *****************
  2935 ;; Defined at:
  2936 ;;		line 230 in file "Main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    3
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_init
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text6
  2965  0045C4                     __ptext6:
  2966                           	opt stack 0
  2967  0045C4                     _init_pwm1:
  2968                           	opt stack 26
  2969                           
  2970                           ;Main.c: 231: PR2 = 255;
  2971                           
  2972                           ;incstack = 0
  2973  0045C4  68CB               	setf	4043,c	;volatile
  2974                           
  2975                           ;Main.c: 232: T2CON = 0;
  2976  0045C6  0E00               	movlw	0
  2977  0045C8  6ECA               	movwf	4042,c	;volatile
  2978                           
  2979                           ;Main.c: 233: CCP1CON = 0x0C;
  2980  0045CA  0E0C               	movlw	12
  2981  0045CC  6EBD               	movwf	4029,c	;volatile
  2982                           
  2983                           ;Main.c: 234: T2CONbits.TMR2ON = 1;
  2984  0045CE  84CA               	bsf	4042,2,c	;volatile
  2985                           
  2986                           ;Main.c: 235: TRISCbits.RC2 =0;
  2987  0045D0  9494               	bcf	3988,2,c	;volatile
  2988  0045D2  0012               	return		;funcret
  2989  0045D4                     __end_of_init_pwm1:
  2990                           	opt stack 0
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           prodh	equ	0xFF4
  2996                           prodl	equ	0xFF3
  2997                           intcon	equ	0xFF2
  2998                           intcon2	equ	0xFF1
  2999                           intcon3	equ	0xFF0
  3000                           postinc0	equ	0xFEE
  3001                           wreg	equ	0xFE8
  3002                           postdec1	equ	0xFE5
  3003                           fsr1l	equ	0xFE1
  3004                           indf2	equ	0xFDF
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _autoHeat *****************
  3010 ;; Defined at:
  3011 ;;		line 263 in file "Main.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;Total ram usage:        2 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    9
  3032 ;; This function calls:
  3033 ;;		___fladd
  3034 ;;		___flge
  3035 ;;		___flneg
  3036 ;;		___fltol
  3037 ;;		___wmul
  3038 ;;		___xxtofl
  3039 ;;		_lcd_gotoxy
  3040 ;;		_lcd_putc
  3041 ;;		_lcd_puts
  3042 ;;		_set_pwm1_percent
  3043 ;;		_sprintf
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text7
  3050  00312C                     __ptext7:
  3051                           	opt stack 0
  3052  00312C                     _autoHeat:
  3053                           	opt stack 21
  3054                           
  3055                           ;Main.c: 264: set_pwm1_percent(0);
  3056                           
  3057                           ;incstack = 0
  3058  00312C  0E00               	movlw	0
  3059  00312E  0100               	movlb	0	; () banked
  3060  003130  6FFC               	movwf	set_pwm1_percent@value& (0+255),b
  3061  003132  0E00               	movlw	0
  3062  003134  6FFD               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  3063  003136  0E00               	movlw	0
  3064  003138  6FFE               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  3065  00313A  0E00               	movlw	0
  3066  00313C  6FFF               	movwf	(set_pwm1_percent@value+3)& (0+255),b
  3067  00313E  EC97  F01E         	call	_set_pwm1_percent	;wreg free
  3068                           
  3069                           ;Main.c: 266: heatError = SP - RT;
  3070  003142  C17B  F094         	movff	_RT,___flneg@f1
  3071  003146  C17C  F095         	movff	_RT+1,___flneg@f1+1
  3072  00314A  C17D  F096         	movff	_RT+2,___flneg@f1+2
  3073  00314E  C17E  F097         	movff	_RT+3,___flneg@f1+3
  3074  003152  ECEC  F021         	call	___flneg	;wreg free
  3075  003156  C094  F0DE         	movff	?___flneg,___fladd@b
  3076  00315A  C095  F0DF         	movff	?___flneg+1,___fladd@b+1
  3077  00315E  C096  F0E0         	movff	?___flneg+2,___fladd@b+2
  3078  003162  C097  F0E1         	movff	?___flneg+3,___fladd@b+3
  3079  003166  C183  F0E2         	movff	_SP,___fladd@a
  3080  00316A  C184  F0E3         	movff	_SP+1,___fladd@a+1
  3081  00316E  C185  F0E4         	movff	_SP+2,___fladd@a+2
  3082  003172  C186  F0E5         	movff	_SP+3,___fladd@a+3
  3083  003176  ECA8  F00E         	call	___fladd	;wreg free
  3084  00317A  C0DE  F173         	movff	?___fladd,_heatError
  3085  00317E  C0DF  F174         	movff	?___fladd+1,_heatError+1
  3086  003182  C0E0  F175         	movff	?___fladd+2,_heatError+2
  3087  003186  C0E1  F176         	movff	?___fladd+3,_heatError+3
  3088                           
  3089                           ;Main.c: 268: if (heatError > 0) {
  3090  00318A  0E00               	movlw	0
  3091  00318C  0100               	movlb	0	; () banked
  3092  00318E  6FF2               	movwf	___flge@ff1& (0+255),b
  3093  003190  0E00               	movlw	0
  3094  003192  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  3095  003194  0E00               	movlw	0
  3096  003196  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  3097  003198  0E00               	movlw	0
  3098  00319A  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  3099  00319C  C173  F0F6         	movff	_heatError,___flge@ff2
  3100  0031A0  C174  F0F7         	movff	_heatError+1,___flge@ff2+1
  3101  0031A4  C175  F0F8         	movff	_heatError+2,___flge@ff2+2
  3102  0031A8  C176  F0F9         	movff	_heatError+3,___flge@ff2+3
  3103  0031AC  EC0E  F01C         	call	___flge	;wreg free
  3104  0031B0  0100               	movlb	0	; () banked
  3105  0031B2  B0D8               	btfsc	status,0,c
  3106  0031B4  D03A               	goto	l226
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;Main.c: 269: percentHeatCounter = heatError;
  3110  0031B6  C173  F0F2         	movff	_heatError,___fltol@f1
  3111  0031BA  C174  F0F3         	movff	_heatError+1,___fltol@f1+1
  3112  0031BE  C175  F0F4         	movff	_heatError+2,___fltol@f1+2
  3113  0031C2  C176  F0F5         	movff	_heatError+3,___fltol@f1+3
  3114  0031C6  ECBA  F01D         	call	___fltol	;wreg free
  3115  0031CA  C0F2  F14F         	movff	?___fltol,_percentHeatCounter
  3116  0031CE  C0F3  F150         	movff	?___fltol+1,_percentHeatCounter+1
  3117                           
  3118                           ;Main.c: 270: if (percentHeatCounter < 5)percentHeatCounter = 5;
  3119  0031D2  0101               	movlb	1	; () banked
  3120  0031D4  5150               	movf	(_percentHeatCounter+1)& (0+255),w,b
  3121  0031D6  E108               	bnz	l5682
  3122  0031D8  0E05               	movlw	5
  3123  0031DA  5D4F               	subwf	_percentHeatCounter& (0+255),w,b
  3124  0031DC  B0D8               	btfsc	status,0,c
  3125  0031DE  D004               	goto	l227
  3126                           
  3127                           ; BSR set to: 1
  3128  0031E0  0E00               	movlw	0
  3129  0031E2  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  3130  0031E4  0E05               	movlw	5
  3131  0031E6  6F4F               	movwf	_percentHeatCounter& (0+255),b
  3132  0031E8                     l227:
  3133  0031E8                     l5682:
  3134                           
  3135                           ; BSR set to: 1
  3136                           ;Main.c: 271: if (percentHeatCounter > 10 || SP > 52)percentHeatCounter = 10;
  3137  0031E8  5150               	movf	(_percentHeatCounter+1)& (0+255),w,b
  3138  0031EA  E11A               	bnz	l5686
  3139  0031EC  0E0B               	movlw	11
  3140  0031EE  5D4F               	subwf	_percentHeatCounter& (0+255),w,b
  3141  0031F0  B0D8               	btfsc	status,0,c
  3142  0031F2  D016               	goto	u7110
  3143                           
  3144                           ; BSR set to: 1
  3145  0031F4  0E00               	movlw	0
  3146  0031F6  0100               	movlb	0	; () banked
  3147  0031F8  6FF2               	movwf	___flge@ff1& (0+255),b
  3148  0031FA  0E00               	movlw	0
  3149  0031FC  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  3150  0031FE  0E50               	movlw	80
  3151  003200  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  3152  003202  0E42               	movlw	66
  3153  003204  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  3154  003206  C183  F0F6         	movff	_SP,___flge@ff2
  3155  00320A  C184  F0F7         	movff	_SP+1,___flge@ff2+1
  3156  00320E  C185  F0F8         	movff	_SP+2,___flge@ff2+2
  3157  003212  C186  F0F9         	movff	_SP+3,___flge@ff2+3
  3158  003216  EC0E  F01C         	call	___flge	;wreg free
  3159  00321A  0100               	movlb	0	; () banked
  3160  00321C  B0D8               	btfsc	status,0,c
  3161  00321E  D03B               	goto	l232
  3162  003220                     u7110:
  3163  003220                     l5686:
  3164  003220  0E00               	movlw	0
  3165  003222  0101               	movlb	1	; () banked
  3166  003224  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  3167  003226  0E0A               	movlw	10
  3168  003228  D035               	goto	L8
  3169  00322A                     l226:
  3170                           
  3171                           ; BSR set to: 1
  3172  00322A  C183  F0E2         	movff	_SP,___fladd@a
  3173  00322E  C184  F0E3         	movff	_SP+1,___fladd@a+1
  3174  003232  C185  F0E4         	movff	_SP+2,___fladd@a+2
  3175  003236  C186  F0E5         	movff	_SP+3,___fladd@a+3
  3176  00323A  C151  F086         	movff	_HS,___xxtofl@val
  3177  00323E  C152  F087         	movff	_HS+1,___xxtofl@val+1
  3178  003242  0100               	movlb	0	; () banked
  3179  003244  6B88               	clrf	(___xxtofl@val+2)& (0+255),b
  3180  003246  6B89               	clrf	(___xxtofl@val+3)& (0+255),b
  3181  003248  0E00               	movlw	0
  3182  00324A  EC8D  F019         	call	___xxtofl
  3183  00324E  C086  F0DE         	movff	?___xxtofl,___fladd@b
  3184  003252  C087  F0DF         	movff	?___xxtofl+1,___fladd@b+1
  3185  003256  C088  F0E0         	movff	?___xxtofl+2,___fladd@b+2
  3186  00325A  C089  F0E1         	movff	?___xxtofl+3,___fladd@b+3
  3187  00325E  ECA8  F00E         	call	___fladd	;wreg free
  3188  003262  C0DE  F0F2         	movff	?___fladd,___flge@ff1
  3189  003266  C0DF  F0F3         	movff	?___fladd+1,___flge@ff1+1
  3190  00326A  C0E0  F0F4         	movff	?___fladd+2,___flge@ff1+2
  3191  00326E  C0E1  F0F5         	movff	?___fladd+3,___flge@ff1+3
  3192  003272  C17B  F0F6         	movff	_RT,___flge@ff2
  3193  003276  C17C  F0F7         	movff	_RT+1,___flge@ff2+1
  3194  00327A  C17D  F0F8         	movff	_RT+2,___flge@ff2+2
  3195  00327E  C17E  F0F9         	movff	_RT+3,___flge@ff2+3
  3196  003282  EC0E  F01C         	call	___flge	;wreg free
  3197  003286  0100               	movlb	0	; () banked
  3198  003288  B0D8               	btfsc	status,0,c
  3199  00328A  D005               	goto	l232
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;Main.c: 273: percentHeatCounter = 0;
  3203  00328C  0E00               	movlw	0
  3204  00328E  0101               	movlb	1	; () banked
  3205  003290  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  3206  003292  0E00               	movlw	0
  3207  003294                     L8:
  3208  003294  6F4F               	movwf	_percentHeatCounter& (0+255),b
  3209  003296                     l232:
  3210                           
  3211                           ;Main.c: 274: }
  3212                           ;Main.c: 276: lcd_gotoxy(11, 3);
  3213                           
  3214                           ; BSR set to: 1
  3215                           
  3216                           ; BSR set to: 1
  3217  003296  0E03               	movlw	3
  3218  003298  0100               	movlb	0	; () banked
  3219  00329A  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  3220  00329C  0E0B               	movlw	11
  3221  00329E  EC6D  F021         	call	_lcd_gotoxy
  3222                           
  3223                           ;Main.c: 277: lcd_putc('H');
  3224  0032A2  0E48               	movlw	72
  3225  0032A4  ECC2  F020         	call	_lcd_putc
  3226                           
  3227                           ;Main.c: 279: lcd_gotoxy(15, 3);
  3228  0032A8  0E03               	movlw	3
  3229  0032AA  0100               	movlb	0	; () banked
  3230  0032AC  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  3231  0032AE  0E0F               	movlw	15
  3232  0032B0  EC6D  F021         	call	_lcd_gotoxy
  3233                           
  3234                           ;Main.c: 280: lcd_puts("  ");
  3235  0032B4  0EDA               	movlw	low (STR_20+2)
  3236  0032B6  0100               	movlb	0	; () banked
  3237  0032B8  6F8E               	movwf	lcd_puts@s& (0+255),b
  3238  0032BA  0EFF               	movlw	high (STR_20+2)
  3239  0032BC  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  3240  0032BE  ECF3  F020         	call	_lcd_puts	;wreg free
  3241                           
  3242                           ;Main.c: 282: lcd_gotoxy(13, 3);
  3243  0032C2  0E03               	movlw	3
  3244  0032C4  0100               	movlb	0	; () banked
  3245  0032C6  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  3246  0032C8  0E0D               	movlw	13
  3247  0032CA  EC6D  F021         	call	_lcd_gotoxy
  3248                           
  3249                           ;Main.c: 283: sprintf(Buffer, "%d", percentHeatCounter * 10);
  3250  0032CE  C14F  F080         	movff	_percentHeatCounter,___wmul@multiplier
  3251  0032D2  C150  F081         	movff	_percentHeatCounter+1,___wmul@multiplier+1
  3252  0032D6  0E00               	movlw	0
  3253  0032D8  0100               	movlb	0	; () banked
  3254  0032DA  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3255  0032DC  0E0A               	movlw	10
  3256  0032DE  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3257  0032E0  EC5F  F022         	call	___wmul	;wreg free
  3258  0032E4  C080  F12F         	movff	?___wmul,_autoHeat$1899
  3259  0032E8  C081  F130         	movff	?___wmul+1,_autoHeat$1899+1
  3260                           
  3261                           ;Main.c: 283: sprintf(Buffer, "%d", percentHeatCounter * 10);
  3262  0032EC  0E53               	movlw	low _Buffer
  3263  0032EE  0101               	movlb	1	; () banked
  3264  0032F0  6F00               	movwf	sprintf@sp& (0+255),b
  3265  0032F2  0E01               	movlw	high _Buffer
  3266  0032F4  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3267  0032F6  0ECF               	movlw	low (STR_19+3)
  3268  0032F8  6F02               	movwf	sprintf@f& (0+255),b
  3269  0032FA  0EFF               	movlw	high (STR_19+3)
  3270  0032FC  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3271  0032FE  C12F  F104         	movff	_autoHeat$1899,?_sprintf+4
  3272  003302  C130  F105         	movff	_autoHeat$1899+1,?_sprintf+5
  3273  003306  EC09  F000         	call	_sprintf	;wreg free
  3274                           
  3275                           ;Main.c: 284: lcd_puts(Buffer);
  3276  00330A  0E53               	movlw	low _Buffer
  3277  00330C  0100               	movlb	0	; () banked
  3278  00330E  6F8E               	movwf	lcd_puts@s& (0+255),b
  3279  003310  0E01               	movlw	high _Buffer
  3280  003312  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  3281  003314  ECF3  F020         	call	_lcd_puts	;wreg free
  3282  003318  0012               	return		;funcret
  3283  00331A                     __end_of_autoHeat:
  3284                           	opt stack 0
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           intcon2	equ	0xFF1
  3293                           intcon3	equ	0xFF0
  3294                           postinc0	equ	0xFEE
  3295                           wreg	equ	0xFE8
  3296                           postdec1	equ	0xFE5
  3297                           fsr1l	equ	0xFE1
  3298                           indf2	equ	0xFDF
  3299                           fsr2h	equ	0xFDA
  3300                           fsr2l	equ	0xFD9
  3301                           status	equ	0xFD8
  3302                           
  3303 ;; *************** function _autoCool *****************
  3304 ;; Defined at:
  3305 ;;		line 250 in file "Main.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  value           4   55[BANK1 ] float 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;Total ram usage:       12 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    9
  3326 ;; This function calls:
  3327 ;;		___fladd
  3328 ;;		___fldiv
  3329 ;;		___flge
  3330 ;;		___flmul
  3331 ;;		___flneg
  3332 ;;		___wmul
  3333 ;;		___xxtofl
  3334 ;;		_lcd_gotoxy
  3335 ;;		_lcd_puts
  3336 ;;		_set_pwm1_percent
  3337 ;;		_sprintf
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text8
  3344  002EF4                     __ptext8:
  3345                           	opt stack 0
  3346  002EF4                     _autoCool:
  3347                           	opt stack 21
  3348                           
  3349                           ;Main.c: 251: coolError = RT - SP;
  3350                           
  3351                           ;incstack = 0
  3352  002EF4  C183  F094         	movff	_SP,___flneg@f1
  3353  002EF8  C184  F095         	movff	_SP+1,___flneg@f1+1
  3354  002EFC  C185  F096         	movff	_SP+2,___flneg@f1+2
  3355  002F00  C186  F097         	movff	_SP+3,___flneg@f1+3
  3356  002F04  ECEC  F021         	call	___flneg	;wreg free
  3357  002F08  C094  F0DE         	movff	?___flneg,___fladd@b
  3358  002F0C  C095  F0DF         	movff	?___flneg+1,___fladd@b+1
  3359  002F10  C096  F0E0         	movff	?___flneg+2,___fladd@b+2
  3360  002F14  C097  F0E1         	movff	?___flneg+3,___fladd@b+3
  3361  002F18  C17B  F0E2         	movff	_RT,___fladd@a
  3362  002F1C  C17C  F0E3         	movff	_RT+1,___fladd@a+1
  3363  002F20  C17D  F0E4         	movff	_RT+2,___fladd@a+2
  3364  002F24  C17E  F0E5         	movff	_RT+3,___fladd@a+3
  3365  002F28  ECA8  F00E         	call	___fladd	;wreg free
  3366  002F2C  C0DE  F177         	movff	?___fladd,_coolError
  3367  002F30  C0DF  F178         	movff	?___fladd+1,_coolError+1
  3368  002F34  C0E0  F179         	movff	?___fladd+2,_coolError+2
  3369  002F38  C0E1  F17A         	movff	?___fladd+3,_coolError+3
  3370                           
  3371                           ;Main.c: 252: percentHeatCounter = 0;
  3372  002F3C  0E00               	movlw	0
  3373  002F3E  0101               	movlb	1	; () banked
  3374  002F40  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  3375  002F42  0E00               	movlw	0
  3376  002F44  6F4F               	movwf	_percentHeatCounter& (0+255),b
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;Main.c: 253: if (coolError > 0) {
  3380  002F46  0E00               	movlw	0
  3381  002F48  0100               	movlb	0	; () banked
  3382  002F4A  6FF2               	movwf	___flge@ff1& (0+255),b
  3383  002F4C  0E00               	movlw	0
  3384  002F4E  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  3385  002F50  0E00               	movlw	0
  3386  002F52  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  3387  002F54  0E00               	movlw	0
  3388  002F56  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  3389  002F58  C177  F0F6         	movff	_coolError,___flge@ff2
  3390  002F5C  C178  F0F7         	movff	_coolError+1,___flge@ff2+1
  3391  002F60  C179  F0F8         	movff	_coolError+2,___flge@ff2+2
  3392  002F64  C17A  F0F9         	movff	_coolError+3,___flge@ff2+3
  3393  002F68  EC0E  F01C         	call	___flge	;wreg free
  3394  002F6C  0100               	movlb	0	; () banked
  3395  002F6E  B0D8               	btfsc	status,0,c
  3396  002F70  D09C               	goto	l217
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;Main.c: 254: float value = coolError * 10;
  3400  002F72  C177  F0B8         	movff	_coolError,___flmul@b
  3401  002F76  C178  F0B9         	movff	_coolError+1,___flmul@b+1
  3402  002F7A  C179  F0BA         	movff	_coolError+2,___flmul@b+2
  3403  002F7E  C17A  F0BB         	movff	_coolError+3,___flmul@b+3
  3404  002F82  0E00               	movlw	0
  3405  002F84  6FBC               	movwf	___flmul@a& (0+255),b
  3406  002F86  0E00               	movlw	0
  3407  002F88  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  3408  002F8A  0E20               	movlw	32
  3409  002F8C  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  3410  002F8E  0E41               	movlw	65
  3411  002F90  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  3412  002F92  EC57  F00B         	call	___flmul	;wreg free
  3413  002F96  C0B8  F137         	movff	?___flmul,autoCool@value
  3414  002F9A  C0B9  F138         	movff	?___flmul+1,autoCool@value+1
  3415  002F9E  C0BA  F139         	movff	?___flmul+2,autoCool@value+2
  3416  002FA2  C0BB  F13A         	movff	?___flmul+3,autoCool@value+3
  3417                           
  3418                           ;Main.c: 255: set_pwm1_percent(value < 25 ? 25 : value);
  3419  002FA6  C137  F0F2         	movff	autoCool@value,___flge@ff1
  3420  002FAA  C138  F0F3         	movff	autoCool@value+1,___flge@ff1+1
  3421  002FAE  C139  F0F4         	movff	autoCool@value+2,___flge@ff1+2
  3422  002FB2  C13A  F0F5         	movff	autoCool@value+3,___flge@ff1+3
  3423  002FB6  0E00               	movlw	0
  3424  002FB8  0100               	movlb	0	; () banked
  3425  002FBA  6FF6               	movwf	___flge@ff2& (0+255),b
  3426  002FBC  0E00               	movlw	0
  3427  002FBE  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  3428  002FC0  0EC8               	movlw	200
  3429  002FC2  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  3430  002FC4  0E41               	movlw	65
  3431  002FC6  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  3432  002FC8  EC0E  F01C         	call	___flge	;wreg free
  3433  002FCC  0100               	movlb	0	; () banked
  3434  002FCE  A0D8               	btfss	status,0,c
  3435  002FD0  D009               	goto	l219
  3436                           
  3437                           ; BSR set to: 0
  3438  002FD2  C137  F133         	movff	autoCool@value,_autoCool$1036
  3439  002FD6  C138  F134         	movff	autoCool@value+1,_autoCool$1036+1
  3440  002FDA  C139  F135         	movff	autoCool@value+2,_autoCool$1036+2
  3441  002FDE  C13A  F136         	movff	autoCool@value+3,_autoCool$1036+3
  3442  002FE2  D009               	goto	l221
  3443  002FE4                     l219:
  3444                           
  3445                           ; BSR set to: 0
  3446                           
  3447                           ; BSR set to: 0
  3448  002FE4  0E00               	movlw	0
  3449  002FE6  0101               	movlb	1	; () banked
  3450  002FE8  6F33               	movwf	_autoCool$1036& (0+255),b
  3451  002FEA  0E00               	movlw	0
  3452  002FEC  6F34               	movwf	(_autoCool$1036+1)& (0+255),b
  3453  002FEE  0EC8               	movlw	200
  3454  002FF0  6F35               	movwf	(_autoCool$1036+2)& (0+255),b
  3455  002FF2  0E41               	movlw	65
  3456  002FF4  6F36               	movwf	(_autoCool$1036+3)& (0+255),b
  3457  002FF6                     l221:
  3458                           
  3459                           ; BSR set to: 1
  3460  002FF6  C133  F0FC         	movff	_autoCool$1036,set_pwm1_percent@value
  3461  002FFA  C134  F0FD         	movff	_autoCool$1036+1,set_pwm1_percent@value+1
  3462  002FFE  C135  F0FE         	movff	_autoCool$1036+2,set_pwm1_percent@value+2
  3463  003002  C136  F0FF         	movff	_autoCool$1036+3,set_pwm1_percent@value+3
  3464  003006  EC97  F01E         	call	_set_pwm1_percent	;wreg free
  3465                           
  3466                           ;Main.c: 256: lcd_gotoxy(11, 3);
  3467  00300A  0E03               	movlw	3
  3468  00300C  0100               	movlb	0	; () banked
  3469  00300E  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  3470  003010  0E0B               	movlw	11
  3471  003012  EC6D  F021         	call	_lcd_gotoxy
  3472                           
  3473                           ;Main.c: 257: sprintf(Buffer, "R:%4.2f", RPS_count * 40 / 7.0);
  3474  003016  C14D  F080         	movff	_RPS_count,___wmul@multiplier
  3475  00301A  C14E  F081         	movff	_RPS_count+1,___wmul@multiplier+1
  3476  00301E  0E00               	movlw	0
  3477  003020  0100               	movlb	0	; () banked
  3478  003022  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3479  003024  0E28               	movlw	40
  3480  003026  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3481  003028  EC5F  F022         	call	___wmul	;wreg free
  3482  00302C  0100               	movlb	0	; () banked
  3483  00302E  C080  F086         	movff	?___wmul,___xxtofl@val
  3484  003032  C081  F087         	movff	?___wmul+1,___xxtofl@val+1
  3485  003036  6B88               	clrf	(___xxtofl@val+2)& (0+255),b
  3486  003038  6B89               	clrf	(___xxtofl@val+3)& (0+255),b
  3487  00303A  0E00               	movlw	0
  3488  00303C  EC8D  F019         	call	___xxtofl
  3489  003040  C086  F094         	movff	?___xxtofl,___fldiv@b
  3490  003044  C087  F095         	movff	?___xxtofl+1,___fldiv@b+1
  3491  003048  C088  F096         	movff	?___xxtofl+2,___fldiv@b+2
  3492  00304C  C089  F097         	movff	?___xxtofl+3,___fldiv@b+3
  3493  003050  0E00               	movlw	0
  3494  003052  0100               	movlb	0	; () banked
  3495  003054  6F98               	movwf	___fldiv@a& (0+255),b
  3496  003056  0E00               	movlw	0
  3497  003058  6F99               	movwf	(___fldiv@a+1)& (0+255),b
  3498  00305A  0EE0               	movlw	224
  3499  00305C  6F9A               	movwf	(___fldiv@a+2)& (0+255),b
  3500  00305E  0E40               	movlw	64
  3501  003060  6F9B               	movwf	(___fldiv@a+3)& (0+255),b
  3502  003062  ECC5  F014         	call	___fldiv	;wreg free
  3503  003066  C094  F12F         	movff	?___fldiv,_autoCool$1898
  3504  00306A  C095  F130         	movff	?___fldiv+1,_autoCool$1898+1
  3505  00306E  C096  F131         	movff	?___fldiv+2,_autoCool$1898+2
  3506  003072  C097  F132         	movff	?___fldiv+3,_autoCool$1898+3
  3507                           
  3508                           ;Main.c: 257: sprintf(Buffer, "R:%4.2f", RPS_count * 40 / 7.0);
  3509  003076  0E53               	movlw	low _Buffer
  3510  003078  0101               	movlb	1	; () banked
  3511  00307A  6F00               	movwf	sprintf@sp& (0+255),b
  3512  00307C  0E01               	movlw	high _Buffer
  3513  00307E  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  3514  003080  0EBD               	movlw	low STR_1
  3515  003082  6F02               	movwf	sprintf@f& (0+255),b
  3516  003084  0EFF               	movlw	high STR_1
  3517  003086  6F03               	movwf	(sprintf@f+1)& (0+255),b
  3518  003088  C12F  F104         	movff	_autoCool$1898,?_sprintf+4
  3519  00308C  C130  F105         	movff	_autoCool$1898+1,?_sprintf+5
  3520  003090  C131  F106         	movff	_autoCool$1898+2,?_sprintf+6
  3521  003094  C132  F107         	movff	_autoCool$1898+3,?_sprintf+7
  3522  003098  EC09  F000         	call	_sprintf	;wreg free
  3523                           
  3524                           ;Main.c: 258: lcd_puts(Buffer);
  3525  00309C  0E53               	movlw	low _Buffer
  3526  00309E  0100               	movlb	0	; () banked
  3527  0030A0  6F8E               	movwf	lcd_puts@s& (0+255),b
  3528  0030A2  0E01               	movlw	high _Buffer
  3529  0030A4  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  3530  0030A6  ECF3  F020         	call	_lcd_puts	;wreg free
  3531  0030AA                     l217:
  3532                           
  3533                           ;Main.c: 259: }
  3534                           ;Main.c: 260: if (RT < (SP - HS)) percentHeatCounter = 5;
  3535  0030AA  C17B  F0F2         	movff	_RT,___flge@ff1
  3536  0030AE  C17C  F0F3         	movff	_RT+1,___flge@ff1+1
  3537  0030B2  C17D  F0F4         	movff	_RT+2,___flge@ff1+2
  3538  0030B6  C17E  F0F5         	movff	_RT+3,___flge@ff1+3
  3539  0030BA  C183  F0E2         	movff	_SP,___fladd@a
  3540  0030BE  C184  F0E3         	movff	_SP+1,___fladd@a+1
  3541  0030C2  C185  F0E4         	movff	_SP+2,___fladd@a+2
  3542  0030C6  C186  F0E5         	movff	_SP+3,___fladd@a+3
  3543  0030CA  C151  F086         	movff	_HS,___xxtofl@val
  3544  0030CE  C152  F087         	movff	_HS+1,___xxtofl@val+1
  3545  0030D2  0100               	movlb	0	; () banked
  3546  0030D4  6B88               	clrf	(___xxtofl@val+2)& (0+255),b
  3547  0030D6  6B89               	clrf	(___xxtofl@val+3)& (0+255),b
  3548  0030D8  0E00               	movlw	0
  3549  0030DA  EC8D  F019         	call	___xxtofl
  3550  0030DE  C086  F094         	movff	?___xxtofl,___flneg@f1
  3551  0030E2  C087  F095         	movff	?___xxtofl+1,___flneg@f1+1
  3552  0030E6  C088  F096         	movff	?___xxtofl+2,___flneg@f1+2
  3553  0030EA  C089  F097         	movff	?___xxtofl+3,___flneg@f1+3
  3554  0030EE  ECEC  F021         	call	___flneg	;wreg free
  3555  0030F2  C094  F0DE         	movff	?___flneg,___fladd@b
  3556  0030F6  C095  F0DF         	movff	?___flneg+1,___fladd@b+1
  3557  0030FA  C096  F0E0         	movff	?___flneg+2,___fladd@b+2
  3558  0030FE  C097  F0E1         	movff	?___flneg+3,___fladd@b+3
  3559  003102  ECA8  F00E         	call	___fladd	;wreg free
  3560  003106  C0DE  F0F6         	movff	?___fladd,___flge@ff2
  3561  00310A  C0DF  F0F7         	movff	?___fladd+1,___flge@ff2+1
  3562  00310E  C0E0  F0F8         	movff	?___fladd+2,___flge@ff2+2
  3563  003112  C0E1  F0F9         	movff	?___fladd+3,___flge@ff2+3
  3564  003116  EC0E  F01C         	call	___flge	;wreg free
  3565  00311A  0100               	movlb	0	; () banked
  3566  00311C  B0D8               	btfsc	status,0,c
  3567  00311E  0012               	return	
  3568                           
  3569                           ; BSR set to: 0
  3570  003120  0E00               	movlw	0
  3571  003122  0101               	movlb	1	; () banked
  3572  003124  6F50               	movwf	(_percentHeatCounter+1)& (0+255),b
  3573  003126  0E05               	movlw	5
  3574  003128  6F4F               	movwf	_percentHeatCounter& (0+255),b
  3575  00312A  0012               	return	
  3576  00312C                     __end_of_autoCool:
  3577                           	opt stack 0
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           intcon2	equ	0xFF1
  3586                           intcon3	equ	0xFF0
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           postdec1	equ	0xFE5
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _sprintf *****************
  3597 ;; Defined at:
  3598 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  3601 ;;		 -> Buffer(32), 
  3602 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  3603 ;;		 -> STR_25(3), STR_21(3), STR_20(5), STR_19(6), 
  3604 ;;		 -> STR_15(6), STR_14(10), STR_11(20), STR_6(11), 
  3605 ;;		 -> STR_4(11), STR_3(3), STR_1(8), 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  fval            4   38[BANK1 ] PTR const unsigned char 
  3608 ;;  val             4   30[BANK1 ] unsigned long 
  3609 ;;  tmpval          4   26[BANK1 ] struct .
  3610 ;;  prec            2   44[BANK1 ] int 
  3611 ;;  width           2   42[BANK1 ] int 
  3612 ;;  flag            2   36[BANK1 ] unsigned short 
  3613 ;;  exp             2   34[BANK1 ] int 
  3614 ;;  len             2   24[BANK1 ] unsigned int 
  3615 ;;  cp              2   22[BANK1 ] PTR const unsigned char 
  3616 ;;		 -> STR_26(7), sprintf@c(1), STR_24(3), STR_23(3), 
  3617 ;;		 -> STR_22(3), STR_18(5), STR_17(5), STR_16(5), 
  3618 ;;		 -> STR_13(2), STR_12(2), 
  3619 ;;  ap              2   20[BANK1 ] PTR void [1]
  3620 ;;		 -> ?_sprintf(2), 
  3621 ;;  c               1   46[BANK1 ] char 
  3622 ;;  d               1    0        unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2    0[BANK1 ] int 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:       47 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    5
  3639 ;; This function calls:
  3640 ;;		___awdiv
  3641 ;;		___fladd
  3642 ;;		___flge
  3643 ;;		___flmul
  3644 ;;		___flneg
  3645 ;;		___flsub
  3646 ;;		___fltol
  3647 ;;		___lldiv
  3648 ;;		___llmod
  3649 ;;		___wmul
  3650 ;;		___xxtofl
  3651 ;;		__div_to_l_
  3652 ;;		__tdiv_to_l_
  3653 ;;		_fround
  3654 ;;		_isdigit
  3655 ;;		_scale
  3656 ;; This function is called by:
  3657 ;;		_autoCool
  3658 ;;		_autoHeat
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text9
  3664  000012                     __ptext9:
  3665                           	opt stack 0
  3666  000012                     _sprintf:
  3667                           	opt stack 25
  3668                           
  3669                           ;doprnt.c: 494: va_list ap;
  3670                           ;doprnt.c: 499: signed char c;
  3671                           ;doprnt.c: 501: int width;
  3672                           ;doprnt.c: 504: int prec;
  3673                           ;doprnt.c: 508: unsigned short flag;
  3674                           ;doprnt.c: 515: char d;
  3675                           ;doprnt.c: 516: double fval;
  3676                           ;doprnt.c: 517: int exp;
  3677                           ;doprnt.c: 523: union {
  3678                           ;doprnt.c: 524: unsigned long vd;
  3679                           ;doprnt.c: 525: double integ;
  3680                           ;doprnt.c: 526: } tmpval;
  3681                           ;doprnt.c: 528: unsigned long val;
  3682                           ;doprnt.c: 529: unsigned len;
  3683                           ;doprnt.c: 530: const char * cp;
  3684                           ;doprnt.c: 533: *ap = __va_start();
  3685                           
  3686                           ;incstack = 0
  3687  000012  0E04               	movlw	low (?_sprintf+4)
  3688  000014  0101               	movlb	1	; () banked
  3689  000016  6F14               	movwf	sprintf@ap& (0+255),b
  3690  000018  0E01               	movlw	high (?_sprintf+4)
  3691  00001A  6F15               	movwf	(sprintf@ap+1)& (0+255),b
  3692                           
  3693                           ;doprnt.c: 536: while(c = *f++) {
  3694  00001C  EF1A  F006         	goto	u6100
  3695  000020                     
  3696                           ; BSR set to: 1
  3697                           ;doprnt.c: 538: if(c != '%')
  3698                           
  3699                           ; BSR set to: 1
  3700  000020  0E25               	movlw	37
  3701  000022  192E               	xorwf	sprintf@c& (0+255),w,b
  3702  000024  B4D8               	btfsc	status,2,c
  3703  000026  D00A               	goto	l402
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;doprnt.c: 540: {
  3707                           ;doprnt.c: 541: ((*sp++ = (c)));
  3708  000028  C100  FFD9         	movff	sprintf@sp,fsr2l
  3709  00002C  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3710  000030  C12E  FFDF         	movff	sprintf@c,indf2
  3711                           
  3712                           ; BSR set to: 1
  3713  000034  4B00               	infsnz	sprintf@sp& (0+255),f,b
  3714  000036  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  3715                           
  3716                           ;doprnt.c: 542: continue;
  3717  000038  EF1A  F006         	goto	u6100
  3718  00003C                     l402:
  3719                           
  3720                           ; BSR set to: 1
  3721                           ;doprnt.c: 543: }
  3722                           ;doprnt.c: 546: width = 0;
  3723                           
  3724                           ; BSR set to: 1
  3725  00003C  0E00               	movlw	0
  3726  00003E  6F2B               	movwf	(sprintf@width+1)& (0+255),b
  3727  000040  0E00               	movlw	0
  3728  000042  6F2A               	movwf	sprintf@width& (0+255),b
  3729                           
  3730                           ;doprnt.c: 548: flag = 0;
  3731  000044  0E00               	movlw	0
  3732  000046  6F25               	movwf	(sprintf@flag+1)& (0+255),b
  3733  000048  0E00               	movlw	0
  3734  00004A  6F24               	movwf	sprintf@flag& (0+255),b
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;doprnt.c: 551: switch(*f) {
  3738                           
  3739                           ;doprnt.c: 550: for(;;) {
  3740  00004C  D004               	goto	l404
  3741  00004E                     
  3742                           ;doprnt.c: 580: flag |= 0x04;
  3743                           
  3744                           ; BSR set to: 1
  3745  00004E  0101               	movlb	1	; () banked
  3746  000050  8524               	bsf	sprintf@flag& (0+255),2,b
  3747                           
  3748                           ;doprnt.c: 581: f++;
  3749  000052  4B02               	infsnz	sprintf@f& (0+255),f,b
  3750  000054  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3751  000056                     l404:
  3752                           
  3753                           ; BSR set to: 1
  3754  000056  C102  FFF6         	movff	sprintf@f,tblptrl
  3755  00005A  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3756  00005E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3757  00005E  6AF8               	clrf	tblptru,c
  3758  000060                     	endif
  3759  000060                     	if	0	;tblptru may be non-zero
  3760  000060                     	endif
  3761  000060  0008               	tblrd		*
  3762  000062  50F5               	movf	tablat,w,c
  3763                           
  3764                           ; Switch size 1, requested type "space"
  3765                           ; Number of cases is 1, Range of values is 48 to 48
  3766                           ; switch strategies available:
  3767                           ; Name         Instructions Cycles
  3768                           ; simple_byte            4     3 (average)
  3769                           ;	Chosen strategy is simple_byte
  3770  000064  0A30               	xorlw	48	; case 48
  3771  000066  B4D8               	btfsc	status,2,c
  3772  000068  D7F2               	goto	l405
  3773                           
  3774                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3775                           
  3776                           ;doprnt.c: 586: }
  3777                           
  3778                           ;doprnt.c: 585: break;
  3779  00006A  C102  FFF6         	movff	sprintf@f,tblptrl
  3780  00006E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3781  000072                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3782  000072  6AF8               	clrf	tblptru,c
  3783  000074                     	endif
  3784  000074                     	if	0	;tblptru may be non-zero
  3785  000074                     	endif
  3786  000074  0008               	tblrd		*
  3787  000076  50F5               	movf	tablat,w,c
  3788  000078  EC86  F022         	call	_isdigit
  3789  00007C  A0D8               	btfss	status,0,c
  3790  00007E  D037               	goto	u5490
  3791                           
  3792                           ;doprnt.c: 598: width = 0;
  3793  000080  0E00               	movlw	0
  3794  000082  0101               	movlb	1	; () banked
  3795  000084  6F2B               	movwf	(sprintf@width+1)& (0+255),b
  3796  000086  0E00               	movlw	0
  3797  000088  6F2A               	movwf	sprintf@width& (0+255),b
  3798  00008A                     
  3799                           ;doprnt.c: 600: width *= 10;
  3800                           
  3801                           ; BSR set to: 1
  3802  00008A  C12A  F080         	movff	sprintf@width,___wmul@multiplier
  3803  00008E  C12B  F081         	movff	sprintf@width+1,___wmul@multiplier+1
  3804  000092  0E00               	movlw	0
  3805  000094  0100               	movlb	0	; () banked
  3806  000096  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3807  000098  0E0A               	movlw	10
  3808  00009A  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3809  00009C  EC5F  F022         	call	___wmul	;wreg free
  3810  0000A0  C080  F12A         	movff	?___wmul,sprintf@width
  3811  0000A4  C081  F12B         	movff	?___wmul+1,sprintf@width+1
  3812                           
  3813                           ;doprnt.c: 601: width += *f++ - '0';
  3814  0000A8  0ED0               	movlw	208
  3815  0000AA  0101               	movlb	1	; () banked
  3816  0000AC  6F0C               	movwf	??_sprintf& (0+255),b
  3817  0000AE  0EFF               	movlw	255
  3818  0000B0  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  3819  0000B2  C102  FFF6         	movff	sprintf@f,tblptrl
  3820  0000B6  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3821  0000BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3822  0000BA  6AF8               	clrf	tblptru,c
  3823  0000BC                     	endif
  3824  0000BC                     	if	0	;tblptru may be non-zero
  3825  0000BC                     	endif
  3826  0000BC  0008               	tblrd		*
  3827  0000BE  50F5               	movf	tablat,w,c
  3828  0000C0  6F0E               	movwf	(??_sprintf+2)& (0+255),b
  3829  0000C2  6B0F               	clrf	(??_sprintf+3)& (0+255),b
  3830  0000C4  510C               	movf	??_sprintf& (0+255),w,b
  3831  0000C6  270E               	addwf	(??_sprintf+2)& (0+255),f,b
  3832  0000C8  510D               	movf	(??_sprintf+1)& (0+255),w,b
  3833  0000CA  230F               	addwfc	(??_sprintf+3)& (0+255),f,b
  3834  0000CC  510E               	movf	(??_sprintf+2)& (0+255),w,b
  3835  0000CE  272A               	addwf	sprintf@width& (0+255),f,b
  3836  0000D0  510F               	movf	(??_sprintf+3)& (0+255),w,b
  3837  0000D2  232B               	addwfc	(sprintf@width+1)& (0+255),f,b
  3838                           
  3839                           ; BSR set to: 1
  3840  0000D4  4B02               	infsnz	sprintf@f& (0+255),f,b
  3841  0000D6  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3842                           
  3843                           ; BSR set to: 1
  3844                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3845  0000D8  C102  FFF6         	movff	sprintf@f,tblptrl
  3846  0000DC  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3847  0000E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3848  0000E0  6AF8               	clrf	tblptru,c
  3849  0000E2                     	endif
  3850  0000E2                     	if	0	;tblptru may be non-zero
  3851  0000E2                     	endif
  3852  0000E2  0008               	tblrd		*
  3853  0000E4  50F5               	movf	tablat,w,c
  3854  0000E6  EC86  F022         	call	_isdigit
  3855  0000EA  B0D8               	btfsc	status,0,c
  3856  0000EC  D7CE               	goto	l410
  3857  0000EE                     u5490:
  3858                           
  3859                           ;doprnt.c: 608: }
  3860                           ;doprnt.c: 611: if(*f == '.') {
  3861  0000EE  C102  FFF6         	movff	sprintf@f,tblptrl
  3862  0000F2  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3863  0000F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3864  0000F6  6AF8               	clrf	tblptru,c
  3865  0000F8                     	endif
  3866  0000F8                     	if	0	;tblptru may be non-zero
  3867  0000F8                     	endif
  3868  0000F8  0008               	tblrd		*
  3869  0000FA  50F5               	movf	tablat,w,c
  3870  0000FC  0A2E               	xorlw	46
  3871  0000FE  A4D8               	btfss	status,2,c
  3872  000100  D036               	goto	l412
  3873                           
  3874                           ;doprnt.c: 612: flag |= 0x4000;
  3875  000102  0101               	movlb	1	; () banked
  3876  000104  8D25               	bsf	(sprintf@flag+1)& (0+255),6,b
  3877                           
  3878                           ;doprnt.c: 613: f++;
  3879  000106  4B02               	infsnz	sprintf@f& (0+255),f,b
  3880  000108  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3881                           
  3882                           ; BSR set to: 1
  3883                           ;doprnt.c: 620: {
  3884                           ;doprnt.c: 621: prec = 0;
  3885  00010A  0E00               	movlw	0
  3886  00010C  6F2D               	movwf	(sprintf@prec+1)& (0+255),b
  3887  00010E  0E00               	movlw	0
  3888  000110  6F2C               	movwf	sprintf@prec& (0+255),b
  3889                           
  3890                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3891  000112  D021               	goto	l413
  3892  000114                     
  3893                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3894                           
  3895                           ; BSR set to: 1
  3896  000114  C12C  F080         	movff	sprintf@prec,___wmul@multiplier
  3897  000118  C12D  F081         	movff	sprintf@prec+1,___wmul@multiplier+1
  3898  00011C  0E00               	movlw	0
  3899  00011E  0100               	movlb	0	; () banked
  3900  000120  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3901  000122  0E0A               	movlw	10
  3902  000124  6F82               	movwf	___wmul@multiplicand& (0+255),b
  3903  000126  EC5F  F022         	call	___wmul	;wreg free
  3904  00012A  C102  FFF6         	movff	sprintf@f,tblptrl
  3905  00012E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3906  000132                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3907  000132  6AF8               	clrf	tblptru,c
  3908  000134                     	endif
  3909  000134                     	if	0	;tblptru may be non-zero
  3910  000134                     	endif
  3911  000134  0008               	tblrd		*
  3912  000136  50F5               	movf	tablat,w,c
  3913  000138  0100               	movlb	0	; () banked
  3914  00013A  2780               	addwf	?___wmul& (0+255),f,b
  3915  00013C  0E00               	movlw	0
  3916  00013E  2381               	addwfc	(?___wmul+1)& (0+255),f,b
  3917  000140  0ED0               	movlw	208
  3918  000142  2580               	addwf	?___wmul& (0+255),w,b
  3919  000144  0101               	movlb	1	; () banked
  3920  000146  6F2C               	movwf	sprintf@prec& (0+255),b
  3921  000148  0EFF               	movlw	255
  3922  00014A  0100               	movlb	0	; () banked
  3923  00014C  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  3924  00014E  0101               	movlb	1	; () banked
  3925  000150  6F2D               	movwf	(sprintf@prec+1)& (0+255),b
  3926                           
  3927                           ; BSR set to: 1
  3928  000152  4B02               	infsnz	sprintf@f& (0+255),f,b
  3929  000154  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3930  000156                     l413:
  3931                           
  3932                           ; BSR set to: 1
  3933                           
  3934                           ; BSR set to: 1
  3935  000156  C102  FFF6         	movff	sprintf@f,tblptrl
  3936  00015A  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3937  00015E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3938  00015E  6AF8               	clrf	tblptru,c
  3939  000160                     	endif
  3940  000160                     	if	0	;tblptru may be non-zero
  3941  000160                     	endif
  3942  000160  0008               	tblrd		*
  3943  000162  50F5               	movf	tablat,w,c
  3944  000164  EC86  F022         	call	_isdigit
  3945  000168  A0D8               	btfss	status,0,c
  3946  00016A  D09E               	goto	l417
  3947  00016C  D7D3               	goto	l414
  3948  00016E                     l412:
  3949                           
  3950                           ;doprnt.c: 626: prec = 0;
  3951  00016E  0E00               	movlw	0
  3952  000170  0101               	movlb	1	; () banked
  3953  000172  6F2D               	movwf	(sprintf@prec+1)& (0+255),b
  3954  000174  0E00               	movlw	0
  3955  000176  6F2C               	movwf	sprintf@prec& (0+255),b
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;doprnt.c: 628: flag |= 0x1000;
  3959  000178  8925               	bsf	(sprintf@flag+1)& (0+255),4,b
  3960                           
  3961                           ; BSR set to: 1
  3962                           ;doprnt.c: 630: }
  3963                           ;doprnt.c: 635: switch(c = *f++) {
  3964  00017A  D096               	goto	l417
  3965  00017C                     
  3966                           ; BSR set to: 1
  3967                           ;doprnt.c: 663: flag |= 0x400;
  3968                           
  3969                           ; BSR set to: 1
  3970  00017C  8525               	bsf	(sprintf@flag+1)& (0+255),2,b
  3971                           
  3972                           ; BSR set to: 1
  3973                           ;doprnt.c: 698: case 'i':
  3974                           ;doprnt.c: 699: break;
  3975                           
  3976                           ; BSR set to: 1
  3977                           
  3978                           ;doprnt.c: 697: case 'd':
  3979                           
  3980                           ;doprnt.c: 664: break;
  3981  00017E  D0B1               	goto	l421
  3982  000180                     
  3983                           ; BSR set to: 1
  3984                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3985                           
  3986                           ; BSR set to: 1
  3987  000180  C114  FFD9         	movff	sprintf@ap,fsr2l
  3988  000184  C115  FFDA         	movff	sprintf@ap+1,fsr2h
  3989  000188  CFDE F116          	movff	postinc2,sprintf@cp
  3990  00018C  CFDD F117          	movff	postdec2,sprintf@cp+1
  3991                           
  3992                           ; BSR set to: 1
  3993  000190  0E02               	movlw	2
  3994  000192  2714               	addwf	sprintf@ap& (0+255),f,b
  3995  000194  0E00               	movlw	0
  3996  000196  2315               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;doprnt.c: 740: if(!cp)
  4000  000198  5116               	movf	sprintf@cp& (0+255),w,b
  4001  00019A  1117               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4002  00019C  A4D8               	btfss	status,2,c
  4003  00019E  D004               	goto	l425
  4004                           
  4005                           ; BSR set to: 1
  4006                           ;doprnt.c: 741: cp = "(null)";
  4007  0001A0  0EC5               	movlw	low STR_26
  4008  0001A2  6F16               	movwf	sprintf@cp& (0+255),b
  4009  0001A4  0EFF               	movlw	high STR_26
  4010  0001A6  6F17               	movwf	(sprintf@cp+1)& (0+255),b
  4011  0001A8                     l425:
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;doprnt.c: 745: len = 0;
  4015                           
  4016                           ; BSR set to: 1
  4017  0001A8  0E00               	movlw	0
  4018  0001AA  6F19               	movwf	(sprintf@len+1)& (0+255),b
  4019  0001AC  0E00               	movlw	0
  4020  0001AE  6F18               	movwf	sprintf@len& (0+255),b
  4021                           
  4022                           ;doprnt.c: 746: while(cp[len])
  4023  0001B0  D003               	goto	l426
  4024  0001B2                     
  4025                           ;doprnt.c: 747: len++;
  4026                           
  4027                           ; BSR set to: 1
  4028  0001B2  0101               	movlb	1	; () banked
  4029  0001B4  4B18               	infsnz	sprintf@len& (0+255),f,b
  4030  0001B6  2B19               	incf	(sprintf@len+1)& (0+255),f,b
  4031  0001B8                     l426:
  4032                           
  4033                           ; BSR set to: 1
  4034                           
  4035                           ; BSR set to: 1
  4036  0001B8  5118               	movf	sprintf@len& (0+255),w,b
  4037  0001BA  2516               	addwf	sprintf@cp& (0+255),w,b
  4038  0001BC  6F0C               	movwf	??_sprintf& (0+255),b
  4039  0001BE  5119               	movf	(sprintf@len+1)& (0+255),w,b
  4040  0001C0  2117               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4041  0001C2  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  4042  0001C4  C10C  FFF6         	movff	??_sprintf,tblptrl
  4043  0001C8  C10D  FFF7         	movff	??_sprintf+1,tblptrh
  4044  0001CC  0E00               	movlw	low (__mediumconst shr (0+16))
  4045  0001CE  6EF8               	movwf	tblptru,c
  4046  0001D0  0E0F               	movlw	(high __ramtop+-1)
  4047  0001D2  64F7               	cpfsgt	tblptrh,c
  4048  0001D4  D003               	bra	u5537
  4049  0001D6  0008               	tblrd		*
  4050  0001D8  50F5               	movf	tablat,w,c
  4051  0001DA  D005               	bra	u5530
  4052  0001DC                     u5537:
  4053  0001DC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4054  0001E0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4055  0001E4  50EF               	movf	indf0,w,c
  4056  0001E6                     u5530:
  4057  0001E6  0900               	iorlw	0
  4058  0001E8  A4D8               	btfss	status,2,c
  4059  0001EA  D7E3               	goto	l427
  4060  0001EC                     u5540:
  4061                           
  4062                           ;doprnt.c: 753: if(prec && prec < len)
  4063                           
  4064                           ;doprnt.c: 750: dostring:
  4065  0001EC  0101               	movlb	1	; () banked
  4066  0001EE  512C               	movf	sprintf@prec& (0+255),w,b
  4067  0001F0  112D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4068  0001F2  B4D8               	btfsc	status,2,c
  4069  0001F4  D00A               	goto	l430
  4070                           
  4071                           ; BSR set to: 1
  4072  0001F6  5118               	movf	sprintf@len& (0+255),w,b
  4073  0001F8  5D2C               	subwf	sprintf@prec& (0+255),w,b
  4074  0001FA  5119               	movf	(sprintf@len+1)& (0+255),w,b
  4075  0001FC  592D               	subwfb	(sprintf@prec+1)& (0+255),w,b
  4076  0001FE  B0D8               	btfsc	status,0,c
  4077  000200  D004               	goto	l430
  4078                           
  4079                           ; BSR set to: 1
  4080                           ;doprnt.c: 754: len = prec;
  4081  000202  C12C  F118         	movff	sprintf@prec,sprintf@len
  4082  000206  C12D  F119         	movff	sprintf@prec+1,sprintf@len+1
  4083  00020A                     l430:
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;doprnt.c: 757: if(width > len)
  4087                           
  4088                           ; BSR set to: 1
  4089  00020A  512A               	movf	sprintf@width& (0+255),w,b
  4090  00020C  5D18               	subwf	sprintf@len& (0+255),w,b
  4091  00020E  512B               	movf	(sprintf@width+1)& (0+255),w,b
  4092  000210  5919               	subwfb	(sprintf@len+1)& (0+255),w,b
  4093  000212  B0D8               	btfsc	status,0,c
  4094  000214  D005               	goto	l431
  4095                           
  4096                           ; BSR set to: 1
  4097                           ;doprnt.c: 758: width -= len;
  4098  000216  5118               	movf	sprintf@len& (0+255),w,b
  4099  000218  5F2A               	subwf	sprintf@width& (0+255),f,b
  4100  00021A  5119               	movf	(sprintf@len+1)& (0+255),w,b
  4101  00021C  5B2B               	subwfb	(sprintf@width+1)& (0+255),f,b
  4102  00021E  D00D               	goto	l433
  4103  000220                     l431:
  4104                           
  4105                           ; BSR set to: 1
  4106                           ;doprnt.c: 759: else
  4107                           ;doprnt.c: 760: width = 0;
  4108                           
  4109                           ; BSR set to: 1
  4110  000220  0E00               	movlw	0
  4111  000222  6F2B               	movwf	(sprintf@width+1)& (0+255),b
  4112  000224  0E00               	movlw	0
  4113  000226  6F2A               	movwf	sprintf@width& (0+255),b
  4114                           
  4115                           ; BSR set to: 1
  4116                           ;doprnt.c: 764: while(width--)
  4117  000228  D008               	goto	l433
  4118  00022A                     l4776:
  4119                           
  4120                           ; BSR set to: 1
  4121                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4122  00022A  C100  FFD9         	movff	sprintf@sp,fsr2l
  4123  00022E  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4124  000232  0E20               	movlw	32
  4125  000234  6EDF               	movwf	indf2,c
  4126                           
  4127                           ; BSR set to: 1
  4128  000236  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4129  000238  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4130  00023A                     l433:
  4131                           
  4132                           ; BSR set to: 1
  4133                           
  4134                           ; BSR set to: 1
  4135  00023A  072A               	decf	sprintf@width& (0+255),f,b
  4136  00023C  A0D8               	btfss	status,0,c
  4137  00023E  072B               	decf	(sprintf@width+1)& (0+255),f,b
  4138  000240  292A               	incf	sprintf@width& (0+255),w,b
  4139  000242  E1F3               	bnz	l4776
  4140  000244  292B               	incf	(sprintf@width+1)& (0+255),w,b
  4141  000246  B4D8               	btfsc	status,2,c
  4142  000248  D01C               	goto	l436
  4143  00024A  D7EF               	goto	l434
  4144  00024C                     l4782:
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4148  00024C  C116  FFF6         	movff	sprintf@cp,tblptrl
  4149  000250  C117  FFF7         	movff	sprintf@cp+1,tblptrh
  4150  000254  0E00               	movlw	low (__mediumconst shr (0+16))
  4151  000256  6EF8               	movwf	tblptru,c
  4152  000258  C100  FFD9         	movff	sprintf@sp,fsr2l
  4153  00025C  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4154  000260  0E0F               	movlw	(high __ramtop+-1)
  4155  000262  64F7               	cpfsgt	tblptrh,c
  4156  000264  D003               	bra	u5597
  4157  000266  0008               	tblrd		*
  4158  000268  50F5               	movf	tablat,w,c
  4159  00026A  D005               	bra	u5590
  4160  00026C                     u5597:
  4161  00026C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4162  000270  CFF7 FFEA          	movff	tblptrh,fsr0h
  4163  000274  50EF               	movf	indf0,w,c
  4164  000276                     u5590:
  4165  000276  6EDF               	movwf	indf2,c
  4166  000278  0101               	movlb	1	; () banked
  4167  00027A  4B16               	infsnz	sprintf@cp& (0+255),f,b
  4168  00027C  2B17               	incf	(sprintf@cp+1)& (0+255),f,b
  4169                           
  4170                           ; BSR set to: 1
  4171  00027E  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4172  000280  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4173  000282                     l436:
  4174                           
  4175                           ; BSR set to: 1
  4176                           
  4177                           ; BSR set to: 1
  4178  000282  0718               	decf	sprintf@len& (0+255),f,b
  4179  000284  A0D8               	btfss	status,0,c
  4180  000286  0719               	decf	(sprintf@len+1)& (0+255),f,b
  4181  000288  2918               	incf	sprintf@len& (0+255),w,b
  4182  00028A  E1E0               	bnz	l4782
  4183  00028C  2919               	incf	(sprintf@len+1)& (0+255),w,b
  4184  00028E  B4D8               	btfsc	status,2,c
  4185  000290  EF1A  F006         	goto	u6100
  4186  000294  D7DB               	goto	l437
  4187  000296                     
  4188                           ; BSR set to: 1
  4189                           ;doprnt.c: 805: cp = (char *)&c;
  4190                           
  4191                           ; BSR set to: 1
  4192  000296  0E2E               	movlw	low sprintf@c
  4193  000298  6F16               	movwf	sprintf@cp& (0+255),b
  4194  00029A  0E01               	movlw	high sprintf@c
  4195  00029C  6F17               	movwf	(sprintf@cp+1)& (0+255),b
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;doprnt.c: 806: len = 1;
  4199  00029E  0E00               	movlw	0
  4200  0002A0  6F19               	movwf	(sprintf@len+1)& (0+255),b
  4201  0002A2  0E01               	movlw	1
  4202  0002A4  6F18               	movwf	sprintf@len& (0+255),b
  4203                           
  4204                           ;doprnt.c: 807: goto dostring;
  4205  0002A6  D7A2               	goto	u5540
  4206  0002A8                     l417:
  4207                           
  4208                           ; BSR set to: 1
  4209  0002A8  C102  FFF6         	movff	sprintf@f,tblptrl
  4210  0002AC  C103  FFF7         	movff	sprintf@f+1,tblptrh
  4211  0002B0  0101               	movlb	1	; () banked
  4212  0002B2  4B02               	infsnz	sprintf@f& (0+255),f,b
  4213  0002B4  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  4214  0002B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4215  0002B6  6AF8               	clrf	tblptru,c
  4216  0002B8                     	endif
  4217  0002B8                     	if	0	;tblptru may be non-zero
  4218  0002B8                     	endif
  4219  0002B8  0008               	tblrd		*
  4220  0002BA  CFF5 F12E          	movff	tablat,sprintf@c
  4221  0002BE  512E               	movf	sprintf@c& (0+255),w,b
  4222                           
  4223                           ; Switch size 1, requested type "space"
  4224                           ; Number of cases is 5, Range of values is 0 to 115
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte           16     9 (average)
  4228                           ;	Chosen strategy is simple_byte
  4229  0002C0  0A00               	xorlw	0	; case 0
  4230  0002C2  B4D8               	btfsc	status,2,c
  4231  0002C4  EF28  F006         	goto	u6110
  4232  0002C8  0A64               	xorlw	100	; case 100
  4233  0002CA  B4D8               	btfsc	status,2,c
  4234  0002CC  D00A               	goto	l421
  4235  0002CE  0A02               	xorlw	2	; case 102
  4236  0002D0  B4D8               	btfsc	status,2,c
  4237  0002D2  D754               	goto	l420
  4238  0002D4  0A0F               	xorlw	15	; case 105
  4239  0002D6  B4D8               	btfsc	status,2,c
  4240  0002D8  D004               	goto	l421
  4241  0002DA  0A1A               	xorlw	26	; case 115
  4242  0002DC  B4D8               	btfsc	status,2,c
  4243  0002DE  D750               	goto	l424
  4244  0002E0  D7DA               	goto	l439
  4245  0002E2                     l421:
  4246                           
  4247                           ; BSR set to: 1
  4248                           ;doprnt.c: 825: if(flag & (0x700)) {
  4249                           
  4250                           ; BSR set to: 1
  4251  0002E2  0E07               	movlw	7
  4252  0002E4  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  4253  0002E6  B4D8               	btfsc	status,2,c
  4254  0002E8  D368               	goto	l440
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;doprnt.c: 827: if(flag & 0x1000)
  4258  0002EA  A925               	btfss	(sprintf@flag+1)& (0+255),4,b
  4259  0002EC  D004               	goto	l441
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;doprnt.c: 829: prec = 6;
  4263  0002EE  0E00               	movlw	0
  4264  0002F0  6F2D               	movwf	(sprintf@prec+1)& (0+255),b
  4265  0002F2  0E06               	movlw	6
  4266  0002F4  6F2C               	movwf	sprintf@prec& (0+255),b
  4267  0002F6                     l441:
  4268                           
  4269                           ; BSR set to: 1
  4270                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4271                           
  4272                           ; BSR set to: 1
  4273  0002F6  C114  FFD9         	movff	sprintf@ap,fsr2l
  4274  0002FA  C115  FFDA         	movff	sprintf@ap+1,fsr2h
  4275  0002FE  CFDE F126          	movff	postinc2,sprintf@fval
  4276  000302  CFDE F127          	movff	postinc2,sprintf@fval+1
  4277  000306  CFDE F128          	movff	postinc2,sprintf@fval+2
  4278  00030A  CFDE F129          	movff	postinc2,sprintf@fval+3
  4279                           
  4280                           ; BSR set to: 1
  4281  00030E  0E04               	movlw	4
  4282  000310  2714               	addwf	sprintf@ap& (0+255),f,b
  4283  000312  0E00               	movlw	0
  4284  000314  2315               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4285                           
  4286                           ; BSR set to: 1
  4287                           ;doprnt.c: 831: if(fval < 0.0) {
  4288  000316  AF29               	btfss	(sprintf@fval+3)& (0+255),7,b
  4289  000318  D015               	goto	l442
  4290                           
  4291                           ; BSR set to: 1
  4292                           ;doprnt.c: 832: fval = -fval;
  4293  00031A  C126  F094         	movff	sprintf@fval,___flneg@f1
  4294  00031E  C127  F095         	movff	sprintf@fval+1,___flneg@f1+1
  4295  000322  C128  F096         	movff	sprintf@fval+2,___flneg@f1+2
  4296  000326  C129  F097         	movff	sprintf@fval+3,___flneg@f1+3
  4297  00032A  ECEC  F021         	call	___flneg	;wreg free
  4298  00032E  C094  F126         	movff	?___flneg,sprintf@fval
  4299  000332  C095  F127         	movff	?___flneg+1,sprintf@fval+1
  4300  000336  C096  F128         	movff	?___flneg+2,sprintf@fval+2
  4301  00033A  C097  F129         	movff	?___flneg+3,sprintf@fval+3
  4302                           
  4303                           ;doprnt.c: 833: flag |= 0x03;
  4304  00033E  0E03               	movlw	3
  4305  000340  0101               	movlb	1	; () banked
  4306  000342  1324               	iorwf	sprintf@flag& (0+255),f,b
  4307  000344                     l442:
  4308                           
  4309                           ; BSR set to: 1
  4310                           ;doprnt.c: 834: }
  4311                           ;doprnt.c: 835: exp = 0;
  4312                           
  4313                           ; BSR set to: 1
  4314  000344  0E00               	movlw	0
  4315  000346  6F23               	movwf	(sprintf@exp+1)& (0+255),b
  4316  000348  0E00               	movlw	0
  4317  00034A  6F22               	movwf	sprintf@exp& (0+255),b
  4318                           
  4319                           ; BSR set to: 1
  4320                           ;doprnt.c: 836: if( fval!=0) {
  4321  00034C  5126               	movf	sprintf@fval& (0+255),w,b
  4322  00034E  1127               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4323  000350  1128               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4324  000352  1129               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4325  000354  B4D8               	btfsc	status,2,c
  4326  000356  D088               	goto	l447
  4327                           
  4328                           ; BSR set to: 1
  4329                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4330  000358  3528               	rlcf	(sprintf@fval+2)& (0+255),w,b
  4331  00035A  3529               	rlcf	(sprintf@fval+3)& (0+255),w,b
  4332  00035C  0F82               	addlw	130
  4333  00035E  6F22               	movwf	sprintf@exp& (0+255),b
  4334  000360  6B23               	clrf	(sprintf@exp+1)& (0+255),b
  4335  000362  0EFF               	movlw	255
  4336  000364  2323               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;doprnt.c: 838: exp--;
  4340  000366  0722               	decf	sprintf@exp& (0+255),f,b
  4341  000368  A0D8               	btfss	status,0,c
  4342  00036A  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;doprnt.c: 839: exp *= 3;
  4346  00036C  C122  F080         	movff	sprintf@exp,___wmul@multiplier
  4347  000370  C123  F081         	movff	sprintf@exp+1,___wmul@multiplier+1
  4348  000374  0E00               	movlw	0
  4349  000376  0100               	movlb	0	; () banked
  4350  000378  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4351  00037A  0E03               	movlw	3
  4352  00037C  6F82               	movwf	___wmul@multiplicand& (0+255),b
  4353  00037E  EC5F  F022         	call	___wmul	;wreg free
  4354  000382  C080  F122         	movff	?___wmul,sprintf@exp
  4355  000386  C081  F123         	movff	?___wmul+1,sprintf@exp+1
  4356                           
  4357                           ;doprnt.c: 840: exp /= 10;
  4358  00038A  C122  F086         	movff	sprintf@exp,___awdiv@dividend
  4359  00038E  C123  F087         	movff	sprintf@exp+1,___awdiv@dividend+1
  4360  000392  0E00               	movlw	0
  4361  000394  0100               	movlb	0	; () banked
  4362  000396  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4363  000398  0E0A               	movlw	10
  4364  00039A  6F88               	movwf	___awdiv@divisor& (0+255),b
  4365  00039C  EC99  F01F         	call	___awdiv	;wreg free
  4366  0003A0  C086  F122         	movff	?___awdiv,sprintf@exp
  4367  0003A4  C087  F123         	movff	?___awdiv+1,sprintf@exp+1
  4368                           
  4369                           ;doprnt.c: 841: if(exp < 0)
  4370  0003A8  0101               	movlb	1	; () banked
  4371  0003AA  AF23               	btfss	(sprintf@exp+1)& (0+255),7,b
  4372  0003AC  D003               	goto	l444
  4373                           
  4374                           ; BSR set to: 1
  4375                           ;doprnt.c: 842: exp--;
  4376  0003AE  0722               	decf	sprintf@exp& (0+255),f,b
  4377  0003B0  A0D8               	btfss	status,0,c
  4378  0003B2  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  4379  0003B4                     l444:
  4380                           
  4381                           ; BSR set to: 1
  4382                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4383                           
  4384                           ; BSR set to: 1
  4385  0003B4  5122               	movf	sprintf@exp& (0+255),w,b
  4386  0003B6  0800               	sublw	0
  4387  0003B8  EC05  F009         	call	_scale
  4388  0003BC  C0D1  F11A         	movff	?_scale,sprintf@tmpval
  4389  0003C0  C0D2  F11B         	movff	?_scale+1,sprintf@tmpval+1
  4390  0003C4  C0D3  F11C         	movff	?_scale+2,sprintf@tmpval+2
  4391  0003C8  C0D4  F11D         	movff	?_scale+3,sprintf@tmpval+3
  4392                           
  4393                           ;doprnt.c: 847: tmpval.integ *= fval;
  4394  0003CC  C11A  F0B8         	movff	sprintf@tmpval,___flmul@b
  4395  0003D0  C11B  F0B9         	movff	sprintf@tmpval+1,___flmul@b+1
  4396  0003D4  C11C  F0BA         	movff	sprintf@tmpval+2,___flmul@b+2
  4397  0003D8  C11D  F0BB         	movff	sprintf@tmpval+3,___flmul@b+3
  4398  0003DC  C126  F0BC         	movff	sprintf@fval,___flmul@a
  4399  0003E0  C127  F0BD         	movff	sprintf@fval+1,___flmul@a+1
  4400  0003E4  C128  F0BE         	movff	sprintf@fval+2,___flmul@a+2
  4401  0003E8  C129  F0BF         	movff	sprintf@fval+3,___flmul@a+3
  4402  0003EC  EC57  F00B         	call	___flmul	;wreg free
  4403  0003F0  C0B8  F11A         	movff	?___flmul,sprintf@tmpval
  4404  0003F4  C0B9  F11B         	movff	?___flmul+1,sprintf@tmpval+1
  4405  0003F8  C0BA  F11C         	movff	?___flmul+2,sprintf@tmpval+2
  4406  0003FC  C0BB  F11D         	movff	?___flmul+3,sprintf@tmpval+3
  4407                           
  4408                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4409  000400  C11A  F0F2         	movff	sprintf@tmpval,___flge@ff1
  4410  000404  C11B  F0F3         	movff	sprintf@tmpval+1,___flge@ff1+1
  4411  000408  C11C  F0F4         	movff	sprintf@tmpval+2,___flge@ff1+2
  4412  00040C  C11D  F0F5         	movff	sprintf@tmpval+3,___flge@ff1+3
  4413  000410  0E00               	movlw	0
  4414  000412  0100               	movlb	0	; () banked
  4415  000414  6FF6               	movwf	___flge@ff2& (0+255),b
  4416  000416  0E00               	movlw	0
  4417  000418  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  4418  00041A  0E80               	movlw	128
  4419  00041C  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  4420  00041E  0E3F               	movlw	63
  4421  000420  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  4422  000422  EC0E  F01C         	call	___flge	;wreg free
  4423  000426  0100               	movlb	0	; () banked
  4424  000428  B0D8               	btfsc	status,0,c
  4425  00042A  D005               	goto	l445
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;doprnt.c: 849: exp--;
  4429  00042C  0101               	movlb	1	; () banked
  4430  00042E  0722               	decf	sprintf@exp& (0+255),f,b
  4431  000430  A0D8               	btfss	status,0,c
  4432  000432  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  4433  000434  D019               	goto	l447
  4434  000436                     l445:
  4435                           
  4436                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4437                           
  4438                           ; BSR set to: 1
  4439  000436  C11A  F0F2         	movff	sprintf@tmpval,___flge@ff1
  4440  00043A  C11B  F0F3         	movff	sprintf@tmpval+1,___flge@ff1+1
  4441  00043E  C11C  F0F4         	movff	sprintf@tmpval+2,___flge@ff1+2
  4442  000442  C11D  F0F5         	movff	sprintf@tmpval+3,___flge@ff1+3
  4443  000446  0E00               	movlw	0
  4444  000448  0100               	movlb	0	; () banked
  4445  00044A  6FF6               	movwf	___flge@ff2& (0+255),b
  4446  00044C  0E00               	movlw	0
  4447  00044E  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  4448  000450  0E20               	movlw	32
  4449  000452  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  4450  000454  0E41               	movlw	65
  4451  000456  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  4452  000458  EC0E  F01C         	call	___flge	;wreg free
  4453  00045C  0100               	movlb	0	; () banked
  4454  00045E  A0D8               	btfss	status,0,c
  4455  000460  D003               	goto	l447
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 851: exp++;
  4459  000462  0101               	movlb	1	; () banked
  4460  000464  4B22               	infsnz	sprintf@exp& (0+255),f,b
  4461  000466  2B23               	incf	(sprintf@exp+1)& (0+255),f,b
  4462  000468                     l447:
  4463                           
  4464                           ;doprnt.c: 852: }
  4465                           ;doprnt.c: 1112: if(prec <= 12)
  4466                           
  4467                           ; BSR set to: 1
  4468                           
  4469                           ; BSR set to: 1
  4470                           
  4471                           ; BSR set to: 1
  4472  000468  0101               	movlb	1	; () banked
  4473  00046A  BF2D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4474  00046C  D006               	goto	u5680
  4475  00046E  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  4476  000470  E121               	bnz	l4846
  4477  000472  0E0D               	movlw	13
  4478  000474  5D2C               	subwf	sprintf@prec& (0+255),w,b
  4479  000476  B0D8               	btfsc	status,0,c
  4480  000478  D01D               	goto	l448
  4481  00047A                     u5680:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;doprnt.c: 1113: fval += fround(prec);
  4485  00047A  C126  F0DE         	movff	sprintf@fval,___fladd@b
  4486  00047E  C127  F0DF         	movff	sprintf@fval+1,___fladd@b+1
  4487  000482  C128  F0E0         	movff	sprintf@fval+2,___fladd@b+2
  4488  000486  C129  F0E1         	movff	sprintf@fval+3,___fladd@b+3
  4489  00048A  512C               	movf	sprintf@prec& (0+255),w,b
  4490  00048C  EC62  F013         	call	_fround
  4491  000490  C0D1  F0E2         	movff	?_fround,___fladd@a
  4492  000494  C0D2  F0E3         	movff	?_fround+1,___fladd@a+1
  4493  000498  C0D3  F0E4         	movff	?_fround+2,___fladd@a+2
  4494  00049C  C0D4  F0E5         	movff	?_fround+3,___fladd@a+3
  4495  0004A0  ECA8  F00E         	call	___fladd	;wreg free
  4496  0004A4  C0DE  F126         	movff	?___fladd,sprintf@fval
  4497  0004A8  C0DF  F127         	movff	?___fladd+1,sprintf@fval+1
  4498  0004AC  C0E0  F128         	movff	?___fladd+2,sprintf@fval+2
  4499  0004B0  C0E1  F129         	movff	?___fladd+3,sprintf@fval+3
  4500  0004B4                     l448:
  4501  0004B4                     l4846:
  4502                           
  4503                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4504  0004B4  0101               	movlb	1	; () banked
  4505  0004B6  BF23               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4506  0004B8  D006               	goto	u5690
  4507  0004BA  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  4508  0004BC  E124               	bnz	l4854
  4509  0004BE  0E0A               	movlw	10
  4510  0004C0  5D22               	subwf	sprintf@exp& (0+255),w,b
  4511  0004C2  B0D8               	btfsc	status,0,c
  4512  0004C4  D020               	goto	u5720
  4513  0004C6                     u5690:
  4514                           
  4515                           ; BSR set to: 1
  4516  0004C6  5126               	movf	sprintf@fval& (0+255),w,b
  4517  0004C8  1127               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4518  0004CA  1128               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4519  0004CC  1129               	iorwf	(sprintf@fval+3)& (0+255),w,b
  4520  0004CE  B4D8               	btfsc	status,2,c
  4521  0004D0  D067               	goto	l449
  4522                           
  4523                           ; BSR set to: 1
  4524  0004D2  C126  F0F2         	movff	sprintf@fval,___fltol@f1
  4525  0004D6  C127  F0F3         	movff	sprintf@fval+1,___fltol@f1+1
  4526  0004DA  C128  F0F4         	movff	sprintf@fval+2,___fltol@f1+2
  4527  0004DE  C129  F0F5         	movff	sprintf@fval+3,___fltol@f1+3
  4528  0004E2  ECBA  F01D         	call	___fltol	;wreg free
  4529  0004E6  0100               	movlb	0	; () banked
  4530  0004E8  51F2               	movf	?___fltol& (0+255),w,b
  4531  0004EA  11F3               	iorwf	(?___fltol+1)& (0+255),w,b
  4532  0004EC  11F4               	iorwf	(?___fltol+2)& (0+255),w,b
  4533  0004EE  11F5               	iorwf	(?___fltol+3)& (0+255),w,b
  4534  0004F0  A4D8               	btfss	status,2,c
  4535  0004F2  D056               	goto	l449
  4536                           
  4537                           ; BSR set to: 0
  4538  0004F4  0101               	movlb	1	; () banked
  4539  0004F6  BF23               	btfsc	(sprintf@exp+1)& (0+255),7,b
  4540  0004F8  D053               	goto	l449
  4541  0004FA  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  4542  0004FC  E104               	bnz	l4854
  4543  0004FE  0E02               	movlw	2
  4544  000500  5D22               	subwf	sprintf@exp& (0+255),w,b
  4545  000502  A0D8               	btfss	status,0,c
  4546  000504  D04D               	goto	l449
  4547  000506                     u5720:
  4548  000506                     l4854:
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4552  000506  C11A  F0F2         	movff	sprintf@tmpval,___flge@ff1
  4553  00050A  C11B  F0F3         	movff	sprintf@tmpval+1,___flge@ff1+1
  4554  00050E  C11C  F0F4         	movff	sprintf@tmpval+2,___flge@ff1+2
  4555  000512  C11D  F0F5         	movff	sprintf@tmpval+3,___flge@ff1+3
  4556  000516  0E5F               	movlw	95
  4557  000518  0100               	movlb	0	; () banked
  4558  00051A  6FF6               	movwf	___flge@ff2& (0+255),b
  4559  00051C  0E70               	movlw	112
  4560  00051E  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  4561  000520  0E89               	movlw	137
  4562  000522  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  4563  000524  0E40               	movlw	64
  4564  000526  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  4565  000528  EC0E  F01C         	call	___flge	;wreg free
  4566  00052C  0100               	movlb	0	; () banked
  4567  00052E  B0D8               	btfsc	status,0,c
  4568  000530  D003               	goto	l452
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4572  000532  0101               	movlb	1	; () banked
  4573  000534  0EF7               	movlw	247
  4574  000536  D002               	goto	L9
  4575  000538                     l452:
  4576                           
  4577                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4578                           
  4579                           ; BSR set to: 1
  4580  000538  0101               	movlb	1	; () banked
  4581  00053A  0EF8               	movlw	248
  4582  00053C                     L9:
  4583  00053C  2722               	addwf	sprintf@exp& (0+255),f,b
  4584  00053E  0EFF               	movlw	255
  4585  000540  2323               	addwfc	(sprintf@exp+1)& (0+255),f,b
  4586                           
  4587                           ; BSR set to: 1
  4588                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4589                           
  4590                           ; BSR set to: 1
  4591  000542  5122               	movf	sprintf@exp& (0+255),w,b
  4592  000544  EC05  F009         	call	_scale
  4593  000548  C0D1  F11A         	movff	?_scale,sprintf@tmpval
  4594  00054C  C0D2  F11B         	movff	?_scale+1,sprintf@tmpval+1
  4595  000550  C0D3  F11C         	movff	?_scale+2,sprintf@tmpval+2
  4596  000554  C0D4  F11D         	movff	?_scale+3,sprintf@tmpval+3
  4597  000558  C126  F080         	movff	sprintf@fval,__div_to_l_@f1
  4598  00055C  C127  F081         	movff	sprintf@fval+1,__div_to_l_@f1+1
  4599  000560  C128  F082         	movff	sprintf@fval+2,__div_to_l_@f1+2
  4600  000564  C129  F083         	movff	sprintf@fval+3,__div_to_l_@f1+3
  4601  000568  C11A  F084         	movff	sprintf@tmpval,__div_to_l_@f2
  4602  00056C  C11B  F085         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  4603  000570  C11C  F086         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  4604  000574  C11D  F087         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  4605  000578  EC79  F01B         	call	__div_to_l_	;wreg free
  4606  00057C  C080  F11E         	movff	?__div_to_l_,sprintf@val
  4607  000580  C081  F11F         	movff	?__div_to_l_+1,sprintf@val+1
  4608  000584  C082  F120         	movff	?__div_to_l_+2,sprintf@val+2
  4609  000588  C083  F121         	movff	?__div_to_l_+3,sprintf@val+3
  4610                           
  4611                           ;doprnt.c: 1129: fval = 0.0;
  4612  00058C  0E00               	movlw	0
  4613  00058E  0101               	movlb	1	; () banked
  4614  000590  6F26               	movwf	sprintf@fval& (0+255),b
  4615  000592  0E00               	movlw	0
  4616  000594  6F27               	movwf	(sprintf@fval+1)& (0+255),b
  4617  000596  0E00               	movlw	0
  4618  000598  6F28               	movwf	(sprintf@fval+2)& (0+255),b
  4619  00059A  0E00               	movlw	0
  4620  00059C  6F29               	movwf	(sprintf@fval+3)& (0+255),b
  4621                           
  4622                           ;doprnt.c: 1130: } else {
  4623  00059E  D03C               	goto	l458
  4624  0005A0                     l449:
  4625                           
  4626                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4627                           
  4628                           ; BSR set to: 1
  4629  0005A0  C126  F0F2         	movff	sprintf@fval,___fltol@f1
  4630  0005A4  C127  F0F3         	movff	sprintf@fval+1,___fltol@f1+1
  4631  0005A8  C128  F0F4         	movff	sprintf@fval+2,___fltol@f1+2
  4632  0005AC  C129  F0F5         	movff	sprintf@fval+3,___fltol@f1+3
  4633  0005B0  ECBA  F01D         	call	___fltol	;wreg free
  4634  0005B4  C0F2  F11E         	movff	?___fltol,sprintf@val
  4635  0005B8  C0F3  F11F         	movff	?___fltol+1,sprintf@val+1
  4636  0005BC  C0F4  F120         	movff	?___fltol+2,sprintf@val+2
  4637  0005C0  C0F5  F121         	movff	?___fltol+3,sprintf@val+3
  4638                           
  4639                           ;doprnt.c: 1132: fval -= (double)val;
  4640  0005C4  C126  F0F2         	movff	sprintf@fval,___flsub@b
  4641  0005C8  C127  F0F3         	movff	sprintf@fval+1,___flsub@b+1
  4642  0005CC  C128  F0F4         	movff	sprintf@fval+2,___flsub@b+2
  4643  0005D0  C129  F0F5         	movff	sprintf@fval+3,___flsub@b+3
  4644  0005D4  C11E  F086         	movff	sprintf@val,___xxtofl@val
  4645  0005D8  C11F  F087         	movff	sprintf@val+1,___xxtofl@val+1
  4646  0005DC  C120  F088         	movff	sprintf@val+2,___xxtofl@val+2
  4647  0005E0  C121  F089         	movff	sprintf@val+3,___xxtofl@val+3
  4648  0005E4  0E00               	movlw	0
  4649  0005E6  EC8D  F019         	call	___xxtofl
  4650  0005EA  C086  F0F6         	movff	?___xxtofl,___flsub@a
  4651  0005EE  C087  F0F7         	movff	?___xxtofl+1,___flsub@a+1
  4652  0005F2  C088  F0F8         	movff	?___xxtofl+2,___flsub@a+2
  4653  0005F6  C089  F0F9         	movff	?___xxtofl+3,___flsub@a+3
  4654  0005FA  EC49  F021         	call	___flsub	;wreg free
  4655  0005FE  C0F2  F126         	movff	?___flsub,sprintf@fval
  4656  000602  C0F3  F127         	movff	?___flsub+1,sprintf@fval+1
  4657  000606  C0F4  F128         	movff	?___flsub+2,sprintf@fval+2
  4658  00060A  C0F5  F129         	movff	?___flsub+3,sprintf@fval+3
  4659                           
  4660                           ;doprnt.c: 1133: exp = 0;
  4661  00060E  0E00               	movlw	0
  4662  000610  0101               	movlb	1	; () banked
  4663  000612  6F23               	movwf	(sprintf@exp+1)& (0+255),b
  4664  000614  0E00               	movlw	0
  4665  000616  6F22               	movwf	sprintf@exp& (0+255),b
  4666  000618                     l458:
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;doprnt.c: 1134: }
  4670                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4671                           
  4672                           ; BSR set to: 1
  4673  000618  0E01               	movlw	1
  4674  00061A  6F2E               	movwf	sprintf@c& (0+255),b
  4675  00061C                     l4874:
  4676                           
  4677                           ; BSR set to: 1
  4678  00061C  0E0A               	movlw	10
  4679  00061E  192E               	xorwf	sprintf@c& (0+255),w,b
  4680  000620  B4D8               	btfsc	status,2,c
  4681  000622  D01B               	goto	u5760
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;doprnt.c: 1137: if(val < dpowers[c])
  4685                           
  4686                           ; BSR set to: 1
  4687                           
  4688                           ; BSR set to: 1
  4689  000624  512E               	movf	sprintf@c& (0+255),w,b
  4690  000626  0D04               	mullw	4
  4691  000628  0E61               	movlw	low _dpowers
  4692  00062A  24F3               	addwf	prodl,w,c
  4693  00062C  6EF6               	movwf	tblptrl,c
  4694  00062E  0EFF               	movlw	high _dpowers
  4695  000630  20F4               	addwfc	prodh,w,c
  4696  000632  6EF7               	movwf	tblptrh,c
  4697  000634                     	if	1	;There are 3 active tblptr bytes
  4698  000634  6AF8               	clrf	tblptru,c
  4699  000636  0E00               	movlw	low (__mediumconst shr (0+16))
  4700  000638  22F8               	addwfc	tblptru,f,c
  4701  00063A                     	endif
  4702  00063A  0009               	tblrd		*+
  4703  00063C  50F5               	movf	tablat,w,c
  4704  00063E  5D1E               	subwf	sprintf@val& (0+255),w,b
  4705  000640  0009               	tblrd		*+
  4706  000642  50F5               	movf	tablat,w,c
  4707  000644  591F               	subwfb	(sprintf@val+1)& (0+255),w,b
  4708  000646  0009               	tblrd		*+
  4709  000648  50F5               	movf	tablat,w,c
  4710  00064A  5920               	subwfb	(sprintf@val+2)& (0+255),w,b
  4711  00064C  0009               	tblrd		*+
  4712  00064E  50F5               	movf	tablat,w,c
  4713  000650  5921               	subwfb	(sprintf@val+3)& (0+255),w,b
  4714  000652  A0D8               	btfss	status,0,c
  4715  000654  D002               	goto	u5760
  4716                           
  4717                           ; BSR set to: 1
  4718                           
  4719                           ; BSR set to: 1
  4720                           
  4721                           ; BSR set to: 1
  4722                           ;doprnt.c: 1138: break;
  4723  000656  2B2E               	incf	sprintf@c& (0+255),f,b
  4724  000658  D7E1               	goto	l4874
  4725  00065A                     u5760:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;doprnt.c: 1142: width -= prec + c + exp;
  4729                           
  4730                           ; BSR set to: 1
  4731  00065A  C12E  F10C         	movff	sprintf@c,??_sprintf
  4732  00065E  6B0D               	clrf	(??_sprintf+1)& (0+255),b
  4733  000660  BF0C               	btfsc	??_sprintf& (0+255),7,b
  4734  000662  070D               	decf	(??_sprintf+1)& (0+255),f,b
  4735  000664  512C               	movf	sprintf@prec& (0+255),w,b
  4736  000666  270C               	addwf	??_sprintf& (0+255),f,b
  4737  000668  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  4738  00066A  230D               	addwfc	(??_sprintf+1)& (0+255),f,b
  4739  00066C  5122               	movf	sprintf@exp& (0+255),w,b
  4740  00066E  270C               	addwf	??_sprintf& (0+255),f,b
  4741  000670  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  4742  000672  230D               	addwfc	(??_sprintf+1)& (0+255),f,b
  4743  000674  510C               	movf	??_sprintf& (0+255),w,b
  4744  000676  5F2A               	subwf	sprintf@width& (0+255),f,b
  4745  000678  510D               	movf	(??_sprintf+1)& (0+255),w,b
  4746  00067A  5B2B               	subwfb	(sprintf@width+1)& (0+255),f,b
  4747                           
  4748                           ;doprnt.c: 1143: if(
  4749                           ;doprnt.c: 1147: prec)
  4750  00067C  512C               	movf	sprintf@prec& (0+255),w,b
  4751  00067E  112D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4752  000680  B4D8               	btfsc	status,2,c
  4753  000682  D003               	goto	l462
  4754                           
  4755                           ; BSR set to: 1
  4756                           ;doprnt.c: 1148: width--;
  4757  000684  072A               	decf	sprintf@width& (0+255),f,b
  4758  000686  A0D8               	btfss	status,0,c
  4759  000688  072B               	decf	(sprintf@width+1)& (0+255),f,b
  4760  00068A                     l462:
  4761                           
  4762                           ; BSR set to: 1
  4763                           ;doprnt.c: 1149: if(flag & 0x03)
  4764                           
  4765                           ; BSR set to: 1
  4766  00068A  0E03               	movlw	3
  4767  00068C  1524               	andwf	sprintf@flag& (0+255),w,b
  4768  00068E  6F0C               	movwf	??_sprintf& (0+255),b
  4769  000690  0E00               	movlw	0
  4770  000692  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  4771  000694  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  4772  000696  510C               	movf	??_sprintf& (0+255),w,b
  4773  000698  110D               	iorwf	(??_sprintf+1)& (0+255),w,b
  4774  00069A  B4D8               	btfsc	status,2,c
  4775  00069C  D003               	goto	l463
  4776                           
  4777                           ; BSR set to: 1
  4778                           ;doprnt.c: 1150: width--;
  4779  00069E  072A               	decf	sprintf@width& (0+255),f,b
  4780  0006A0  A0D8               	btfss	status,0,c
  4781  0006A2  072B               	decf	(sprintf@width+1)& (0+255),f,b
  4782  0006A4                     l463:
  4783                           
  4784                           ; BSR set to: 1
  4785                           ;doprnt.c: 1153: if(flag & 0x04) {
  4786                           
  4787                           ; BSR set to: 1
  4788  0006A4  A524               	btfss	sprintf@flag& (0+255),2,b
  4789  0006A6  D031               	goto	l470
  4790                           
  4791                           ; BSR set to: 1
  4792                           ;doprnt.c: 1157: if(flag & 0x03)
  4793  0006A8  0E03               	movlw	3
  4794  0006AA  1524               	andwf	sprintf@flag& (0+255),w,b
  4795  0006AC  6F0C               	movwf	??_sprintf& (0+255),b
  4796  0006AE  0E00               	movlw	0
  4797  0006B0  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  4798  0006B2  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  4799  0006B4  510C               	movf	??_sprintf& (0+255),w,b
  4800  0006B6  110D               	iorwf	(??_sprintf+1)& (0+255),w,b
  4801  0006B8  B4D8               	btfsc	status,2,c
  4802  0006BA  D014               	goto	l466
  4803                           
  4804                           ; BSR set to: 1
  4805                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  4806  0006BC  C100  FFD9         	movff	sprintf@sp,fsr2l
  4807  0006C0  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4808  0006C4  0E2D               	movlw	45
  4809  0006C6  6EDF               	movwf	indf2,c
  4810                           
  4811                           ; BSR set to: 1
  4812  0006C8  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4813  0006CA  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4814                           
  4815                           ; BSR set to: 1
  4816                           ;doprnt.c: 1168: while(width > 0) {
  4817  0006CC  D00B               	goto	l466
  4818  0006CE                     l4902:
  4819                           
  4820                           ; BSR set to: 1
  4821                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  4822  0006CE  C100  FFD9         	movff	sprintf@sp,fsr2l
  4823  0006D2  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4824  0006D6  0E30               	movlw	48
  4825  0006D8  6EDF               	movwf	indf2,c
  4826                           
  4827                           ; BSR set to: 1
  4828  0006DA  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4829  0006DC  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;doprnt.c: 1170: width--;
  4833  0006DE  072A               	decf	sprintf@width& (0+255),f,b
  4834  0006E0  A0D8               	btfss	status,0,c
  4835  0006E2  072B               	decf	(sprintf@width+1)& (0+255),f,b
  4836  0006E4                     l466:
  4837                           
  4838                           ; BSR set to: 1
  4839                           
  4840                           ; BSR set to: 1
  4841  0006E4  BF2B               	btfsc	(sprintf@width+1)& (0+255),7,b
  4842  0006E6  D076               	goto	l474
  4843  0006E8  512B               	movf	(sprintf@width+1)& (0+255),w,b
  4844  0006EA  E1F1               	bnz	l4902
  4845  0006EC  052A               	decf	sprintf@width& (0+255),w,b
  4846  0006EE  A0D8               	btfss	status,0,c
  4847  0006F0  D071               	goto	l474
  4848  0006F2  D7ED               	goto	l467
  4849  0006F4                     l4910:
  4850                           
  4851                           ; BSR set to: 1
  4852                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  4853  0006F4  C100  FFD9         	movff	sprintf@sp,fsr2l
  4854  0006F8  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4855  0006FC  0E20               	movlw	32
  4856  0006FE  6EDF               	movwf	indf2,c
  4857                           
  4858                           ; BSR set to: 1
  4859  000700  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4860  000702  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4861                           
  4862                           ; BSR set to: 1
  4863                           ;doprnt.c: 1182: width--;
  4864  000704  072A               	decf	sprintf@width& (0+255),f,b
  4865  000706  A0D8               	btfss	status,0,c
  4866  000708  072B               	decf	(sprintf@width+1)& (0+255),f,b
  4867  00070A                     l470:
  4868                           
  4869                           ; BSR set to: 1
  4870                           
  4871                           ; BSR set to: 1
  4872  00070A  BF2B               	btfsc	(sprintf@width+1)& (0+255),7,b
  4873  00070C  D005               	goto	u5820
  4874  00070E  512B               	movf	(sprintf@width+1)& (0+255),w,b
  4875  000710  E1F1               	bnz	l4910
  4876  000712  052A               	decf	sprintf@width& (0+255),w,b
  4877  000714  B0D8               	btfsc	status,0,c
  4878  000716  D7EE               	goto	l471
  4879  000718                     u5820:
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;doprnt.c: 1183: }
  4883                           ;doprnt.c: 1188: if(flag & 0x03)
  4884                           
  4885                           ; BSR set to: 1
  4886  000718  0E03               	movlw	3
  4887  00071A  1524               	andwf	sprintf@flag& (0+255),w,b
  4888  00071C  6F0C               	movwf	??_sprintf& (0+255),b
  4889  00071E  0E00               	movlw	0
  4890  000720  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  4891  000722  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  4892  000724  510C               	movf	??_sprintf& (0+255),w,b
  4893  000726  110D               	iorwf	(??_sprintf+1)& (0+255),w,b
  4894  000728  B4D8               	btfsc	status,2,c
  4895  00072A  D054               	goto	l474
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  4899  00072C  C100  FFD9         	movff	sprintf@sp,fsr2l
  4900  000730  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4901  000734  0E2D               	movlw	45
  4902  000736  D04B               	goto	L10
  4903  000738                     
  4904                           ; BSR set to: 1
  4905                           ;doprnt.c: 1200: {
  4906                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  4907                           
  4908                           ; BSR set to: 1
  4909  000738  C11E  F080         	movff	sprintf@val,___lldiv@dividend
  4910  00073C  C11F  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  4911  000740  C120  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  4912  000744  C121  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  4913  000748  512E               	movf	sprintf@c& (0+255),w,b
  4914  00074A  0D04               	mullw	4
  4915  00074C  0E61               	movlw	low _dpowers
  4916  00074E  24F3               	addwf	prodl,w,c
  4917  000750  6EF6               	movwf	tblptrl,c
  4918  000752  0EFF               	movlw	high _dpowers
  4919  000754  20F4               	addwfc	prodh,w,c
  4920  000756  6EF7               	movwf	tblptrh,c
  4921  000758                     	if	1	;There are 3 active tblptr bytes
  4922  000758  6AF8               	clrf	tblptru,c
  4923  00075A  0E00               	movlw	low (__mediumconst shr (0+16))
  4924  00075C  22F8               	addwfc	tblptru,f,c
  4925  00075E                     	endif
  4926  00075E  0009               	tblrd		*+
  4927  000760  CFF5 F084          	movff	tablat,___lldiv@divisor
  4928  000764  0009               	tblrd		*+
  4929  000766  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  4930  00076A  0009               	tblrd		*+
  4931  00076C  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  4932  000770  000A               	tblrd		*-
  4933  000772  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  4934  000776  ECDC  F01F         	call	___lldiv	;wreg free
  4935  00077A  C080  F11A         	movff	?___lldiv,sprintf@tmpval
  4936  00077E  C081  F11B         	movff	?___lldiv+1,sprintf@tmpval+1
  4937  000782  C082  F11C         	movff	?___lldiv+2,sprintf@tmpval+2
  4938  000786  C083  F11D         	movff	?___lldiv+3,sprintf@tmpval+3
  4939                           
  4940                           ;doprnt.c: 1202: tmpval.vd %= 10;
  4941  00078A  C11A  F08D         	movff	sprintf@tmpval,___llmod@dividend
  4942  00078E  C11B  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4943  000792  C11C  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4944  000796  C11D  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4945  00079A  0E0A               	movlw	10
  4946  00079C  0100               	movlb	0	; () banked
  4947  00079E  6F91               	movwf	___llmod@divisor& (0+255),b
  4948  0007A0  0E00               	movlw	0
  4949  0007A2  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  4950  0007A4  0E00               	movlw	0
  4951  0007A6  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  4952  0007A8  0E00               	movlw	0
  4953  0007AA  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  4954  0007AC  EC8E  F020         	call	___llmod	;wreg free
  4955  0007B0  C08D  F11A         	movff	?___llmod,sprintf@tmpval
  4956  0007B4  C08E  F11B         	movff	?___llmod+1,sprintf@tmpval+1
  4957  0007B8  C08F  F11C         	movff	?___llmod+2,sprintf@tmpval+2
  4958  0007BC  C090  F11D         	movff	?___llmod+3,sprintf@tmpval+3
  4959                           
  4960                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  4961  0007C0  0101               	movlb	1	; () banked
  4962  0007C2  511A               	movf	sprintf@tmpval& (0+255),w,b
  4963  0007C4  0F30               	addlw	48
  4964  0007C6  C100  FFD9         	movff	sprintf@sp,fsr2l
  4965  0007CA  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4966  0007CE                     L10:
  4967  0007CE  6EDF               	movwf	indf2,c
  4968                           
  4969                           ; BSR set to: 1
  4970  0007D0  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4971  0007D2  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4972  0007D4                     l474:
  4973                           
  4974                           ; BSR set to: 1
  4975                           
  4976                           ; BSR set to: 1
  4977  0007D4  072E               	decf	sprintf@c& (0+255),f,b
  4978  0007D6  292E               	incf	sprintf@c& (0+255),w,b
  4979  0007D8  B4D8               	btfsc	status,2,c
  4980  0007DA  D00C               	goto	l477
  4981  0007DC  D7AD               	goto	l475
  4982  0007DE                     l4934:
  4983                           
  4984                           ; BSR set to: 1
  4985                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  4986  0007DE  C100  FFD9         	movff	sprintf@sp,fsr2l
  4987  0007E2  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  4988  0007E6  0E30               	movlw	48
  4989  0007E8  6EDF               	movwf	indf2,c
  4990                           
  4991                           ; BSR set to: 1
  4992  0007EA  4B00               	infsnz	sprintf@sp& (0+255),f,b
  4993  0007EC  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;doprnt.c: 1209: exp--;
  4997  0007EE  0722               	decf	sprintf@exp& (0+255),f,b
  4998  0007F0  A0D8               	btfss	status,0,c
  4999  0007F2  0723               	decf	(sprintf@exp+1)& (0+255),f,b
  5000  0007F4                     l477:
  5001                           
  5002                           ; BSR set to: 1
  5003                           
  5004                           ; BSR set to: 1
  5005  0007F4  BF23               	btfsc	(sprintf@exp+1)& (0+255),7,b
  5006  0007F6  D005               	goto	u5850
  5007  0007F8  5123               	movf	(sprintf@exp+1)& (0+255),w,b
  5008  0007FA  E1F1               	bnz	l4934
  5009  0007FC  0522               	decf	sprintf@exp& (0+255),w,b
  5010  0007FE  B0D8               	btfsc	status,0,c
  5011  000800  D7EE               	goto	l478
  5012  000802                     u5850:
  5013                           
  5014                           ; BSR set to: 1
  5015                           ;doprnt.c: 1210: }
  5016                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5017                           
  5018                           ; BSR set to: 1
  5019  000802  BF2D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5020  000804  D009               	goto	l480
  5021  000806  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  5022  000808  E104               	bnz	u5860
  5023  00080A  0E09               	movlw	9
  5024  00080C  5D2C               	subwf	sprintf@prec& (0+255),w,b
  5025  00080E  A0D8               	btfss	status,0,c
  5026  000810  D003               	goto	l480
  5027  000812                     u5860:
  5028                           
  5029                           ; BSR set to: 1
  5030                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5031  000812  0E08               	movlw	8
  5032  000814  6F2E               	movwf	sprintf@c& (0+255),b
  5033  000816  D002               	goto	l481
  5034  000818                     l480:
  5035                           
  5036                           ; BSR set to: 1
  5037                           ;doprnt.c: 1213: else
  5038                           ;doprnt.c: 1214: c = prec;
  5039  000818  C12C  F12E         	movff	sprintf@prec,sprintf@c
  5040  00081C                     l481:
  5041                           
  5042                           ; BSR set to: 1
  5043                           ;doprnt.c: 1215: prec -= c;
  5044                           
  5045                           ; BSR set to: 1
  5046  00081C  512E               	movf	sprintf@c& (0+255),w,b
  5047  00081E  5F2C               	subwf	sprintf@prec& (0+255),f,b
  5048  000820  0E00               	movlw	0
  5049  000822  BF2E               	btfsc	sprintf@c& (0+255),7,b
  5050  000824  0EFF               	movlw	255
  5051  000826  5B2D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  5052                           
  5053                           ; BSR set to: 1
  5054                           ;doprnt.c: 1219: if(c)
  5055  000828  512E               	movf	sprintf@c& (0+255),w,b
  5056  00082A  B4D8               	btfsc	status,2,c
  5057  00082C  D008               	goto	l482
  5058                           
  5059                           ; BSR set to: 1
  5060                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  5061  00082E  C100  FFD9         	movff	sprintf@sp,fsr2l
  5062  000832  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5063  000836  0E2E               	movlw	46
  5064  000838  6EDF               	movwf	indf2,c
  5065                           
  5066                           ; BSR set to: 1
  5067  00083A  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5068  00083C  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5069  00083E                     l482:
  5070                           
  5071                           ; BSR set to: 1
  5072                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5073                           
  5074                           ; BSR set to: 1
  5075  00083E  512E               	movf	sprintf@c& (0+255),w,b
  5076  000840  EC05  F009         	call	_scale
  5077  000844  C0D1  F110         	movff	?_scale,_sprintf$1904
  5078  000848  C0D2  F111         	movff	?_scale+1,_sprintf$1904+1
  5079  00084C  C0D3  F112         	movff	?_scale+2,_sprintf$1904+2
  5080  000850  C0D4  F113         	movff	?_scale+3,_sprintf$1904+3
  5081                           
  5082                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5083  000854  C126  F0BC         	movff	sprintf@fval,___flmul@a
  5084  000858  C127  F0BD         	movff	sprintf@fval+1,___flmul@a+1
  5085  00085C  C128  F0BE         	movff	sprintf@fval+2,___flmul@a+2
  5086  000860  C129  F0BF         	movff	sprintf@fval+3,___flmul@a+3
  5087  000864  C110  F0B8         	movff	_sprintf$1904,___flmul@b
  5088  000868  C111  F0B9         	movff	_sprintf$1904+1,___flmul@b+1
  5089  00086C  C112  F0BA         	movff	_sprintf$1904+2,___flmul@b+2
  5090  000870  C113  F0BB         	movff	_sprintf$1904+3,___flmul@b+3
  5091  000874  EC57  F00B         	call	___flmul	;wreg free
  5092  000878  C0B8  F0F2         	movff	?___flmul,___fltol@f1
  5093  00087C  C0B9  F0F3         	movff	?___flmul+1,___fltol@f1+1
  5094  000880  C0BA  F0F4         	movff	?___flmul+2,___fltol@f1+2
  5095  000884  C0BB  F0F5         	movff	?___flmul+3,___fltol@f1+3
  5096  000888  ECBA  F01D         	call	___fltol	;wreg free
  5097  00088C  C0F2  F11E         	movff	?___fltol,sprintf@val
  5098  000890  C0F3  F11F         	movff	?___fltol+1,sprintf@val+1
  5099  000894  C0F4  F120         	movff	?___fltol+2,sprintf@val+2
  5100  000898  C0F5  F121         	movff	?___fltol+3,sprintf@val+3
  5101                           
  5102                           ;doprnt.c: 1228: while(c--) {
  5103  00089C  D078               	goto	l483
  5104  00089E                     
  5105                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5106  00089E  C11E  F080         	movff	sprintf@val,___lldiv@dividend
  5107  0008A2  C11F  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  5108  0008A6  C120  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  5109  0008AA  C121  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  5110  0008AE  0101               	movlb	1	; () banked
  5111  0008B0  512E               	movf	sprintf@c& (0+255),w,b
  5112  0008B2  0D04               	mullw	4
  5113  0008B4  0E61               	movlw	low _dpowers
  5114  0008B6  24F3               	addwf	prodl,w,c
  5115  0008B8  6EF6               	movwf	tblptrl,c
  5116  0008BA  0EFF               	movlw	high _dpowers
  5117  0008BC  20F4               	addwfc	prodh,w,c
  5118  0008BE  6EF7               	movwf	tblptrh,c
  5119  0008C0                     	if	1	;There are 3 active tblptr bytes
  5120  0008C0  6AF8               	clrf	tblptru,c
  5121  0008C2  0E00               	movlw	low (__mediumconst shr (0+16))
  5122  0008C4  22F8               	addwfc	tblptru,f,c
  5123  0008C6                     	endif
  5124  0008C6  0009               	tblrd		*+
  5125  0008C8  CFF5 F084          	movff	tablat,___lldiv@divisor
  5126  0008CC  0009               	tblrd		*+
  5127  0008CE  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  5128  0008D2  0009               	tblrd		*+
  5129  0008D4  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  5130  0008D8  000A               	tblrd		*-
  5131  0008DA  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  5132  0008DE  ECDC  F01F         	call	___lldiv	;wreg free
  5133  0008E2  C080  F11A         	movff	?___lldiv,sprintf@tmpval
  5134  0008E6  C081  F11B         	movff	?___lldiv+1,sprintf@tmpval+1
  5135  0008EA  C082  F11C         	movff	?___lldiv+2,sprintf@tmpval+2
  5136  0008EE  C083  F11D         	movff	?___lldiv+3,sprintf@tmpval+3
  5137                           
  5138                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5139  0008F2  C11A  F08D         	movff	sprintf@tmpval,___llmod@dividend
  5140  0008F6  C11B  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  5141  0008FA  C11C  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  5142  0008FE  C11D  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  5143  000902  0E0A               	movlw	10
  5144  000904  0100               	movlb	0	; () banked
  5145  000906  6F91               	movwf	___llmod@divisor& (0+255),b
  5146  000908  0E00               	movlw	0
  5147  00090A  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  5148  00090C  0E00               	movlw	0
  5149  00090E  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  5150  000910  0E00               	movlw	0
  5151  000912  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  5152  000914  EC8E  F020         	call	___llmod	;wreg free
  5153  000918  C08D  F11A         	movff	?___llmod,sprintf@tmpval
  5154  00091C  C08E  F11B         	movff	?___llmod+1,sprintf@tmpval+1
  5155  000920  C08F  F11C         	movff	?___llmod+2,sprintf@tmpval+2
  5156  000924  C090  F11D         	movff	?___llmod+3,sprintf@tmpval+3
  5157                           
  5158                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  5159  000928  0101               	movlb	1	; () banked
  5160  00092A  511A               	movf	sprintf@tmpval& (0+255),w,b
  5161  00092C  0F30               	addlw	48
  5162  00092E  C100  FFD9         	movff	sprintf@sp,fsr2l
  5163  000932  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5164  000936  6EDF               	movwf	indf2,c
  5165                           
  5166                           ; BSR set to: 1
  5167  000938  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5168  00093A  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5169                           
  5170                           ; BSR set to: 1
  5171                           ;doprnt.c: 1232: val %= dpowers[c];
  5172  00093C  C11E  F08D         	movff	sprintf@val,___llmod@dividend
  5173  000940  C11F  F08E         	movff	sprintf@val+1,___llmod@dividend+1
  5174  000944  C120  F08F         	movff	sprintf@val+2,___llmod@dividend+2
  5175  000948  C121  F090         	movff	sprintf@val+3,___llmod@dividend+3
  5176  00094C  512E               	movf	sprintf@c& (0+255),w,b
  5177  00094E  0D04               	mullw	4
  5178  000950  0E61               	movlw	low _dpowers
  5179  000952  24F3               	addwf	prodl,w,c
  5180  000954  6EF6               	movwf	tblptrl,c
  5181  000956  0EFF               	movlw	high _dpowers
  5182  000958  20F4               	addwfc	prodh,w,c
  5183  00095A  6EF7               	movwf	tblptrh,c
  5184  00095C                     	if	1	;There are 3 active tblptr bytes
  5185  00095C  6AF8               	clrf	tblptru,c
  5186  00095E  0E00               	movlw	low (__mediumconst shr (0+16))
  5187  000960  22F8               	addwfc	tblptru,f,c
  5188  000962                     	endif
  5189  000962  0009               	tblrd		*+
  5190  000964  CFF5 F091          	movff	tablat,___llmod@divisor
  5191  000968  0009               	tblrd		*+
  5192  00096A  CFF5 F092          	movff	tablat,___llmod@divisor+1
  5193  00096E  0009               	tblrd		*+
  5194  000970  CFF5 F093          	movff	tablat,___llmod@divisor+2
  5195  000974  000A               	tblrd		*-
  5196  000976  CFF5 F094          	movff	tablat,___llmod@divisor+3
  5197  00097A  EC8E  F020         	call	___llmod	;wreg free
  5198  00097E  C08D  F11E         	movff	?___llmod,sprintf@val
  5199  000982  C08E  F11F         	movff	?___llmod+1,sprintf@val+1
  5200  000986  C08F  F120         	movff	?___llmod+2,sprintf@val+2
  5201  00098A  C090  F121         	movff	?___llmod+3,sprintf@val+3
  5202  00098E                     l483:
  5203  00098E  0101               	movlb	1	; () banked
  5204  000990  072E               	decf	sprintf@c& (0+255),f,b
  5205  000992  292E               	incf	sprintf@c& (0+255),w,b
  5206  000994  B4D8               	btfsc	status,2,c
  5207  000996  D00C               	goto	l486
  5208  000998  D782               	goto	l484
  5209  00099A                     
  5210                           ; BSR set to: 1
  5211                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  5212                           
  5213                           ; BSR set to: 1
  5214  00099A  C100  FFD9         	movff	sprintf@sp,fsr2l
  5215  00099E  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5216  0009A2  0E30               	movlw	48
  5217  0009A4  6EDF               	movwf	indf2,c
  5218                           
  5219                           ; BSR set to: 1
  5220  0009A6  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5221  0009A8  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5222                           
  5223                           ; BSR set to: 1
  5224                           ;doprnt.c: 1237: prec--;
  5225  0009AA  072C               	decf	sprintf@prec& (0+255),f,b
  5226  0009AC  A0D8               	btfss	status,0,c
  5227  0009AE  072D               	decf	(sprintf@prec+1)& (0+255),f,b
  5228  0009B0                     l486:
  5229                           
  5230                           ; BSR set to: 1
  5231                           
  5232                           ; BSR set to: 1
  5233  0009B0  512C               	movf	sprintf@prec& (0+255),w,b
  5234  0009B2  112D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5235  0009B4  B4D8               	btfsc	status,2,c
  5236  0009B6  D13E               	goto	u6100
  5237  0009B8  D7F0               	goto	l487
  5238  0009BA                     l440:
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;doprnt.c: 1246: }
  5242                           ;doprnt.c: 1253: {
  5243                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5244                           
  5245                           ; BSR set to: 1
  5246  0009BA  C114  FFD9         	movff	sprintf@ap,fsr2l
  5247  0009BE  C115  FFDA         	movff	sprintf@ap+1,fsr2h
  5248  0009C2  CFDE F11E          	movff	postinc2,sprintf@val
  5249  0009C6  CFDD F11F          	movff	postdec2,sprintf@val+1
  5250  0009CA  0E00               	movlw	0
  5251  0009CC  BF1F               	btfsc	(sprintf@val+1)& (0+255),7,b
  5252  0009CE  0EFF               	movlw	-1
  5253  0009D0  6F20               	movwf	(sprintf@val+2)& (0+255),b
  5254  0009D2  6F21               	movwf	(sprintf@val+3)& (0+255),b
  5255                           
  5256                           ; BSR set to: 1
  5257  0009D4  0E02               	movlw	2
  5258  0009D6  2714               	addwf	sprintf@ap& (0+255),f,b
  5259  0009D8  0E00               	movlw	0
  5260  0009DA  2315               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5261                           
  5262                           ; BSR set to: 1
  5263                           ;doprnt.c: 1261: if((long)val < 0) {
  5264  0009DC  AF21               	btfss	(sprintf@val+3)& (0+255),7,b
  5265  0009DE  D00A               	goto	l489
  5266                           
  5267                           ; BSR set to: 1
  5268                           ;doprnt.c: 1262: flag |= 0x03;
  5269  0009E0  0E03               	movlw	3
  5270  0009E2  1324               	iorwf	sprintf@flag& (0+255),f,b
  5271                           
  5272                           ; BSR set to: 1
  5273                           ;doprnt.c: 1263: val = -val;
  5274  0009E4  1F21               	comf	(sprintf@val+3)& (0+255),f,b
  5275  0009E6  1F20               	comf	(sprintf@val+2)& (0+255),f,b
  5276  0009E8  1F1F               	comf	(sprintf@val+1)& (0+255),f,b
  5277  0009EA  6D1E               	negf	sprintf@val& (0+255),b
  5278  0009EC  0E00               	movlw	0
  5279  0009EE  231F               	addwfc	(sprintf@val+1)& (0+255),f,b
  5280  0009F0  2320               	addwfc	(sprintf@val+2)& (0+255),f,b
  5281  0009F2  2321               	addwfc	(sprintf@val+3)& (0+255),f,b
  5282  0009F4                     l489:
  5283                           
  5284                           ; BSR set to: 1
  5285                           ;doprnt.c: 1264: }
  5286                           ;doprnt.c: 1266: }
  5287                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5288                           
  5289                           ; BSR set to: 1
  5290  0009F4  512C               	movf	sprintf@prec& (0+255),w,b
  5291  0009F6  112D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5292  0009F8  A4D8               	btfss	status,2,c
  5293  0009FA  D008               	goto	l490
  5294                           
  5295                           ; BSR set to: 1
  5296  0009FC  511E               	movf	sprintf@val& (0+255),w,b
  5297  0009FE  111F               	iorwf	(sprintf@val+1)& (0+255),w,b
  5298  000A00  1120               	iorwf	(sprintf@val+2)& (0+255),w,b
  5299  000A02  1121               	iorwf	(sprintf@val+3)& (0+255),w,b
  5300  000A04  A4D8               	btfss	status,2,c
  5301  000A06  D002               	goto	l490
  5302                           
  5303                           ; BSR set to: 1
  5304                           ;doprnt.c: 1291: prec++;
  5305  000A08  4B2C               	infsnz	sprintf@prec& (0+255),f,b
  5306  000A0A  2B2D               	incf	(sprintf@prec+1)& (0+255),f,b
  5307  000A0C                     l490:
  5308                           
  5309                           ; BSR set to: 1
  5310                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5311                           
  5312                           ; BSR set to: 1
  5313  000A0C  0E01               	movlw	1
  5314  000A0E  6F2E               	movwf	sprintf@c& (0+255),b
  5315  000A10                     l4996:
  5316                           
  5317                           ; BSR set to: 1
  5318  000A10  0E0A               	movlw	10
  5319  000A12  192E               	xorwf	sprintf@c& (0+255),w,b
  5320  000A14  B4D8               	btfsc	status,2,c
  5321  000A16  D01B               	goto	u5950
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;doprnt.c: 1306: if(val < dpowers[c])
  5325                           
  5326                           ; BSR set to: 1
  5327                           
  5328                           ; BSR set to: 1
  5329  000A18  512E               	movf	sprintf@c& (0+255),w,b
  5330  000A1A  0D04               	mullw	4
  5331  000A1C  0E61               	movlw	low _dpowers
  5332  000A1E  24F3               	addwf	prodl,w,c
  5333  000A20  6EF6               	movwf	tblptrl,c
  5334  000A22  0EFF               	movlw	high _dpowers
  5335  000A24  20F4               	addwfc	prodh,w,c
  5336  000A26  6EF7               	movwf	tblptrh,c
  5337  000A28                     	if	1	;There are 3 active tblptr bytes
  5338  000A28  6AF8               	clrf	tblptru,c
  5339  000A2A  0E00               	movlw	low (__mediumconst shr (0+16))
  5340  000A2C  22F8               	addwfc	tblptru,f,c
  5341  000A2E                     	endif
  5342  000A2E  0009               	tblrd		*+
  5343  000A30  50F5               	movf	tablat,w,c
  5344  000A32  5D1E               	subwf	sprintf@val& (0+255),w,b
  5345  000A34  0009               	tblrd		*+
  5346  000A36  50F5               	movf	tablat,w,c
  5347  000A38  591F               	subwfb	(sprintf@val+1)& (0+255),w,b
  5348  000A3A  0009               	tblrd		*+
  5349  000A3C  50F5               	movf	tablat,w,c
  5350  000A3E  5920               	subwfb	(sprintf@val+2)& (0+255),w,b
  5351  000A40  0009               	tblrd		*+
  5352  000A42  50F5               	movf	tablat,w,c
  5353  000A44  5921               	subwfb	(sprintf@val+3)& (0+255),w,b
  5354  000A46  A0D8               	btfss	status,0,c
  5355  000A48  D002               	goto	u5950
  5356                           
  5357                           ; BSR set to: 1
  5358                           
  5359                           ; BSR set to: 1
  5360                           
  5361                           ; BSR set to: 1
  5362                           ;doprnt.c: 1307: break;
  5363  000A4A  2B2E               	incf	sprintf@c& (0+255),f,b
  5364  000A4C  D7E1               	goto	l4996
  5365  000A4E                     u5950:
  5366                           
  5367                           ; BSR set to: 1
  5368                           ;doprnt.c: 1339: if(c < prec)
  5369                           
  5370                           ; BSR set to: 1
  5371  000A4E  0E80               	movlw	128
  5372  000A50  BF2E               	btfsc	sprintf@c& (0+255),7,b
  5373  000A52  0E7F               	movlw	127
  5374  000A54  6F0C               	movwf	??_sprintf& (0+255),b
  5375  000A56  512C               	movf	sprintf@prec& (0+255),w,b
  5376  000A58  5D2E               	subwf	sprintf@c& (0+255),w,b
  5377  000A5A  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  5378  000A5C  0A80               	xorlw	128
  5379  000A5E  590C               	subwfb	??_sprintf& (0+255),w,b
  5380  000A60  B0D8               	btfsc	status,0,c
  5381  000A62  D003               	goto	l494
  5382                           
  5383                           ; BSR set to: 1
  5384                           ;doprnt.c: 1340: c = prec;
  5385  000A64  C12C  F12E         	movff	sprintf@prec,sprintf@c
  5386  000A68  D010               	goto	l496
  5387  000A6A                     l494:
  5388                           
  5389                           ; BSR set to: 1
  5390                           ;doprnt.c: 1341: else if(prec < c)
  5391                           
  5392                           ; BSR set to: 1
  5393  000A6A  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  5394  000A6C  0A80               	xorlw	128
  5395  000A6E  6F0C               	movwf	??_sprintf& (0+255),b
  5396  000A70  512E               	movf	sprintf@c& (0+255),w,b
  5397  000A72  5D2C               	subwf	sprintf@prec& (0+255),w,b
  5398  000A74  0E80               	movlw	128
  5399  000A76  BF2E               	btfsc	sprintf@c& (0+255),7,b
  5400  000A78  0E7F               	movlw	127
  5401  000A7A  590C               	subwfb	??_sprintf& (0+255),w,b
  5402  000A7C  B0D8               	btfsc	status,0,c
  5403  000A7E  D005               	goto	l496
  5404                           
  5405                           ; BSR set to: 1
  5406                           ;doprnt.c: 1342: prec = c;
  5407  000A80  512E               	movf	sprintf@c& (0+255),w,b
  5408  000A82  6F2C               	movwf	sprintf@prec& (0+255),b
  5409  000A84  6B2D               	clrf	(sprintf@prec+1)& (0+255),b
  5410  000A86  BF2C               	btfsc	sprintf@prec& (0+255),7,b
  5411  000A88  072D               	decf	(sprintf@prec+1)& (0+255),f,b
  5412  000A8A                     l496:
  5413                           
  5414                           ; BSR set to: 1
  5415                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5416                           
  5417                           ; BSR set to: 1
  5418                           
  5419                           ; BSR set to: 1
  5420  000A8A  512A               	movf	sprintf@width& (0+255),w,b
  5421  000A8C  112B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5422  000A8E  B4D8               	btfsc	status,2,c
  5423  000A90  D00D               	goto	l497
  5424                           
  5425                           ; BSR set to: 1
  5426  000A92  0E03               	movlw	3
  5427  000A94  1524               	andwf	sprintf@flag& (0+255),w,b
  5428  000A96  6F0C               	movwf	??_sprintf& (0+255),b
  5429  000A98  0E00               	movlw	0
  5430  000A9A  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  5431  000A9C  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  5432  000A9E  510C               	movf	??_sprintf& (0+255),w,b
  5433  000AA0  110D               	iorwf	(??_sprintf+1)& (0+255),w,b
  5434  000AA2  B4D8               	btfsc	status,2,c
  5435  000AA4  D003               	goto	l497
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;doprnt.c: 1346: width--;
  5439  000AA6  072A               	decf	sprintf@width& (0+255),f,b
  5440  000AA8  A0D8               	btfss	status,0,c
  5441  000AAA  072B               	decf	(sprintf@width+1)& (0+255),f,b
  5442  000AAC                     l497:
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;doprnt.c: 1348: if(flag & 0x4000) {
  5446                           
  5447                           ; BSR set to: 1
  5448  000AAC  AD25               	btfss	(sprintf@flag+1)& (0+255),6,b
  5449  000AAE  D013               	goto	l500
  5450                           
  5451                           ; BSR set to: 1
  5452                           ;doprnt.c: 1349: if(width > prec)
  5453  000AB0  512A               	movf	sprintf@width& (0+255),w,b
  5454  000AB2  5D2C               	subwf	sprintf@prec& (0+255),w,b
  5455  000AB4  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  5456  000AB6  0A80               	xorlw	128
  5457  000AB8  6F0C               	movwf	??_sprintf& (0+255),b
  5458  000ABA  512B               	movf	(sprintf@width+1)& (0+255),w,b
  5459  000ABC  0A80               	xorlw	128
  5460  000ABE  590C               	subwfb	??_sprintf& (0+255),w,b
  5461  000AC0  B0D8               	btfsc	status,0,c
  5462  000AC2  D005               	goto	l499
  5463                           
  5464                           ; BSR set to: 1
  5465                           ;doprnt.c: 1350: width -= prec;
  5466  000AC4  512C               	movf	sprintf@prec& (0+255),w,b
  5467  000AC6  5F2A               	subwf	sprintf@width& (0+255),f,b
  5468  000AC8  512D               	movf	(sprintf@prec+1)& (0+255),w,b
  5469  000ACA  5B2B               	subwfb	(sprintf@width+1)& (0+255),f,b
  5470  000ACC  D004               	goto	l500
  5471  000ACE                     l499:
  5472                           
  5473                           ; BSR set to: 1
  5474                           ;doprnt.c: 1351: else
  5475                           ;doprnt.c: 1352: width = 0;
  5476                           
  5477                           ; BSR set to: 1
  5478  000ACE  0E00               	movlw	0
  5479  000AD0  6F2B               	movwf	(sprintf@width+1)& (0+255),b
  5480  000AD2  0E00               	movlw	0
  5481  000AD4  6F2A               	movwf	sprintf@width& (0+255),b
  5482  000AD6                     l500:
  5483                           
  5484                           ; BSR set to: 1
  5485                           ;doprnt.c: 1353: }
  5486                           ;doprnt.c: 1381: if(width > c)
  5487                           
  5488                           ; BSR set to: 1
  5489                           
  5490                           ; BSR set to: 1
  5491  000AD6  0E80               	movlw	128
  5492  000AD8  BF2E               	btfsc	sprintf@c& (0+255),7,b
  5493  000ADA  0E7F               	movlw	127
  5494  000ADC  6F0C               	movwf	??_sprintf& (0+255),b
  5495  000ADE  512A               	movf	sprintf@width& (0+255),w,b
  5496  000AE0  5D2E               	subwf	sprintf@c& (0+255),w,b
  5497  000AE2  512B               	movf	(sprintf@width+1)& (0+255),w,b
  5498  000AE4  0A80               	xorlw	128
  5499  000AE6  590C               	subwfb	??_sprintf& (0+255),w,b
  5500  000AE8  B0D8               	btfsc	status,0,c
  5501  000AEA  D007               	goto	l501
  5502                           
  5503                           ; BSR set to: 1
  5504                           ;doprnt.c: 1382: width -= c;
  5505  000AEC  512E               	movf	sprintf@c& (0+255),w,b
  5506  000AEE  5F2A               	subwf	sprintf@width& (0+255),f,b
  5507  000AF0  0E00               	movlw	0
  5508  000AF2  BF2E               	btfsc	sprintf@c& (0+255),7,b
  5509  000AF4  0EFF               	movlw	255
  5510  000AF6  5B2B               	subwfb	(sprintf@width+1)& (0+255),f,b
  5511  000AF8  D004               	goto	l502
  5512  000AFA                     l501:
  5513                           
  5514                           ; BSR set to: 1
  5515                           ;doprnt.c: 1383: else
  5516                           ;doprnt.c: 1384: width = 0;
  5517                           
  5518                           ; BSR set to: 1
  5519  000AFA  0E00               	movlw	0
  5520  000AFC  6F2B               	movwf	(sprintf@width+1)& (0+255),b
  5521  000AFE  0E00               	movlw	0
  5522  000B00  6F2A               	movwf	sprintf@width& (0+255),b
  5523  000B02                     l502:
  5524                           
  5525                           ; BSR set to: 1
  5526                           ;doprnt.c: 1387: if(flag & 0x04) {
  5527                           
  5528                           ; BSR set to: 1
  5529  000B02  A524               	btfss	sprintf@flag& (0+255),2,b
  5530  000B04  D022               	goto	l503
  5531                           
  5532                           ; BSR set to: 1
  5533                           ;doprnt.c: 1392: if(flag & 0x03)
  5534  000B06  0E03               	movlw	3
  5535  000B08  1524               	andwf	sprintf@flag& (0+255),w,b
  5536  000B0A  6F0C               	movwf	??_sprintf& (0+255),b
  5537  000B0C  0E00               	movlw	0
  5538  000B0E  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  5539  000B10  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  5540  000B12  510C               	movf	??_sprintf& (0+255),w,b
  5541  000B14  110D               	iorwf	(??_sprintf+1)& (0+255),w,b
  5542  000B16  B4D8               	btfsc	status,2,c
  5543  000B18  D008               	goto	l504
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5547  000B1A  C100  FFD9         	movff	sprintf@sp,fsr2l
  5548  000B1E  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5549  000B22  0E2D               	movlw	45
  5550  000B24  6EDF               	movwf	indf2,c
  5551                           
  5552                           ; BSR set to: 1
  5553  000B26  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5554  000B28  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5555  000B2A                     l504:
  5556                           
  5557                           ; BSR set to: 1
  5558                           ;doprnt.c: 1415: if(width)
  5559                           
  5560                           ; BSR set to: 1
  5561  000B2A  512A               	movf	sprintf@width& (0+255),w,b
  5562  000B2C  112B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5563  000B2E  B4D8               	btfsc	status,2,c
  5564  000B30  D079               	goto	l513
  5565                           
  5566                           ; BSR set to: 1
  5567                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5568                           
  5569                           ; BSR set to: 1
  5570                           
  5571                           ;doprnt.c: 1416: do
  5572  000B32  C100  FFD9         	movff	sprintf@sp,fsr2l
  5573  000B36  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5574  000B3A  0E30               	movlw	48
  5575  000B3C  6EDF               	movwf	indf2,c
  5576                           
  5577                           ; BSR set to: 1
  5578  000B3E  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5579  000B40  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5580                           
  5581                           ; BSR set to: 1
  5582                           ;doprnt.c: 1418: while(--width);
  5583  000B42  072A               	decf	sprintf@width& (0+255),f,b
  5584  000B44  A0D8               	btfss	status,0,c
  5585  000B46  072B               	decf	(sprintf@width+1)& (0+255),f,b
  5586  000B48  D7F0               	goto	l504
  5587  000B4A                     l503:
  5588                           
  5589                           ; BSR set to: 1
  5590                           ;doprnt.c: 1422: {
  5591                           ;doprnt.c: 1424: if(width
  5592                           ;doprnt.c: 1428: )
  5593                           
  5594                           ; BSR set to: 1
  5595  000B4A  512A               	movf	sprintf@width& (0+255),w,b
  5596  000B4C  112B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5597  000B4E  B4D8               	btfsc	status,2,c
  5598  000B50  D00F               	goto	u6080
  5599  000B52                     u6070:
  5600                           
  5601                           ; BSR set to: 1
  5602                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5603                           
  5604                           ; BSR set to: 1
  5605                           
  5606                           ;doprnt.c: 1429: do
  5607  000B52  C100  FFD9         	movff	sprintf@sp,fsr2l
  5608  000B56  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5609  000B5A  0E20               	movlw	32
  5610  000B5C  6EDF               	movwf	indf2,c
  5611                           
  5612                           ; BSR set to: 1
  5613  000B5E  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5614  000B60  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5615                           
  5616                           ; BSR set to: 1
  5617                           ;doprnt.c: 1431: while(--width);
  5618  000B62  072A               	decf	sprintf@width& (0+255),f,b
  5619  000B64  A0D8               	btfss	status,0,c
  5620  000B66  072B               	decf	(sprintf@width+1)& (0+255),f,b
  5621  000B68  512A               	movf	sprintf@width& (0+255),w,b
  5622  000B6A  112B               	iorwf	(sprintf@width+1)& (0+255),w,b
  5623  000B6C  A4D8               	btfss	status,2,c
  5624  000B6E  D7F1               	goto	u6070
  5625  000B70                     u6080:
  5626                           
  5627                           ; BSR set to: 1
  5628                           ;doprnt.c: 1438: if(flag & 0x03)
  5629                           
  5630                           ; BSR set to: 1
  5631                           
  5632                           ; BSR set to: 1
  5633  000B70  0E03               	movlw	3
  5634  000B72  1524               	andwf	sprintf@flag& (0+255),w,b
  5635  000B74  6F0C               	movwf	??_sprintf& (0+255),b
  5636  000B76  0E00               	movlw	0
  5637  000B78  1525               	andwf	(sprintf@flag+1)& (0+255),w,b
  5638  000B7A  6F0D               	movwf	(??_sprintf+1)& (0+255),b
  5639  000B7C  510C               	movf	??_sprintf& (0+255),w,b
  5640  000B7E  110D               	iorwf	(??_sprintf+1)& (0+255),w,b
  5641  000B80  B4D8               	btfsc	status,2,c
  5642  000B82  D050               	goto	l513
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5646  000B84  C100  FFD9         	movff	sprintf@sp,fsr2l
  5647  000B88  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5648  000B8C  0E2D               	movlw	45
  5649  000B8E  6EDF               	movwf	indf2,c
  5650  000B90  D047               	goto	l5070
  5651  000B92                     l5066:
  5652                           
  5653                           ; BSR set to: 1
  5654                           ;doprnt.c: 1478: {
  5655                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5656  000B92  C12C  F10C         	movff	sprintf@prec,??_sprintf
  5657  000B96  C12D  F10D         	movff	sprintf@prec+1,??_sprintf+1
  5658  000B9A  90D8               	bcf	status,0,c
  5659  000B9C  370C               	rlcf	??_sprintf& (0+255),f,b
  5660  000B9E  370D               	rlcf	(??_sprintf+1)& (0+255),f,b
  5661  000BA0  90D8               	bcf	status,0,c
  5662  000BA2  370C               	rlcf	??_sprintf& (0+255),f,b
  5663  000BA4  370D               	rlcf	(??_sprintf+1)& (0+255),f,b
  5664  000BA6  0E61               	movlw	low _dpowers
  5665  000BA8  250C               	addwf	??_sprintf& (0+255),w,b
  5666  000BAA  6EF6               	movwf	tblptrl,c
  5667  000BAC  0EFF               	movlw	high _dpowers
  5668  000BAE  210D               	addwfc	(??_sprintf+1)& (0+255),w,b
  5669  000BB0  6EF7               	movwf	tblptrh,c
  5670  000BB2                     	if	1	;There are 3 active tblptr bytes
  5671  000BB2  6AF8               	clrf	tblptru,c
  5672  000BB4  0E00               	movlw	low (__mediumconst shr (0+16))
  5673  000BB6  22F8               	addwfc	tblptru,f,c
  5674  000BB8                     	endif
  5675  000BB8  0009               	tblrd		*+
  5676  000BBA  CFF5 F084          	movff	tablat,___lldiv@divisor
  5677  000BBE  0009               	tblrd		*+
  5678  000BC0  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  5679  000BC4  0009               	tblrd		*+
  5680  000BC6  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  5681  000BCA  000A               	tblrd		*-
  5682  000BCC  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  5683  000BD0  C11E  F080         	movff	sprintf@val,___lldiv@dividend
  5684  000BD4  C11F  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  5685  000BD8  C120  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  5686  000BDC  C121  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  5687  000BE0  ECDC  F01F         	call	___lldiv	;wreg free
  5688  000BE4  C080  F08D         	movff	?___lldiv,___llmod@dividend
  5689  000BE8  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  5690  000BEC  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  5691  000BF0  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  5692  000BF4  0E0A               	movlw	10
  5693  000BF6  0100               	movlb	0	; () banked
  5694  000BF8  6F91               	movwf	___llmod@divisor& (0+255),b
  5695  000BFA  0E00               	movlw	0
  5696  000BFC  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  5697  000BFE  0E00               	movlw	0
  5698  000C00  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  5699  000C02  0E00               	movlw	0
  5700  000C04  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  5701  000C06  EC8E  F020         	call	___llmod	;wreg free
  5702  000C0A  0100               	movlb	0	; () banked
  5703  000C0C  518D               	movf	?___llmod& (0+255),w,b
  5704  000C0E  0F30               	addlw	48
  5705  000C10  0101               	movlb	1	; () banked
  5706  000C12  6F2E               	movwf	sprintf@c& (0+255),b
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;doprnt.c: 1523: }
  5710                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5711  000C14  C100  FFD9         	movff	sprintf@sp,fsr2l
  5712  000C18  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5713  000C1C  C12E  FFDF         	movff	sprintf@c,indf2
  5714  000C20                     l5070:
  5715                           
  5716                           ; BSR set to: 1
  5717  000C20  4B00               	infsnz	sprintf@sp& (0+255),f,b
  5718  000C22  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  5719  000C24                     l513:
  5720                           
  5721                           ; BSR set to: 1
  5722                           
  5723                           ; BSR set to: 1
  5724  000C24  072C               	decf	sprintf@prec& (0+255),f,b
  5725  000C26  A0D8               	btfss	status,0,c
  5726  000C28  072D               	decf	(sprintf@prec+1)& (0+255),f,b
  5727  000C2A  292C               	incf	sprintf@prec& (0+255),w,b
  5728  000C2C  E1B2               	bnz	l5066
  5729  000C2E  292D               	incf	(sprintf@prec+1)& (0+255),w,b
  5730  000C30  A4D8               	btfss	status,2,c
  5731  000C32  D7AF               	goto	l514
  5732  000C34                     u6100:
  5733                           
  5734                           ; BSR set to: 1
  5735                           
  5736                           ; BSR set to: 1
  5737                           
  5738                           ; BSR set to: 1
  5739  000C34  C102  FFF6         	movff	sprintf@f,tblptrl
  5740  000C38  C103  FFF7         	movff	sprintf@f+1,tblptrh
  5741  000C3C  4B02               	infsnz	sprintf@f& (0+255),f,b
  5742  000C3E  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  5743  000C40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5744  000C40  6AF8               	clrf	tblptru,c
  5745  000C42                     	endif
  5746  000C42                     	if	0	;tblptru may be non-zero
  5747  000C42                     	endif
  5748  000C42  0008               	tblrd		*
  5749  000C44  CFF5 F12E          	movff	tablat,sprintf@c
  5750  000C48  512E               	movf	sprintf@c& (0+255),w,b
  5751  000C4A  A4D8               	btfss	status,2,c
  5752  000C4C  EF10  F000         	goto	l401
  5753  000C50                     u6110:
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;doprnt.c: 1538: *sp = 0;
  5757                           
  5758                           ; BSR set to: 1
  5759                           
  5760                           ;doprnt.c: 1525: }
  5761                           ;doprnt.c: 1533: }
  5762                           ;doprnt.c: 1535: alldone:
  5763                           
  5764                           ; BSR set to: 1
  5765  000C50  C100  FFD9         	movff	sprintf@sp,fsr2l
  5766  000C54  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  5767  000C58  0E00               	movlw	0
  5768  000C5A  6EDF               	movwf	indf2,c
  5769  000C5C  0012               	return	
  5770  000C5E                     __end_of_sprintf:
  5771                           	opt stack 0
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           intcon	equ	0xFF2
  5779                           intcon2	equ	0xFF1
  5780                           intcon3	equ	0xFF0
  5781                           indf0	equ	0xFEF
  5782                           postinc0	equ	0xFEE
  5783                           fsr0h	equ	0xFEA
  5784                           fsr0l	equ	0xFE9
  5785                           wreg	equ	0xFE8
  5786                           postdec1	equ	0xFE5
  5787                           fsr1l	equ	0xFE1
  5788                           indf2	equ	0xFDF
  5789                           postinc2	equ	0xFDE
  5790                           postdec2	equ	0xFDD
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _scale *****************
  5796 ;; Defined at:
  5797 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  scl             1    wreg     char 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  scl             1   89[BANK0 ] char 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  4   81[BANK0 ] char 
  5804 ;; Registers used:
  5805 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;Total ram usage:        9 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    4
  5818 ;; This function calls:
  5819 ;;		___awdiv
  5820 ;;		___awmod
  5821 ;;		___flmul
  5822 ;; This function is called by:
  5823 ;;		_sprintf
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text10
  5828  00120A                     __ptext10:
  5829                           	opt stack 0
  5830  00120A                     _scale:
  5831                           	opt stack 25
  5832                           
  5833                           ; BSR set to: 1
  5834                           ;incstack = 0
  5835                           ;scale@scl stored from wreg
  5836  00120A  0100               	movlb	0	; () banked
  5837  00120C  6FD9               	movwf	scale@scl& (0+255),b
  5838                           
  5839                           ;doprnt.c: 428: if(scl < 0) {
  5840  00120E  0100               	movlb	0	; () banked
  5841  001210  AFD9               	btfss	scale@scl& (0+255),7,b
  5842  001212  D127               	goto	l390
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;doprnt.c: 429: scl = -scl;
  5846  001214  6DD9               	negf	scale@scl& (0+255),b
  5847                           
  5848                           ;doprnt.c: 430: if(scl>=110)
  5849  001216  51D9               	movf	scale@scl& (0+255),w,b
  5850  001218  0A80               	xorlw	128
  5851  00121A  0F12               	addlw	-238
  5852  00121C  A0D8               	btfss	status,0,c
  5853  00121E  D0A5               	goto	l391
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5857  001220  0E00               	movlw	0
  5858  001222  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5859  001224  0E0A               	movlw	10
  5860  001226  6F88               	movwf	___awdiv@divisor& (0+255),b
  5861  001228  0E00               	movlw	0
  5862  00122A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5863  00122C  0E64               	movlw	100
  5864  00122E  6F82               	movwf	___awmod@divisor& (0+255),b
  5865  001230  51D9               	movf	scale@scl& (0+255),w,b
  5866  001232  6F80               	movwf	___awmod@dividend& (0+255),b
  5867  001234  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5868  001236  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  5869  001238  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  5870  00123A  EC1E  F020         	call	___awmod	;wreg free
  5871  00123E  C080  F086         	movff	?___awmod,___awdiv@dividend
  5872  001242  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  5873  001246  EC99  F01F         	call	___awdiv	;wreg free
  5874  00124A  0100               	movlb	0	; () banked
  5875  00124C  90D8               	bcf	status,0,c
  5876  00124E  3786               	rlcf	?___awdiv& (0+255),f,b
  5877  001250  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5878  001252  90D8               	bcf	status,0,c
  5879  001254  3786               	rlcf	?___awdiv& (0+255),f,b
  5880  001256  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5881  001258  0E24               	movlw	36
  5882  00125A  2786               	addwf	?___awdiv& (0+255),f,b
  5883  00125C  0E00               	movlw	0
  5884  00125E  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5885  001260  0E2D               	movlw	low __npowers_
  5886  001262  2586               	addwf	?___awdiv& (0+255),w,b
  5887  001264  6EF6               	movwf	tblptrl,c
  5888  001266  0EFF               	movlw	high __npowers_
  5889  001268  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5890  00126A  6EF7               	movwf	tblptrh,c
  5891  00126C                     	if	1	;There are 3 active tblptr bytes
  5892  00126C  6AF8               	clrf	tblptru,c
  5893  00126E  0E00               	movlw	low (__mediumconst shr (0+16))
  5894  001270  22F8               	addwfc	tblptru,f,c
  5895  001272                     	endif
  5896  001272  0009               	tblrd		*+
  5897  001274  CFF5 F0BC          	movff	tablat,___flmul@a
  5898  001278  0009               	tblrd		*+
  5899  00127A  CFF5 F0BD          	movff	tablat,___flmul@a+1
  5900  00127E  0009               	tblrd		*+
  5901  001280  CFF5 F0BE          	movff	tablat,___flmul@a+2
  5902  001284  000A               	tblrd		*-
  5903  001286  CFF5 F0BF          	movff	tablat,___flmul@a+3
  5904  00128A  0E00               	movlw	0
  5905  00128C  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  5906  00128E  0E64               	movlw	100
  5907  001290  6F88               	movwf	___awdiv@divisor& (0+255),b
  5908  001292  51D9               	movf	scale@scl& (0+255),w,b
  5909  001294  6F86               	movwf	___awdiv@dividend& (0+255),b
  5910  001296  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  5911  001298  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  5912  00129A  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5913  00129C  EC99  F01F         	call	___awdiv	;wreg free
  5914  0012A0  0100               	movlb	0	; () banked
  5915  0012A2  90D8               	bcf	status,0,c
  5916  0012A4  3786               	rlcf	?___awdiv& (0+255),f,b
  5917  0012A6  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5918  0012A8  90D8               	bcf	status,0,c
  5919  0012AA  3786               	rlcf	?___awdiv& (0+255),f,b
  5920  0012AC  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  5921  0012AE  0E48               	movlw	72
  5922  0012B0  2786               	addwf	?___awdiv& (0+255),f,b
  5923  0012B2  0E00               	movlw	0
  5924  0012B4  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  5925  0012B6  0E2D               	movlw	low __npowers_
  5926  0012B8  2586               	addwf	?___awdiv& (0+255),w,b
  5927  0012BA  6EF6               	movwf	tblptrl,c
  5928  0012BC  0EFF               	movlw	high __npowers_
  5929  0012BE  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  5930  0012C0  6EF7               	movwf	tblptrh,c
  5931  0012C2                     	if	1	;There are 3 active tblptr bytes
  5932  0012C2  6AF8               	clrf	tblptru,c
  5933  0012C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5934  0012C6  22F8               	addwfc	tblptru,f,c
  5935  0012C8                     	endif
  5936  0012C8  0009               	tblrd		*+
  5937  0012CA  CFF5 F0B8          	movff	tablat,___flmul@b
  5938  0012CE  0009               	tblrd		*+
  5939  0012D0  CFF5 F0B9          	movff	tablat,___flmul@b+1
  5940  0012D4  0009               	tblrd		*+
  5941  0012D6  CFF5 F0BA          	movff	tablat,___flmul@b+2
  5942  0012DA  000A               	tblrd		*-
  5943  0012DC  CFF5 F0BB          	movff	tablat,___flmul@b+3
  5944  0012E0  EC57  F00B         	call	___flmul	;wreg free
  5945  0012E4  C0B8  F0D5         	movff	?___flmul,_scale$1903
  5946  0012E8  C0B9  F0D6         	movff	?___flmul+1,_scale$1903+1
  5947  0012EC  C0BA  F0D7         	movff	?___flmul+2,_scale$1903+2
  5948  0012F0  C0BB  F0D8         	movff	?___flmul+3,_scale$1903+3
  5949                           
  5950                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5951  0012F4  C0D5  F0B8         	movff	_scale$1903,___flmul@b
  5952  0012F8  C0D6  F0B9         	movff	_scale$1903+1,___flmul@b+1
  5953  0012FC  C0D7  F0BA         	movff	_scale$1903+2,___flmul@b+2
  5954  001300  C0D8  F0BB         	movff	_scale$1903+3,___flmul@b+3
  5955  001304  0E00               	movlw	0
  5956  001306  0100               	movlb	0	; () banked
  5957  001308  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  5958  00130A  0E0A               	movlw	10
  5959  00130C  6F82               	movwf	___awmod@divisor& (0+255),b
  5960  00130E  51D9               	movf	scale@scl& (0+255),w,b
  5961  001310  6F80               	movwf	___awmod@dividend& (0+255),b
  5962  001312  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  5963  001314  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  5964  001316  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  5965  001318  EC1E  F020         	call	___awmod	;wreg free
  5966  00131C  0100               	movlb	0	; () banked
  5967  00131E  90D8               	bcf	status,0,c
  5968  001320  3780               	rlcf	?___awmod& (0+255),f,b
  5969  001322  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5970  001324  90D8               	bcf	status,0,c
  5971  001326  3780               	rlcf	?___awmod& (0+255),f,b
  5972  001328  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  5973  00132A  0E2D               	movlw	low __npowers_
  5974  00132C  2580               	addwf	?___awmod& (0+255),w,b
  5975  00132E  6EF6               	movwf	tblptrl,c
  5976  001330  0EFF               	movlw	high __npowers_
  5977  001332  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  5978  001334  6EF7               	movwf	tblptrh,c
  5979  001336                     	if	1	;There are 3 active tblptr bytes
  5980  001336  6AF8               	clrf	tblptru,c
  5981  001338  0E00               	movlw	low (__mediumconst shr (0+16))
  5982  00133A  22F8               	addwfc	tblptru,f,c
  5983  00133C                     	endif
  5984  00133C  0009               	tblrd		*+
  5985  00133E  CFF5 F0BC          	movff	tablat,___flmul@a
  5986  001342  0009               	tblrd		*+
  5987  001344  CFF5 F0BD          	movff	tablat,___flmul@a+1
  5988  001348  0009               	tblrd		*+
  5989  00134A  CFF5 F0BE          	movff	tablat,___flmul@a+2
  5990  00134E  000A               	tblrd		*-
  5991  001350  CFF5 F0BF          	movff	tablat,___flmul@a+3
  5992  001354  EC57  F00B         	call	___flmul	;wreg free
  5993  001358  C0B8  F0D1         	movff	?___flmul,?_scale
  5994  00135C  C0B9  F0D2         	movff	?___flmul+1,?_scale+1
  5995  001360  C0BA  F0D3         	movff	?___flmul+2,?_scale+2
  5996  001364  C0BB  F0D4         	movff	?___flmul+3,?_scale+3
  5997  001368  0012               	return	
  5998  00136A                     l391:
  5999                           
  6000                           ;doprnt.c: 432: else if(scl > 10)
  6001  00136A  0100               	movlb	0	; () banked
  6002  00136C  51D9               	movf	scale@scl& (0+255),w,b
  6003  00136E  0A80               	xorlw	128
  6004  001370  0F75               	addlw	-139
  6005  001372  A0D8               	btfss	status,0,c
  6006  001374  D05D               	goto	l394
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6010  001376  0E00               	movlw	0
  6011  001378  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6012  00137A  0E0A               	movlw	10
  6013  00137C  6F88               	movwf	___awdiv@divisor& (0+255),b
  6014  00137E  51D9               	movf	scale@scl& (0+255),w,b
  6015  001380  6F86               	movwf	___awdiv@dividend& (0+255),b
  6016  001382  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6017  001384  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6018  001386  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6019  001388  EC99  F01F         	call	___awdiv	;wreg free
  6020  00138C  0100               	movlb	0	; () banked
  6021  00138E  90D8               	bcf	status,0,c
  6022  001390  3786               	rlcf	?___awdiv& (0+255),f,b
  6023  001392  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6024  001394  90D8               	bcf	status,0,c
  6025  001396  3786               	rlcf	?___awdiv& (0+255),f,b
  6026  001398  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6027  00139A  0E24               	movlw	36
  6028  00139C  2786               	addwf	?___awdiv& (0+255),f,b
  6029  00139E  0E00               	movlw	0
  6030  0013A0  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6031  0013A2  0E2D               	movlw	low __npowers_
  6032  0013A4  2586               	addwf	?___awdiv& (0+255),w,b
  6033  0013A6  6EF6               	movwf	tblptrl,c
  6034  0013A8  0EFF               	movlw	high __npowers_
  6035  0013AA  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6036  0013AC  6EF7               	movwf	tblptrh,c
  6037  0013AE                     	if	1	;There are 3 active tblptr bytes
  6038  0013AE  6AF8               	clrf	tblptru,c
  6039  0013B0  0E00               	movlw	low (__mediumconst shr (0+16))
  6040  0013B2  22F8               	addwfc	tblptru,f,c
  6041  0013B4                     	endif
  6042  0013B4  0009               	tblrd		*+
  6043  0013B6  CFF5 F0B8          	movff	tablat,___flmul@b
  6044  0013BA  0009               	tblrd		*+
  6045  0013BC  CFF5 F0B9          	movff	tablat,___flmul@b+1
  6046  0013C0  0009               	tblrd		*+
  6047  0013C2  CFF5 F0BA          	movff	tablat,___flmul@b+2
  6048  0013C6  000A               	tblrd		*-
  6049  0013C8  CFF5 F0BB          	movff	tablat,___flmul@b+3
  6050  0013CC  0E00               	movlw	0
  6051  0013CE  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6052  0013D0  0E0A               	movlw	10
  6053  0013D2  6F82               	movwf	___awmod@divisor& (0+255),b
  6054  0013D4  51D9               	movf	scale@scl& (0+255),w,b
  6055  0013D6  6F80               	movwf	___awmod@dividend& (0+255),b
  6056  0013D8  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6057  0013DA  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6058  0013DC  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6059  0013DE  EC1E  F020         	call	___awmod	;wreg free
  6060  0013E2  0100               	movlb	0	; () banked
  6061  0013E4  90D8               	bcf	status,0,c
  6062  0013E6  3780               	rlcf	?___awmod& (0+255),f,b
  6063  0013E8  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6064  0013EA  90D8               	bcf	status,0,c
  6065  0013EC  3780               	rlcf	?___awmod& (0+255),f,b
  6066  0013EE  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6067  0013F0  0E2D               	movlw	low __npowers_
  6068  0013F2  2580               	addwf	?___awmod& (0+255),w,b
  6069  0013F4  6EF6               	movwf	tblptrl,c
  6070  0013F6  0EFF               	movlw	high __npowers_
  6071  0013F8  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  6072  0013FA  6EF7               	movwf	tblptrh,c
  6073  0013FC                     	if	1	;There are 3 active tblptr bytes
  6074  0013FC  6AF8               	clrf	tblptru,c
  6075  0013FE  0E00               	movlw	low (__mediumconst shr (0+16))
  6076  001400  22F8               	addwfc	tblptru,f,c
  6077  001402                     	endif
  6078  001402  0009               	tblrd		*+
  6079  001404  CFF5 F0BC          	movff	tablat,___flmul@a
  6080  001408  0009               	tblrd		*+
  6081  00140A  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6082  00140E  0009               	tblrd		*+
  6083  001410  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6084  001414  000A               	tblrd		*-
  6085  001416  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6086  00141A  EC57  F00B         	call	___flmul	;wreg free
  6087  00141E  C0B8  F0D1         	movff	?___flmul,?_scale
  6088  001422  C0B9  F0D2         	movff	?___flmul+1,?_scale+1
  6089  001426  C0BA  F0D3         	movff	?___flmul+2,?_scale+2
  6090  00142A  C0BB  F0D4         	movff	?___flmul+3,?_scale+3
  6091  00142E  0012               	return	
  6092  001430                     l394:
  6093                           
  6094                           ;doprnt.c: 434: return _npowers_[scl];
  6095  001430  0100               	movlb	0	; () banked
  6096  001432  51D9               	movf	scale@scl& (0+255),w,b
  6097  001434  0D04               	mullw	4
  6098  001436  0E2D               	movlw	low __npowers_
  6099  001438  24F3               	addwf	prodl,w,c
  6100  00143A  6EF6               	movwf	tblptrl,c
  6101  00143C  0EFF               	movlw	high __npowers_
  6102  00143E  20F4               	addwfc	prodh,w,c
  6103  001440  6EF7               	movwf	tblptrh,c
  6104  001442                     	if	1	;There are 3 active tblptr bytes
  6105  001442  6AF8               	clrf	tblptru,c
  6106  001444  0E00               	movlw	low (__mediumconst shr (0+16))
  6107  001446  22F8               	addwfc	tblptru,f,c
  6108  001448                     	endif
  6109  001448  0009               	tblrd		*+
  6110  00144A  CFF5 F0D1          	movff	tablat,?_scale
  6111  00144E  0009               	tblrd		*+
  6112  001450  CFF5 F0D2          	movff	tablat,?_scale+1
  6113  001454  0009               	tblrd		*+
  6114  001456  CFF5 F0D3          	movff	tablat,?_scale+2
  6115  00145A  000A               	tblrd		*-
  6116  00145C  CFF5 F0D4          	movff	tablat,?_scale+3
  6117                           
  6118                           ; BSR set to: 0
  6119  001460  0012               	return	
  6120  001462                     l390:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;doprnt.c: 435: }
  6124                           ;doprnt.c: 436: if(scl>=110)
  6125                           
  6126                           ; BSR set to: 0
  6127  001462  51D9               	movf	scale@scl& (0+255),w,b
  6128  001464  0A80               	xorlw	128
  6129  001466  0F12               	addlw	-238
  6130  001468  A0D8               	btfss	status,0,c
  6131  00146A  D0A5               	goto	l395
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6135  00146C  0E00               	movlw	0
  6136  00146E  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6137  001470  0E0A               	movlw	10
  6138  001472  6F88               	movwf	___awdiv@divisor& (0+255),b
  6139  001474  0E00               	movlw	0
  6140  001476  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6141  001478  0E64               	movlw	100
  6142  00147A  6F82               	movwf	___awmod@divisor& (0+255),b
  6143  00147C  51D9               	movf	scale@scl& (0+255),w,b
  6144  00147E  6F80               	movwf	___awmod@dividend& (0+255),b
  6145  001480  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6146  001482  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6147  001484  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6148  001486  EC1E  F020         	call	___awmod	;wreg free
  6149  00148A  C080  F086         	movff	?___awmod,___awdiv@dividend
  6150  00148E  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  6151  001492  EC99  F01F         	call	___awdiv	;wreg free
  6152  001496  0100               	movlb	0	; () banked
  6153  001498  90D8               	bcf	status,0,c
  6154  00149A  3786               	rlcf	?___awdiv& (0+255),f,b
  6155  00149C  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6156  00149E  90D8               	bcf	status,0,c
  6157  0014A0  3786               	rlcf	?___awdiv& (0+255),f,b
  6158  0014A2  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6159  0014A4  0E24               	movlw	36
  6160  0014A6  2786               	addwf	?___awdiv& (0+255),f,b
  6161  0014A8  0E00               	movlw	0
  6162  0014AA  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6163  0014AC  0EF9               	movlw	low __powers_
  6164  0014AE  2586               	addwf	?___awdiv& (0+255),w,b
  6165  0014B0  6EF6               	movwf	tblptrl,c
  6166  0014B2  0EFE               	movlw	high __powers_
  6167  0014B4  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6168  0014B6  6EF7               	movwf	tblptrh,c
  6169  0014B8                     	if	1	;There are 3 active tblptr bytes
  6170  0014B8  6AF8               	clrf	tblptru,c
  6171  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
  6172  0014BC  22F8               	addwfc	tblptru,f,c
  6173  0014BE                     	endif
  6174  0014BE  0009               	tblrd		*+
  6175  0014C0  CFF5 F0BC          	movff	tablat,___flmul@a
  6176  0014C4  0009               	tblrd		*+
  6177  0014C6  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6178  0014CA  0009               	tblrd		*+
  6179  0014CC  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6180  0014D0  000A               	tblrd		*-
  6181  0014D2  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6182  0014D6  0E00               	movlw	0
  6183  0014D8  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6184  0014DA  0E64               	movlw	100
  6185  0014DC  6F88               	movwf	___awdiv@divisor& (0+255),b
  6186  0014DE  51D9               	movf	scale@scl& (0+255),w,b
  6187  0014E0  6F86               	movwf	___awdiv@dividend& (0+255),b
  6188  0014E2  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6189  0014E4  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6190  0014E6  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6191  0014E8  EC99  F01F         	call	___awdiv	;wreg free
  6192  0014EC  0100               	movlb	0	; () banked
  6193  0014EE  90D8               	bcf	status,0,c
  6194  0014F0  3786               	rlcf	?___awdiv& (0+255),f,b
  6195  0014F2  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6196  0014F4  90D8               	bcf	status,0,c
  6197  0014F6  3786               	rlcf	?___awdiv& (0+255),f,b
  6198  0014F8  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6199  0014FA  0E48               	movlw	72
  6200  0014FC  2786               	addwf	?___awdiv& (0+255),f,b
  6201  0014FE  0E00               	movlw	0
  6202  001500  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6203  001502  0EF9               	movlw	low __powers_
  6204  001504  2586               	addwf	?___awdiv& (0+255),w,b
  6205  001506  6EF6               	movwf	tblptrl,c
  6206  001508  0EFE               	movlw	high __powers_
  6207  00150A  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6208  00150C  6EF7               	movwf	tblptrh,c
  6209  00150E                     	if	1	;There are 3 active tblptr bytes
  6210  00150E  6AF8               	clrf	tblptru,c
  6211  001510  0E00               	movlw	low (__mediumconst shr (0+16))
  6212  001512  22F8               	addwfc	tblptru,f,c
  6213  001514                     	endif
  6214  001514  0009               	tblrd		*+
  6215  001516  CFF5 F0B8          	movff	tablat,___flmul@b
  6216  00151A  0009               	tblrd		*+
  6217  00151C  CFF5 F0B9          	movff	tablat,___flmul@b+1
  6218  001520  0009               	tblrd		*+
  6219  001522  CFF5 F0BA          	movff	tablat,___flmul@b+2
  6220  001526  000A               	tblrd		*-
  6221  001528  CFF5 F0BB          	movff	tablat,___flmul@b+3
  6222  00152C  EC57  F00B         	call	___flmul	;wreg free
  6223  001530  C0B8  F0D5         	movff	?___flmul,_scale$1903
  6224  001534  C0B9  F0D6         	movff	?___flmul+1,_scale$1903+1
  6225  001538  C0BA  F0D7         	movff	?___flmul+2,_scale$1903+2
  6226  00153C  C0BB  F0D8         	movff	?___flmul+3,_scale$1903+3
  6227                           
  6228                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6229  001540  C0D5  F0B8         	movff	_scale$1903,___flmul@b
  6230  001544  C0D6  F0B9         	movff	_scale$1903+1,___flmul@b+1
  6231  001548  C0D7  F0BA         	movff	_scale$1903+2,___flmul@b+2
  6232  00154C  C0D8  F0BB         	movff	_scale$1903+3,___flmul@b+3
  6233  001550  0E00               	movlw	0
  6234  001552  0100               	movlb	0	; () banked
  6235  001554  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6236  001556  0E0A               	movlw	10
  6237  001558  6F82               	movwf	___awmod@divisor& (0+255),b
  6238  00155A  51D9               	movf	scale@scl& (0+255),w,b
  6239  00155C  6F80               	movwf	___awmod@dividend& (0+255),b
  6240  00155E  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6241  001560  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6242  001562  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6243  001564  EC1E  F020         	call	___awmod	;wreg free
  6244  001568  0100               	movlb	0	; () banked
  6245  00156A  90D8               	bcf	status,0,c
  6246  00156C  3780               	rlcf	?___awmod& (0+255),f,b
  6247  00156E  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6248  001570  90D8               	bcf	status,0,c
  6249  001572  3780               	rlcf	?___awmod& (0+255),f,b
  6250  001574  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6251  001576  0EF9               	movlw	low __powers_
  6252  001578  2580               	addwf	?___awmod& (0+255),w,b
  6253  00157A  6EF6               	movwf	tblptrl,c
  6254  00157C  0EFE               	movlw	high __powers_
  6255  00157E  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  6256  001580  6EF7               	movwf	tblptrh,c
  6257  001582                     	if	1	;There are 3 active tblptr bytes
  6258  001582  6AF8               	clrf	tblptru,c
  6259  001584  0E00               	movlw	low (__mediumconst shr (0+16))
  6260  001586  22F8               	addwfc	tblptru,f,c
  6261  001588                     	endif
  6262  001588  0009               	tblrd		*+
  6263  00158A  CFF5 F0BC          	movff	tablat,___flmul@a
  6264  00158E  0009               	tblrd		*+
  6265  001590  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6266  001594  0009               	tblrd		*+
  6267  001596  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6268  00159A  000A               	tblrd		*-
  6269  00159C  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6270  0015A0  EC57  F00B         	call	___flmul	;wreg free
  6271  0015A4  C0B8  F0D1         	movff	?___flmul,?_scale
  6272  0015A8  C0B9  F0D2         	movff	?___flmul+1,?_scale+1
  6273  0015AC  C0BA  F0D3         	movff	?___flmul+2,?_scale+2
  6274  0015B0  C0BB  F0D4         	movff	?___flmul+3,?_scale+3
  6275  0015B4  0012               	return	
  6276  0015B6                     l395:
  6277                           
  6278                           ;doprnt.c: 438: else if(scl > 10)
  6279  0015B6  0100               	movlb	0	; () banked
  6280  0015B8  51D9               	movf	scale@scl& (0+255),w,b
  6281  0015BA  0A80               	xorlw	128
  6282  0015BC  0F75               	addlw	-139
  6283  0015BE  A0D8               	btfss	status,0,c
  6284  0015C0  D05D               	goto	l397
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6288  0015C2  0E00               	movlw	0
  6289  0015C4  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6290  0015C6  0E0A               	movlw	10
  6291  0015C8  6F88               	movwf	___awdiv@divisor& (0+255),b
  6292  0015CA  51D9               	movf	scale@scl& (0+255),w,b
  6293  0015CC  6F86               	movwf	___awdiv@dividend& (0+255),b
  6294  0015CE  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6295  0015D0  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  6296  0015D2  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6297  0015D4  EC99  F01F         	call	___awdiv	;wreg free
  6298  0015D8  0100               	movlb	0	; () banked
  6299  0015DA  90D8               	bcf	status,0,c
  6300  0015DC  3786               	rlcf	?___awdiv& (0+255),f,b
  6301  0015DE  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6302  0015E0  90D8               	bcf	status,0,c
  6303  0015E2  3786               	rlcf	?___awdiv& (0+255),f,b
  6304  0015E4  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6305  0015E6  0E24               	movlw	36
  6306  0015E8  2786               	addwf	?___awdiv& (0+255),f,b
  6307  0015EA  0E00               	movlw	0
  6308  0015EC  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6309  0015EE  0EF9               	movlw	low __powers_
  6310  0015F0  2586               	addwf	?___awdiv& (0+255),w,b
  6311  0015F2  6EF6               	movwf	tblptrl,c
  6312  0015F4  0EFE               	movlw	high __powers_
  6313  0015F6  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6314  0015F8  6EF7               	movwf	tblptrh,c
  6315  0015FA                     	if	1	;There are 3 active tblptr bytes
  6316  0015FA  6AF8               	clrf	tblptru,c
  6317  0015FC  0E00               	movlw	low (__mediumconst shr (0+16))
  6318  0015FE  22F8               	addwfc	tblptru,f,c
  6319  001600                     	endif
  6320  001600  0009               	tblrd		*+
  6321  001602  CFF5 F0B8          	movff	tablat,___flmul@b
  6322  001606  0009               	tblrd		*+
  6323  001608  CFF5 F0B9          	movff	tablat,___flmul@b+1
  6324  00160C  0009               	tblrd		*+
  6325  00160E  CFF5 F0BA          	movff	tablat,___flmul@b+2
  6326  001612  000A               	tblrd		*-
  6327  001614  CFF5 F0BB          	movff	tablat,___flmul@b+3
  6328  001618  0E00               	movlw	0
  6329  00161A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6330  00161C  0E0A               	movlw	10
  6331  00161E  6F82               	movwf	___awmod@divisor& (0+255),b
  6332  001620  51D9               	movf	scale@scl& (0+255),w,b
  6333  001622  6F80               	movwf	___awmod@dividend& (0+255),b
  6334  001624  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6335  001626  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  6336  001628  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  6337  00162A  EC1E  F020         	call	___awmod	;wreg free
  6338  00162E  0100               	movlb	0	; () banked
  6339  001630  90D8               	bcf	status,0,c
  6340  001632  3780               	rlcf	?___awmod& (0+255),f,b
  6341  001634  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6342  001636  90D8               	bcf	status,0,c
  6343  001638  3780               	rlcf	?___awmod& (0+255),f,b
  6344  00163A  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6345  00163C  0EF9               	movlw	low __powers_
  6346  00163E  2580               	addwf	?___awmod& (0+255),w,b
  6347  001640  6EF6               	movwf	tblptrl,c
  6348  001642  0EFE               	movlw	high __powers_
  6349  001644  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  6350  001646  6EF7               	movwf	tblptrh,c
  6351  001648                     	if	1	;There are 3 active tblptr bytes
  6352  001648  6AF8               	clrf	tblptru,c
  6353  00164A  0E00               	movlw	low (__mediumconst shr (0+16))
  6354  00164C  22F8               	addwfc	tblptru,f,c
  6355  00164E                     	endif
  6356  00164E  0009               	tblrd		*+
  6357  001650  CFF5 F0BC          	movff	tablat,___flmul@a
  6358  001654  0009               	tblrd		*+
  6359  001656  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6360  00165A  0009               	tblrd		*+
  6361  00165C  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6362  001660  000A               	tblrd		*-
  6363  001662  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6364  001666  EC57  F00B         	call	___flmul	;wreg free
  6365  00166A  C0B8  F0D1         	movff	?___flmul,?_scale
  6366  00166E  C0B9  F0D2         	movff	?___flmul+1,?_scale+1
  6367  001672  C0BA  F0D3         	movff	?___flmul+2,?_scale+2
  6368  001676  C0BB  F0D4         	movff	?___flmul+3,?_scale+3
  6369  00167A  0012               	return	
  6370  00167C                     l397:
  6371                           
  6372                           ;doprnt.c: 440: return _powers_[scl];
  6373  00167C  0100               	movlb	0	; () banked
  6374  00167E  51D9               	movf	scale@scl& (0+255),w,b
  6375  001680  0D04               	mullw	4
  6376  001682  0EF9               	movlw	low __powers_
  6377  001684  24F3               	addwf	prodl,w,c
  6378  001686  6EF6               	movwf	tblptrl,c
  6379  001688  0EFE               	movlw	high __powers_
  6380  00168A  20F4               	addwfc	prodh,w,c
  6381  00168C  6EF7               	movwf	tblptrh,c
  6382  00168E                     	if	1	;There are 3 active tblptr bytes
  6383  00168E  6AF8               	clrf	tblptru,c
  6384  001690  0E00               	movlw	low (__mediumconst shr (0+16))
  6385  001692  22F8               	addwfc	tblptru,f,c
  6386  001694                     	endif
  6387  001694  0009               	tblrd		*+
  6388  001696  CFF5 F0D1          	movff	tablat,?_scale
  6389  00169A  0009               	tblrd		*+
  6390  00169C  CFF5 F0D2          	movff	tablat,?_scale+1
  6391  0016A0  0009               	tblrd		*+
  6392  0016A2  CFF5 F0D3          	movff	tablat,?_scale+2
  6393  0016A6  000A               	tblrd		*-
  6394  0016A8  CFF5 F0D4          	movff	tablat,?_scale+3
  6395  0016AC  0012               	return	
  6396  0016AE                     __end_of_scale:
  6397                           	opt stack 0
  6398                           tblptru	equ	0xFF8
  6399                           tblptrh	equ	0xFF7
  6400                           tblptrl	equ	0xFF6
  6401                           tablat	equ	0xFF5
  6402                           prodh	equ	0xFF4
  6403                           prodl	equ	0xFF3
  6404                           intcon	equ	0xFF2
  6405                           intcon2	equ	0xFF1
  6406                           intcon3	equ	0xFF0
  6407                           indf0	equ	0xFEF
  6408                           postinc0	equ	0xFEE
  6409                           fsr0h	equ	0xFEA
  6410                           fsr0l	equ	0xFE9
  6411                           wreg	equ	0xFE8
  6412                           postdec1	equ	0xFE5
  6413                           fsr1l	equ	0xFE1
  6414                           indf2	equ	0xFDF
  6415                           postinc2	equ	0xFDE
  6416                           postdec2	equ	0xFDD
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _isdigit *****************
  6422 ;; Defined at:
  6423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  c               1    wreg     unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  c               1    2[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;		None               void
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;Total ram usage:        3 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    3
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_sprintf
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text11
  6452  00450C                     __ptext11:
  6453                           	opt stack 0
  6454  00450C                     _isdigit:
  6455                           	opt stack 26
  6456                           
  6457                           ;incstack = 0
  6458                           ;isdigit@c stored from wreg
  6459  00450C  0100               	movlb	0	; () banked
  6460  00450E  6F82               	movwf	isdigit@c& (0+255),b
  6461  004510  0E00               	movlw	0
  6462  004512  0100               	movlb	0	; () banked
  6463  004514  6F81               	movwf	_isdigit$1518& (0+255),b
  6464                           
  6465                           ; BSR set to: 0
  6466  004516  0E3A               	movlw	58
  6467  004518  6182               	cpfslt	isdigit@c& (0+255),b
  6468  00451A  D005               	goto	l881
  6469                           
  6470                           ; BSR set to: 0
  6471  00451C  0E2F               	movlw	47
  6472  00451E  6582               	cpfsgt	isdigit@c& (0+255),b
  6473  004520  D002               	goto	l881
  6474                           
  6475                           ; BSR set to: 0
  6476  004522  0E01               	movlw	1
  6477  004524  6F81               	movwf	_isdigit$1518& (0+255),b
  6478  004526                     l881:
  6479                           
  6480                           ; BSR set to: 0
  6481                           
  6482                           ; BSR set to: 0
  6483  004526  C081  F080         	movff	_isdigit$1518,??_isdigit
  6484  00452A  3180               	rrcf	??_isdigit& (0+255),w,b
  6485  00452C  0012               	return	
  6486  00452E                     __end_of_isdigit:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           intcon2	equ	0xFF1
  6496                           intcon3	equ	0xFF0
  6497                           indf0	equ	0xFEF
  6498                           postinc0	equ	0xFEE
  6499                           fsr0h	equ	0xFEA
  6500                           fsr0l	equ	0xFE9
  6501                           wreg	equ	0xFE8
  6502                           postdec1	equ	0xFE5
  6503                           fsr1l	equ	0xFE1
  6504                           indf2	equ	0xFDF
  6505                           postinc2	equ	0xFDE
  6506                           postdec2	equ	0xFDD
  6507                           fsr2h	equ	0xFDA
  6508                           fsr2l	equ	0xFD9
  6509                           status	equ	0xFD8
  6510                           
  6511 ;; *************** function _fround *****************
  6512 ;; Defined at:
  6513 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  prec            1    wreg     unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  prec            1   93[BANK0 ] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  4   81[BANK0 ] unsigned char 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;Total ram usage:       13 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    4
  6534 ;; This function calls:
  6535 ;;		___awdiv
  6536 ;;		___awmod
  6537 ;;		___flmul
  6538 ;; This function is called by:
  6539 ;;		_sprintf
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text12
  6544  0026C4                     __ptext12:
  6545                           	opt stack 0
  6546  0026C4                     _fround:
  6547                           	opt stack 25
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;incstack = 0
  6551                           ;fround@prec stored from wreg
  6552  0026C4  0100               	movlb	0	; () banked
  6553  0026C6  6FDD               	movwf	fround@prec& (0+255),b
  6554                           
  6555                           ;doprnt.c: 413: if(prec>=110)
  6556  0026C8  0E6D               	movlw	109
  6557  0026CA  0100               	movlb	0	; () banked
  6558  0026CC  65DD               	cpfsgt	fround@prec& (0+255),b
  6559  0026CE  D0BA               	goto	l384
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6563  0026D0  0E00               	movlw	0
  6564  0026D2  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6565  0026D4  0E0A               	movlw	10
  6566  0026D6  6F88               	movwf	___awdiv@divisor& (0+255),b
  6567  0026D8  0E00               	movlw	0
  6568  0026DA  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6569  0026DC  0E64               	movlw	100
  6570  0026DE  6F82               	movwf	___awmod@divisor& (0+255),b
  6571  0026E0  C0DD  F080         	movff	fround@prec,___awmod@dividend
  6572  0026E4  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6573  0026E6  EC1E  F020         	call	___awmod	;wreg free
  6574  0026EA  C080  F086         	movff	?___awmod,___awdiv@dividend
  6575  0026EE  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  6576  0026F2  EC99  F01F         	call	___awdiv	;wreg free
  6577  0026F6  0100               	movlb	0	; () banked
  6578  0026F8  90D8               	bcf	status,0,c
  6579  0026FA  3786               	rlcf	?___awdiv& (0+255),f,b
  6580  0026FC  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6581  0026FE  90D8               	bcf	status,0,c
  6582  002700  3786               	rlcf	?___awdiv& (0+255),f,b
  6583  002702  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6584  002704  0E24               	movlw	36
  6585  002706  2786               	addwf	?___awdiv& (0+255),f,b
  6586  002708  0E00               	movlw	0
  6587  00270A  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6588  00270C  0E2D               	movlw	low __npowers_
  6589  00270E  2586               	addwf	?___awdiv& (0+255),w,b
  6590  002710  6EF6               	movwf	tblptrl,c
  6591  002712  0EFF               	movlw	high __npowers_
  6592  002714  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6593  002716  6EF7               	movwf	tblptrh,c
  6594  002718                     	if	1	;There are 3 active tblptr bytes
  6595  002718  6AF8               	clrf	tblptru,c
  6596  00271A  0E00               	movlw	low (__mediumconst shr (0+16))
  6597  00271C  22F8               	addwfc	tblptru,f,c
  6598  00271E                     	endif
  6599  00271E  0009               	tblrd		*+
  6600  002720  CFF5 F0BC          	movff	tablat,___flmul@a
  6601  002724  0009               	tblrd		*+
  6602  002726  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6603  00272A  0009               	tblrd		*+
  6604  00272C  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6605  002730  000A               	tblrd		*-
  6606  002732  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6607  002736  0E00               	movlw	0
  6608  002738  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6609  00273A  0E64               	movlw	100
  6610  00273C  6F88               	movwf	___awdiv@divisor& (0+255),b
  6611  00273E  C0DD  F086         	movff	fround@prec,___awdiv@dividend
  6612  002742  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6613  002744  EC99  F01F         	call	___awdiv	;wreg free
  6614  002748  0100               	movlb	0	; () banked
  6615  00274A  90D8               	bcf	status,0,c
  6616  00274C  3786               	rlcf	?___awdiv& (0+255),f,b
  6617  00274E  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6618  002750  90D8               	bcf	status,0,c
  6619  002752  3786               	rlcf	?___awdiv& (0+255),f,b
  6620  002754  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6621  002756  0E48               	movlw	72
  6622  002758  2786               	addwf	?___awdiv& (0+255),f,b
  6623  00275A  0E00               	movlw	0
  6624  00275C  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6625  00275E  0E2D               	movlw	low __npowers_
  6626  002760  2586               	addwf	?___awdiv& (0+255),w,b
  6627  002762  6EF6               	movwf	tblptrl,c
  6628  002764  0EFF               	movlw	high __npowers_
  6629  002766  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6630  002768  6EF7               	movwf	tblptrh,c
  6631  00276A                     	if	1	;There are 3 active tblptr bytes
  6632  00276A  6AF8               	clrf	tblptru,c
  6633  00276C  0E00               	movlw	low (__mediumconst shr (0+16))
  6634  00276E  22F8               	addwfc	tblptru,f,c
  6635  002770                     	endif
  6636  002770  0009               	tblrd		*+
  6637  002772  CFF5 F0B8          	movff	tablat,___flmul@b
  6638  002776  0009               	tblrd		*+
  6639  002778  CFF5 F0B9          	movff	tablat,___flmul@b+1
  6640  00277C  0009               	tblrd		*+
  6641  00277E  CFF5 F0BA          	movff	tablat,___flmul@b+2
  6642  002782  000A               	tblrd		*-
  6643  002784  CFF5 F0BB          	movff	tablat,___flmul@b+3
  6644  002788  EC57  F00B         	call	___flmul	;wreg free
  6645  00278C  C0B8  F0D9         	movff	?___flmul,_fround$1901
  6646  002790  C0B9  F0DA         	movff	?___flmul+1,_fround$1901+1
  6647  002794  C0BA  F0DB         	movff	?___flmul+2,_fround$1901+2
  6648  002798  C0BB  F0DC         	movff	?___flmul+3,_fround$1901+3
  6649                           
  6650                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6651  00279C  0E00               	movlw	0
  6652  00279E  0100               	movlb	0	; () banked
  6653  0027A0  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6654  0027A2  0E0A               	movlw	10
  6655  0027A4  6F82               	movwf	___awmod@divisor& (0+255),b
  6656  0027A6  C0DD  F080         	movff	fround@prec,___awmod@dividend
  6657  0027AA  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6658  0027AC  EC1E  F020         	call	___awmod	;wreg free
  6659  0027B0  0100               	movlb	0	; () banked
  6660  0027B2  90D8               	bcf	status,0,c
  6661  0027B4  3780               	rlcf	?___awmod& (0+255),f,b
  6662  0027B6  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6663  0027B8  90D8               	bcf	status,0,c
  6664  0027BA  3780               	rlcf	?___awmod& (0+255),f,b
  6665  0027BC  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6666  0027BE  0E2D               	movlw	low __npowers_
  6667  0027C0  2580               	addwf	?___awmod& (0+255),w,b
  6668  0027C2  6EF6               	movwf	tblptrl,c
  6669  0027C4  0EFF               	movlw	high __npowers_
  6670  0027C6  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  6671  0027C8  6EF7               	movwf	tblptrh,c
  6672  0027CA                     	if	1	;There are 3 active tblptr bytes
  6673  0027CA  6AF8               	clrf	tblptru,c
  6674  0027CC  0E00               	movlw	low (__mediumconst shr (0+16))
  6675  0027CE  22F8               	addwfc	tblptru,f,c
  6676  0027D0                     	endif
  6677  0027D0  0009               	tblrd		*+
  6678  0027D2  CFF5 F0BC          	movff	tablat,___flmul@a
  6679  0027D6  0009               	tblrd		*+
  6680  0027D8  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6681  0027DC  0009               	tblrd		*+
  6682  0027DE  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6683  0027E2  000A               	tblrd		*-
  6684  0027E4  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6685  0027E8  C0D9  F0B8         	movff	_fround$1901,___flmul@b
  6686  0027EC  C0DA  F0B9         	movff	_fround$1901+1,___flmul@b+1
  6687  0027F0  C0DB  F0BA         	movff	_fround$1901+2,___flmul@b+2
  6688  0027F4  C0DC  F0BB         	movff	_fround$1901+3,___flmul@b+3
  6689  0027F8  EC57  F00B         	call	___flmul	;wreg free
  6690  0027FC  C0B8  F0D5         	movff	?___flmul,_fround$1902
  6691  002800  C0B9  F0D6         	movff	?___flmul+1,_fround$1902+1
  6692  002804  C0BA  F0D7         	movff	?___flmul+2,_fround$1902+2
  6693  002808  C0BB  F0D8         	movff	?___flmul+3,_fround$1902+3
  6694                           
  6695                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6696  00280C  C0D5  F0B8         	movff	_fround$1902,___flmul@b
  6697  002810  C0D6  F0B9         	movff	_fround$1902+1,___flmul@b+1
  6698  002814  C0D7  F0BA         	movff	_fround$1902+2,___flmul@b+2
  6699  002818  C0D8  F0BB         	movff	_fround$1902+3,___flmul@b+3
  6700  00281C  0E00               	movlw	0
  6701  00281E  0100               	movlb	0	; () banked
  6702  002820  6FBC               	movwf	___flmul@a& (0+255),b
  6703  002822  0E00               	movlw	0
  6704  002824  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  6705  002826  0E00               	movlw	0
  6706  002828  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  6707  00282A  0E3F               	movlw	63
  6708  00282C  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  6709  00282E  EC57  F00B         	call	___flmul	;wreg free
  6710  002832  C0B8  F0D1         	movff	?___flmul,?_fround
  6711  002836  C0B9  F0D2         	movff	?___flmul+1,?_fround+1
  6712  00283A  C0BA  F0D3         	movff	?___flmul+2,?_fround+2
  6713  00283E  C0BB  F0D4         	movff	?___flmul+3,?_fround+3
  6714  002842  0012               	return	
  6715  002844                     l384:
  6716                           
  6717                           ;doprnt.c: 415: else if(prec > 10)
  6718  002844  0E0A               	movlw	10
  6719  002846  0100               	movlb	0	; () banked
  6720  002848  65DD               	cpfsgt	fround@prec& (0+255),b
  6721  00284A  D074               	goto	l387
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6725  00284C  0E00               	movlw	0
  6726  00284E  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  6727  002850  0E0A               	movlw	10
  6728  002852  6F82               	movwf	___awmod@divisor& (0+255),b
  6729  002854  C0DD  F080         	movff	fround@prec,___awmod@dividend
  6730  002858  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  6731  00285A  EC1E  F020         	call	___awmod	;wreg free
  6732  00285E  0100               	movlb	0	; () banked
  6733  002860  90D8               	bcf	status,0,c
  6734  002862  3780               	rlcf	?___awmod& (0+255),f,b
  6735  002864  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6736  002866  90D8               	bcf	status,0,c
  6737  002868  3780               	rlcf	?___awmod& (0+255),f,b
  6738  00286A  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  6739  00286C  0E2D               	movlw	low __npowers_
  6740  00286E  2580               	addwf	?___awmod& (0+255),w,b
  6741  002870  6EF6               	movwf	tblptrl,c
  6742  002872  0EFF               	movlw	high __npowers_
  6743  002874  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  6744  002876  6EF7               	movwf	tblptrh,c
  6745  002878                     	if	1	;There are 3 active tblptr bytes
  6746  002878  6AF8               	clrf	tblptru,c
  6747  00287A  0E00               	movlw	low (__mediumconst shr (0+16))
  6748  00287C  22F8               	addwfc	tblptru,f,c
  6749  00287E                     	endif
  6750  00287E  0009               	tblrd		*+
  6751  002880  CFF5 F0BC          	movff	tablat,___flmul@a
  6752  002884  0009               	tblrd		*+
  6753  002886  CFF5 F0BD          	movff	tablat,___flmul@a+1
  6754  00288A  0009               	tblrd		*+
  6755  00288C  CFF5 F0BE          	movff	tablat,___flmul@a+2
  6756  002890  000A               	tblrd		*-
  6757  002892  CFF5 F0BF          	movff	tablat,___flmul@a+3
  6758  002896  0E00               	movlw	0
  6759  002898  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  6760  00289A  0E0A               	movlw	10
  6761  00289C  6F88               	movwf	___awdiv@divisor& (0+255),b
  6762  00289E  C0DD  F086         	movff	fround@prec,___awdiv@dividend
  6763  0028A2  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  6764  0028A4  EC99  F01F         	call	___awdiv	;wreg free
  6765  0028A8  0100               	movlb	0	; () banked
  6766  0028AA  90D8               	bcf	status,0,c
  6767  0028AC  3786               	rlcf	?___awdiv& (0+255),f,b
  6768  0028AE  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6769  0028B0  90D8               	bcf	status,0,c
  6770  0028B2  3786               	rlcf	?___awdiv& (0+255),f,b
  6771  0028B4  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  6772  0028B6  0E24               	movlw	36
  6773  0028B8  2786               	addwf	?___awdiv& (0+255),f,b
  6774  0028BA  0E00               	movlw	0
  6775  0028BC  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  6776  0028BE  0E2D               	movlw	low __npowers_
  6777  0028C0  2586               	addwf	?___awdiv& (0+255),w,b
  6778  0028C2  6EF6               	movwf	tblptrl,c
  6779  0028C4  0EFF               	movlw	high __npowers_
  6780  0028C6  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  6781  0028C8  6EF7               	movwf	tblptrh,c
  6782  0028CA                     	if	1	;There are 3 active tblptr bytes
  6783  0028CA  6AF8               	clrf	tblptru,c
  6784  0028CC  0E00               	movlw	low (__mediumconst shr (0+16))
  6785  0028CE  22F8               	addwfc	tblptru,f,c
  6786  0028D0                     	endif
  6787  0028D0  0009               	tblrd		*+
  6788  0028D2  CFF5 F0B8          	movff	tablat,___flmul@b
  6789  0028D6  0009               	tblrd		*+
  6790  0028D8  CFF5 F0B9          	movff	tablat,___flmul@b+1
  6791  0028DC  0009               	tblrd		*+
  6792  0028DE  CFF5 F0BA          	movff	tablat,___flmul@b+2
  6793  0028E2  000A               	tblrd		*-
  6794  0028E4  CFF5 F0BB          	movff	tablat,___flmul@b+3
  6795  0028E8  EC57  F00B         	call	___flmul	;wreg free
  6796  0028EC  C0B8  F0D9         	movff	?___flmul,_fround$1901
  6797  0028F0  C0B9  F0DA         	movff	?___flmul+1,_fround$1901+1
  6798  0028F4  C0BA  F0DB         	movff	?___flmul+2,_fround$1901+2
  6799  0028F8  C0BB  F0DC         	movff	?___flmul+3,_fround$1901+3
  6800                           
  6801                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6802  0028FC  C0D9  F0B8         	movff	_fround$1901,___flmul@b
  6803  002900  C0DA  F0B9         	movff	_fround$1901+1,___flmul@b+1
  6804  002904  C0DB  F0BA         	movff	_fround$1901+2,___flmul@b+2
  6805  002908  C0DC  F0BB         	movff	_fround$1901+3,___flmul@b+3
  6806  00290C  0E00               	movlw	0
  6807  00290E  0100               	movlb	0	; () banked
  6808  002910  6FBC               	movwf	___flmul@a& (0+255),b
  6809  002912  0E00               	movlw	0
  6810  002914  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  6811  002916  0E00               	movlw	0
  6812  002918  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  6813  00291A  0E3F               	movlw	63
  6814  00291C  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  6815  00291E  EC57  F00B         	call	___flmul	;wreg free
  6816  002922  C0B8  F0D1         	movff	?___flmul,?_fround
  6817  002926  C0B9  F0D2         	movff	?___flmul+1,?_fround+1
  6818  00292A  C0BA  F0D3         	movff	?___flmul+2,?_fround+2
  6819  00292E  C0BB  F0D4         	movff	?___flmul+3,?_fround+3
  6820  002932  0012               	return	
  6821  002934                     l387:
  6822                           
  6823                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6824  002934  0100               	movlb	0	; () banked
  6825  002936  51DD               	movf	fround@prec& (0+255),w,b
  6826  002938  0D04               	mullw	4
  6827  00293A  0E2D               	movlw	low __npowers_
  6828  00293C  24F3               	addwf	prodl,w,c
  6829  00293E  6EF6               	movwf	tblptrl,c
  6830  002940  0EFF               	movlw	high __npowers_
  6831  002942  20F4               	addwfc	prodh,w,c
  6832  002944  6EF7               	movwf	tblptrh,c
  6833  002946                     	if	1	;There are 3 active tblptr bytes
  6834  002946  6AF8               	clrf	tblptru,c
  6835  002948  0E00               	movlw	low (__mediumconst shr (0+16))
  6836  00294A  22F8               	addwfc	tblptru,f,c
  6837  00294C                     	endif
  6838  00294C  0009               	tblrd		*+
  6839  00294E  CFF5 F0B8          	movff	tablat,___flmul@b
  6840  002952  0009               	tblrd		*+
  6841  002954  CFF5 F0B9          	movff	tablat,___flmul@b+1
  6842  002958  0009               	tblrd		*+
  6843  00295A  CFF5 F0BA          	movff	tablat,___flmul@b+2
  6844  00295E  000A               	tblrd		*-
  6845  002960  CFF5 F0BB          	movff	tablat,___flmul@b+3
  6846  002964  0E00               	movlw	0
  6847  002966  6FBC               	movwf	___flmul@a& (0+255),b
  6848  002968  0E00               	movlw	0
  6849  00296A  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  6850  00296C  0E00               	movlw	0
  6851  00296E  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  6852  002970  0E3F               	movlw	63
  6853  002972  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  6854  002974  EC57  F00B         	call	___flmul	;wreg free
  6855  002978  C0B8  F0D1         	movff	?___flmul,?_fround
  6856  00297C  C0B9  F0D2         	movff	?___flmul+1,?_fround+1
  6857  002980  C0BA  F0D3         	movff	?___flmul+2,?_fround+2
  6858  002984  C0BB  F0D4         	movff	?___flmul+3,?_fround+3
  6859  002988  0012               	return	
  6860  00298A                     __end_of_fround:
  6861                           	opt stack 0
  6862                           tblptru	equ	0xFF8
  6863                           tblptrh	equ	0xFF7
  6864                           tblptrl	equ	0xFF6
  6865                           tablat	equ	0xFF5
  6866                           prodh	equ	0xFF4
  6867                           prodl	equ	0xFF3
  6868                           intcon	equ	0xFF2
  6869                           intcon2	equ	0xFF1
  6870                           intcon3	equ	0xFF0
  6871                           indf0	equ	0xFEF
  6872                           postinc0	equ	0xFEE
  6873                           fsr0h	equ	0xFEA
  6874                           fsr0l	equ	0xFE9
  6875                           wreg	equ	0xFE8
  6876                           postdec1	equ	0xFE5
  6877                           fsr1l	equ	0xFE1
  6878                           indf2	equ	0xFDF
  6879                           postinc2	equ	0xFDE
  6880                           postdec2	equ	0xFDD
  6881                           fsr2h	equ	0xFDA
  6882                           fsr2l	equ	0xFD9
  6883                           status	equ	0xFD8
  6884                           
  6885 ;; *************** function ___awmod *****************
  6886 ;; Defined at:
  6887 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  dividend        2    0[BANK0 ] int 
  6890 ;;  divisor         2    2[BANK0 ] int 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  sign            1    5[BANK0 ] unsigned char 
  6893 ;;  counter         1    4[BANK0 ] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  2    0[BANK0 ] int 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;Total ram usage:        6 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    3
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_fround
  6914 ;;		_scale
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text13
  6919  00403C                     __ptext13:
  6920                           	opt stack 0
  6921  00403C                     ___awmod:
  6922                           	opt stack 25
  6923                           
  6924                           ;incstack = 0
  6925  00403C  0E00               	movlw	0
  6926  00403E  0100               	movlb	0	; () banked
  6927  004040  6F85               	movwf	___awmod@sign& (0+255),b
  6928                           
  6929                           ; BSR set to: 0
  6930  004042  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6931  004044  D006               	goto	l698
  6932                           
  6933                           ; BSR set to: 0
  6934  004046  6D80               	negf	___awmod@dividend& (0+255),b
  6935  004048  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  6936  00404A  B0D8               	btfsc	status,0,c
  6937  00404C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  6938                           
  6939                           ; BSR set to: 0
  6940  00404E  0E01               	movlw	1
  6941  004050  6F85               	movwf	___awmod@sign& (0+255),b
  6942  004052                     l698:
  6943                           
  6944                           ; BSR set to: 0
  6945                           
  6946                           ; BSR set to: 0
  6947  004052  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6948  004054  D004               	goto	l699
  6949                           
  6950                           ; BSR set to: 0
  6951  004056  6D82               	negf	___awmod@divisor& (0+255),b
  6952  004058  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  6953  00405A  B0D8               	btfsc	status,0,c
  6954  00405C  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  6955  00405E                     l699:
  6956                           
  6957                           ; BSR set to: 0
  6958                           
  6959                           ; BSR set to: 0
  6960  00405E  5182               	movf	___awmod@divisor& (0+255),w,b
  6961  004060  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6962  004062  B4D8               	btfsc	status,2,c
  6963  004064  D018               	goto	l706
  6964                           
  6965                           ; BSR set to: 0
  6966  004066  0E01               	movlw	1
  6967  004068  6F84               	movwf	___awmod@counter& (0+255),b
  6968  00406A  D004               	goto	l701
  6969  00406C                     
  6970                           ; BSR set to: 0
  6971                           
  6972                           ; BSR set to: 0
  6973  00406C  90D8               	bcf	status,0,c
  6974  00406E  3782               	rlcf	___awmod@divisor& (0+255),f,b
  6975  004070  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6976  004072  2B84               	incf	___awmod@counter& (0+255),f,b
  6977  004074                     l701:
  6978                           
  6979                           ; BSR set to: 0
  6980                           
  6981                           ; BSR set to: 0
  6982  004074  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6983  004076  D7FA               	goto	l702
  6984  004078                     u4620:
  6985                           
  6986                           ; BSR set to: 0
  6987                           
  6988                           ; BSR set to: 0
  6989                           
  6990                           ; BSR set to: 0
  6991  004078  5182               	movf	___awmod@divisor& (0+255),w,b
  6992  00407A  5D80               	subwf	___awmod@dividend& (0+255),w,b
  6993  00407C  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  6994  00407E  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6995  004080  A0D8               	btfss	status,0,c
  6996  004082  D004               	goto	l705
  6997                           
  6998                           ; BSR set to: 0
  6999  004084  5182               	movf	___awmod@divisor& (0+255),w,b
  7000  004086  5F80               	subwf	___awmod@dividend& (0+255),f,b
  7001  004088  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  7002  00408A  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7003  00408C                     l705:
  7004                           
  7005                           ; BSR set to: 0
  7006                           
  7007                           ; BSR set to: 0
  7008  00408C  90D8               	bcf	status,0,c
  7009  00408E  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7010  004090  3382               	rrcf	___awmod@divisor& (0+255),f,b
  7011                           
  7012                           ; BSR set to: 0
  7013  004092  2F84               	decfsz	___awmod@counter& (0+255),f,b
  7014  004094  D7F1               	goto	u4620
  7015  004096                     l706:
  7016                           
  7017                           ; BSR set to: 0
  7018                           
  7019                           ; BSR set to: 0
  7020                           
  7021                           ; BSR set to: 0
  7022  004096  5185               	movf	___awmod@sign& (0+255),w,b
  7023  004098  B4D8               	btfsc	status,2,c
  7024  00409A  D004               	goto	l707
  7025                           
  7026                           ; BSR set to: 0
  7027  00409C  6D80               	negf	___awmod@dividend& (0+255),b
  7028  00409E  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  7029  0040A0  B0D8               	btfsc	status,0,c
  7030  0040A2  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  7031  0040A4                     l707:
  7032                           
  7033                           ; BSR set to: 0
  7034                           
  7035                           ; BSR set to: 0
  7036  0040A4  C080  F080         	movff	___awmod@dividend,?___awmod
  7037  0040A8  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  7038  0040AC  0012               	return	
  7039  0040AE                     __end_of___awmod:
  7040                           	opt stack 0
  7041                           tblptru	equ	0xFF8
  7042                           tblptrh	equ	0xFF7
  7043                           tblptrl	equ	0xFF6
  7044                           tablat	equ	0xFF5
  7045                           prodh	equ	0xFF4
  7046                           prodl	equ	0xFF3
  7047                           intcon	equ	0xFF2
  7048                           intcon2	equ	0xFF1
  7049                           intcon3	equ	0xFF0
  7050                           indf0	equ	0xFEF
  7051                           postinc0	equ	0xFEE
  7052                           fsr0h	equ	0xFEA
  7053                           fsr0l	equ	0xFE9
  7054                           wreg	equ	0xFE8
  7055                           postdec1	equ	0xFE5
  7056                           fsr1l	equ	0xFE1
  7057                           indf2	equ	0xFDF
  7058                           postinc2	equ	0xFDE
  7059                           postdec2	equ	0xFDD
  7060                           fsr2h	equ	0xFDA
  7061                           fsr2l	equ	0xFD9
  7062                           status	equ	0xFD8
  7063                           
  7064 ;; *************** function ___awdiv *****************
  7065 ;; Defined at:
  7066 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  dividend        2    6[BANK0 ] int 
  7069 ;;  divisor         2    8[BANK0 ] int 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  quotient        2   12[BANK0 ] int 
  7072 ;;  sign            1   11[BANK0 ] unsigned char 
  7073 ;;  counter         1   10[BANK0 ] unsigned char 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  2    6[BANK0 ] int 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;Total ram usage:        8 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    3
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_fround
  7094 ;;		_scale
  7095 ;;		_sprintf
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text14
  7100  003F32                     __ptext14:
  7101                           	opt stack 0
  7102  003F32                     ___awdiv:
  7103                           	opt stack 25
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;incstack = 0
  7107  003F32  0E00               	movlw	0
  7108  003F34  0100               	movlb	0	; () banked
  7109  003F36  6F8B               	movwf	___awdiv@sign& (0+255),b
  7110                           
  7111                           ; BSR set to: 0
  7112  003F38  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7113  003F3A  D006               	goto	l685
  7114                           
  7115                           ; BSR set to: 0
  7116  003F3C  6D88               	negf	___awdiv@divisor& (0+255),b
  7117  003F3E  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7118  003F40  B0D8               	btfsc	status,0,c
  7119  003F42  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7120                           
  7121                           ; BSR set to: 0
  7122  003F44  0E01               	movlw	1
  7123  003F46  6F8B               	movwf	___awdiv@sign& (0+255),b
  7124  003F48                     l685:
  7125                           
  7126                           ; BSR set to: 0
  7127                           
  7128                           ; BSR set to: 0
  7129  003F48  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7130  003F4A  D006               	goto	l686
  7131                           
  7132                           ; BSR set to: 0
  7133  003F4C  6D86               	negf	___awdiv@dividend& (0+255),b
  7134  003F4E  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7135  003F50  B0D8               	btfsc	status,0,c
  7136  003F52  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7137                           
  7138                           ; BSR set to: 0
  7139  003F54  0E01               	movlw	1
  7140  003F56  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  7141  003F58                     l686:
  7142                           
  7143                           ; BSR set to: 0
  7144                           
  7145                           ; BSR set to: 0
  7146  003F58  0E00               	movlw	0
  7147  003F5A  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  7148  003F5C  0E00               	movlw	0
  7149  003F5E  6F8C               	movwf	___awdiv@quotient& (0+255),b
  7150                           
  7151                           ; BSR set to: 0
  7152  003F60  5188               	movf	___awdiv@divisor& (0+255),w,b
  7153  003F62  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7154  003F64  B4D8               	btfsc	status,2,c
  7155  003F66  D01C               	goto	l693
  7156                           
  7157                           ; BSR set to: 0
  7158  003F68  0E01               	movlw	1
  7159  003F6A  6F8A               	movwf	___awdiv@counter& (0+255),b
  7160  003F6C  D004               	goto	l688
  7161  003F6E                     
  7162                           ; BSR set to: 0
  7163                           
  7164                           ; BSR set to: 0
  7165  003F6E  90D8               	bcf	status,0,c
  7166  003F70  3788               	rlcf	___awdiv@divisor& (0+255),f,b
  7167  003F72  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7168  003F74  2B8A               	incf	___awdiv@counter& (0+255),f,b
  7169  003F76                     l688:
  7170                           
  7171                           ; BSR set to: 0
  7172                           
  7173                           ; BSR set to: 0
  7174  003F76  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7175  003F78  D7FA               	goto	l689
  7176  003F7A                     u4560:
  7177                           
  7178                           ; BSR set to: 0
  7179                           
  7180                           ; BSR set to: 0
  7181                           
  7182                           ; BSR set to: 0
  7183  003F7A  90D8               	bcf	status,0,c
  7184  003F7C  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  7185  003F7E  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7186                           
  7187                           ; BSR set to: 0
  7188  003F80  5188               	movf	___awdiv@divisor& (0+255),w,b
  7189  003F82  5D86               	subwf	___awdiv@dividend& (0+255),w,b
  7190  003F84  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7191  003F86  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7192  003F88  A0D8               	btfss	status,0,c
  7193  003F8A  D005               	goto	l692
  7194                           
  7195                           ; BSR set to: 0
  7196  003F8C  5188               	movf	___awdiv@divisor& (0+255),w,b
  7197  003F8E  5F86               	subwf	___awdiv@dividend& (0+255),f,b
  7198  003F90  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7199  003F92  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7200                           
  7201                           ; BSR set to: 0
  7202  003F94  818C               	bsf	___awdiv@quotient& (0+255),0,b
  7203  003F96                     l692:
  7204                           
  7205                           ; BSR set to: 0
  7206                           
  7207                           ; BSR set to: 0
  7208  003F96  90D8               	bcf	status,0,c
  7209  003F98  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7210  003F9A  3388               	rrcf	___awdiv@divisor& (0+255),f,b
  7211                           
  7212                           ; BSR set to: 0
  7213  003F9C  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  7214  003F9E  D7ED               	goto	u4560
  7215  003FA0                     l693:
  7216                           
  7217                           ; BSR set to: 0
  7218                           
  7219                           ; BSR set to: 0
  7220                           
  7221                           ; BSR set to: 0
  7222  003FA0  518B               	movf	___awdiv@sign& (0+255),w,b
  7223  003FA2  B4D8               	btfsc	status,2,c
  7224  003FA4  D004               	goto	l694
  7225                           
  7226                           ; BSR set to: 0
  7227  003FA6  6D8C               	negf	___awdiv@quotient& (0+255),b
  7228  003FA8  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7229  003FAA  B0D8               	btfsc	status,0,c
  7230  003FAC  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7231  003FAE                     l694:
  7232                           
  7233                           ; BSR set to: 0
  7234                           
  7235                           ; BSR set to: 0
  7236  003FAE  C08C  F086         	movff	___awdiv@quotient,?___awdiv
  7237  003FB2  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
  7238  003FB6  0012               	return	
  7239  003FB8                     __end_of___awdiv:
  7240                           	opt stack 0
  7241                           tblptru	equ	0xFF8
  7242                           tblptrh	equ	0xFF7
  7243                           tblptrl	equ	0xFF6
  7244                           tablat	equ	0xFF5
  7245                           prodh	equ	0xFF4
  7246                           prodl	equ	0xFF3
  7247                           intcon	equ	0xFF2
  7248                           intcon2	equ	0xFF1
  7249                           intcon3	equ	0xFF0
  7250                           indf0	equ	0xFEF
  7251                           postinc0	equ	0xFEE
  7252                           fsr0h	equ	0xFEA
  7253                           fsr0l	equ	0xFE9
  7254                           wreg	equ	0xFE8
  7255                           postdec1	equ	0xFE5
  7256                           fsr1l	equ	0xFE1
  7257                           indf2	equ	0xFDF
  7258                           postinc2	equ	0xFDE
  7259                           postdec2	equ	0xFDD
  7260                           fsr2h	equ	0xFDA
  7261                           fsr2l	equ	0xFD9
  7262                           status	equ	0xFD8
  7263                           
  7264 ;; *************** function __tdiv_to_l_ *****************
  7265 ;; Defined at:
  7266 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  f1              4    0[BANK0 ] float 
  7269 ;;  f2              4    4[BANK0 ] float 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  quot            4   11[BANK0 ] unsigned long 
  7272 ;;  exp1            1   16[BANK0 ] unsigned char 
  7273 ;;  cntr            1   15[BANK0 ] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  4    0[BANK0 ] unsigned long 
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7283 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;Total ram usage:       17 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    3
  7290 ;; This function calls:
  7291 ;;		Nothing
  7292 ;; This function is called by:
  7293 ;;		_sprintf
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           	psect	text15
  7298  0035BE                     __ptext15:
  7299                           	opt stack 0
  7300  0035BE                     __tdiv_to_l_:
  7301                           	opt stack 26
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;incstack = 0
  7305  0035BE  C082  F088         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7306  0035C2  0100               	movlb	0	; () banked
  7307  0035C4  6B89               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7308  0035C6  6B8A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7309  0035C8  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7310  0035CA  3788               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7311  0035CC  E301               	bnc	u4741
  7312  0035CE  8189               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7313  0035D0                     u4741:
  7314  0035D0  5188               	movf	??__tdiv_to_l_& (0+255),w,b
  7315  0035D2  6F90               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7316  0035D4  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7317  0035D6  A4D8               	btfss	status,2,c
  7318  0035D8  D009               	goto	l821
  7319                           
  7320                           ; BSR set to: 0
  7321  0035DA  0E00               	movlw	0
  7322  0035DC  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  7323  0035DE  0E00               	movlw	0
  7324  0035E0  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7325  0035E2  0E00               	movlw	0
  7326  0035E4  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7327  0035E6  0E00               	movlw	0
  7328  0035E8  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7329                           
  7330                           ; BSR set to: 0
  7331  0035EA  0012               	return	
  7332  0035EC                     l821:
  7333                           
  7334                           ; BSR set to: 0
  7335                           
  7336                           ; BSR set to: 0
  7337  0035EC  C086  F088         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7338  0035F0  6B89               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7339  0035F2  6B8A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7340  0035F4  3585               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7341  0035F6  3788               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7342  0035F8  E301               	bnc	u4761
  7343  0035FA  8189               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7344  0035FC                     u4761:
  7345  0035FC  5188               	movf	??__tdiv_to_l_& (0+255),w,b
  7346  0035FE  6F8F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7347  003600  518F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7348  003602  A4D8               	btfss	status,2,c
  7349  003604  D009               	goto	l823
  7350                           
  7351                           ; BSR set to: 0
  7352  003606  0E00               	movlw	0
  7353  003608  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  7354  00360A  0E00               	movlw	0
  7355  00360C  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7356  00360E  0E00               	movlw	0
  7357  003610  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7358  003612  0E00               	movlw	0
  7359  003614  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7360                           
  7361                           ; BSR set to: 0
  7362  003616  0012               	return	
  7363  003618                     l823:
  7364                           
  7365                           ; BSR set to: 0
  7366                           
  7367                           ; BSR set to: 0
  7368  003618  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7369                           
  7370                           ; BSR set to: 0
  7371  00361A  0EFF               	movlw	255
  7372  00361C  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7373  00361E  0EFF               	movlw	255
  7374  003620  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7375  003622  0E00               	movlw	0
  7376  003624  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7377  003626  8F85               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7378                           
  7379                           ; BSR set to: 0
  7380  003628  0EFF               	movlw	255
  7381  00362A  1784               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7382  00362C  0EFF               	movlw	255
  7383  00362E  1785               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7384  003630  0E00               	movlw	0
  7385  003632  1786               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7386                           
  7387                           ; BSR set to: 0
  7388  003634  0E00               	movlw	0
  7389  003636  6F8B               	movwf	__tdiv_to_l_@quot& (0+255),b
  7390  003638  0E00               	movlw	0
  7391  00363A  6F8C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7392  00363C  0E00               	movlw	0
  7393  00363E  6F8D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7394  003640  0E00               	movlw	0
  7395  003642  6F8E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398  003644  0E7F               	movlw	127
  7399  003646  5F90               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7400                           
  7401                           ; BSR set to: 0
  7402  003648  518F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7403  00364A  0F98               	addlw	152
  7404  00364C  5F90               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7405                           
  7406                           ; BSR set to: 0
  7407  00364E  0E18               	movlw	24
  7408  003650  6F8F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7409  003652                     l824:
  7410                           
  7411                           ; BSR set to: 0
  7412  003652  90D8               	bcf	status,0,c
  7413  003654  378B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7414  003656  378C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7415  003658  378D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7416  00365A  378E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7417                           
  7418                           ; BSR set to: 0
  7419  00365C  5184               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7420  00365E  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7421  003660  5185               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7422  003662  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7423  003664  5186               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7424  003666  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7425  003668  A0D8               	btfss	status,0,c
  7426  00366A  D007               	goto	l825
  7427                           
  7428                           ; BSR set to: 0
  7429  00366C  5184               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7430  00366E  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7431  003670  5185               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7432  003672  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7433  003674  5186               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7434  003676  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7435                           
  7436                           ; BSR set to: 0
  7437  003678  818B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7438  00367A                     l825:
  7439                           
  7440                           ; BSR set to: 0
  7441  00367A  90D8               	bcf	status,0,c
  7442  00367C  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7443  00367E  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7444  003680  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7445                           
  7446                           ; BSR set to: 0
  7447  003682  2F8F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7448  003684  D7E6               	goto	l824
  7449                           
  7450                           ; BSR set to: 0
  7451                           
  7452                           ; BSR set to: 0
  7453  003686  AF90               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7454  003688  D016               	goto	l827
  7455                           
  7456                           ; BSR set to: 0
  7457  00368A  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7458  00368C  0A80               	xorlw	128
  7459  00368E  0F97               	addlw	151
  7460  003690  B0D8               	btfsc	status,0,c
  7461  003692  D009               	goto	l828
  7462                           
  7463                           ; BSR set to: 0
  7464  003694  0E00               	movlw	0
  7465  003696  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  7466  003698  0E00               	movlw	0
  7467  00369A  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7468  00369C  0E00               	movlw	0
  7469  00369E  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7470  0036A0  0E00               	movlw	0
  7471  0036A2  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7472                           
  7473                           ; BSR set to: 0
  7474  0036A4  0012               	return	
  7475  0036A6                     l828:
  7476                           
  7477                           ; BSR set to: 0
  7478                           
  7479                           ; BSR set to: 0
  7480                           
  7481                           ; BSR set to: 0
  7482  0036A6  90D8               	bcf	status,0,c
  7483  0036A8  338E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7484  0036AA  338D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7485  0036AC  338C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7486  0036AE  338B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7487                           
  7488                           ; BSR set to: 0
  7489  0036B0  3F90               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7490  0036B2  D7F9               	goto	l828
  7491                           
  7492                           ; BSR set to: 0
  7493  0036B4  D015               	goto	u4820
  7494  0036B6                     l827:
  7495                           
  7496                           ; BSR set to: 0
  7497                           
  7498                           ; BSR set to: 0
  7499  0036B6  0E17               	movlw	23
  7500  0036B8  6590               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7501  0036BA  D00F               	goto	l833
  7502                           
  7503                           ; BSR set to: 0
  7504  0036BC  0E00               	movlw	0
  7505  0036BE  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  7506  0036C0  0E00               	movlw	0
  7507  0036C2  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7508  0036C4  0E00               	movlw	0
  7509  0036C6  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7510  0036C8  0E00               	movlw	0
  7511  0036CA  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514  0036CC  0012               	return	
  7515  0036CE                     
  7516                           ; BSR set to: 0
  7517                           
  7518                           ; BSR set to: 0
  7519  0036CE  90D8               	bcf	status,0,c
  7520  0036D0  378B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7521  0036D2  378C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7522  0036D4  378D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7523  0036D6  378E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7524  0036D8  0790               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7525  0036DA                     l833:
  7526                           
  7527                           ; BSR set to: 0
  7528                           
  7529                           ; BSR set to: 0
  7530  0036DA  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7531  0036DC  A4D8               	btfss	status,2,c
  7532  0036DE  D7F7               	goto	l834
  7533  0036E0                     u4820:
  7534                           
  7535                           ; BSR set to: 0
  7536                           
  7537                           ; BSR set to: 0
  7538  0036E0  C08B  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7539  0036E4  C08C  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7540  0036E8  C08D  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7541  0036EC  C08E  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7542                           
  7543                           ; BSR set to: 0
  7544  0036F0  0012               	return		;funcret
  7545  0036F2                     __end_of__tdiv_to_l_:
  7546                           	opt stack 0
  7547                           tblptru	equ	0xFF8
  7548                           tblptrh	equ	0xFF7
  7549                           tblptrl	equ	0xFF6
  7550                           tablat	equ	0xFF5
  7551                           prodh	equ	0xFF4
  7552                           prodl	equ	0xFF3
  7553                           intcon	equ	0xFF2
  7554                           intcon2	equ	0xFF1
  7555                           intcon3	equ	0xFF0
  7556                           indf0	equ	0xFEF
  7557                           postinc0	equ	0xFEE
  7558                           fsr0h	equ	0xFEA
  7559                           fsr0l	equ	0xFE9
  7560                           wreg	equ	0xFE8
  7561                           postdec1	equ	0xFE5
  7562                           fsr1l	equ	0xFE1
  7563                           indf2	equ	0xFDF
  7564                           postinc2	equ	0xFDE
  7565                           postdec2	equ	0xFDD
  7566                           fsr2h	equ	0xFDA
  7567                           fsr2l	equ	0xFD9
  7568                           status	equ	0xFD8
  7569                           
  7570 ;; *************** function __div_to_l_ *****************
  7571 ;; Defined at:
  7572 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  f1              4    0[BANK0 ] unsigned long 
  7575 ;;  f2              4    4[BANK0 ] unsigned long 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  quot            4    8[BANK0 ] unsigned long 
  7578 ;;  exp1            1   13[BANK0 ] unsigned char 
  7579 ;;  cntr            1   12[BANK0 ] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  4    0[BANK0 ] unsigned long 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2, status,0
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7589 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;Total ram usage:       14 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    3
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_sprintf
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text16
  7604  0036F2                     __ptext16:
  7605                           	opt stack 0
  7606  0036F2                     __div_to_l_:
  7607                           	opt stack 26
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;incstack = 0
  7611  0036F2  0100               	movlb	0	; () banked
  7612  0036F4  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7613  0036F6  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7614  0036F8  6F8D               	movwf	__div_to_l_@exp1& (0+255),b
  7615  0036FA  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  7616  0036FC  A4D8               	btfss	status,2,c
  7617  0036FE  D009               	goto	l717
  7618                           
  7619                           ; BSR set to: 0
  7620  003700  0E00               	movlw	0
  7621  003702  6F80               	movwf	?__div_to_l_& (0+255),b
  7622  003704  0E00               	movlw	0
  7623  003706  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  7624  003708  0E00               	movlw	0
  7625  00370A  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  7626  00370C  0E00               	movlw	0
  7627  00370E  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  7628                           
  7629                           ; BSR set to: 0
  7630  003710  0012               	return	
  7631  003712                     l717:
  7632                           
  7633                           ; BSR set to: 0
  7634                           
  7635                           ; BSR set to: 0
  7636  003712  3586               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7637  003714  3587               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7638  003716  6F8C               	movwf	__div_to_l_@cntr& (0+255),b
  7639  003718  518C               	movf	__div_to_l_@cntr& (0+255),w,b
  7640  00371A  A4D8               	btfss	status,2,c
  7641  00371C  D009               	goto	l719
  7642                           
  7643                           ; BSR set to: 0
  7644  00371E  0E00               	movlw	0
  7645  003720  6F80               	movwf	?__div_to_l_& (0+255),b
  7646  003722  0E00               	movlw	0
  7647  003724  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  7648  003726  0E00               	movlw	0
  7649  003728  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  7650  00372A  0E00               	movlw	0
  7651  00372C  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  7652                           
  7653                           ; BSR set to: 0
  7654  00372E  0012               	return	
  7655  003730                     l719:
  7656                           
  7657                           ; BSR set to: 0
  7658                           
  7659                           ; BSR set to: 0
  7660  003730  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7661                           
  7662                           ; BSR set to: 0
  7663  003732  0EFF               	movlw	255
  7664  003734  1780               	andwf	__div_to_l_@f1& (0+255),f,b
  7665  003736  0EFF               	movlw	255
  7666  003738  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7667  00373A  0EFF               	movlw	255
  7668  00373C  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7669  00373E  0E00               	movlw	0
  7670  003740  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7671                           
  7672                           ; BSR set to: 0
  7673  003742  8F86               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7674  003744  0EFF               	movlw	255
  7675  003746  1784               	andwf	__div_to_l_@f2& (0+255),f,b
  7676  003748  0EFF               	movlw	255
  7677  00374A  1785               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7678  00374C  0EFF               	movlw	255
  7679  00374E  1786               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7680  003750  0E00               	movlw	0
  7681  003752  1787               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7682                           
  7683                           ; BSR set to: 0
  7684  003754  0E00               	movlw	0
  7685  003756  6F88               	movwf	__div_to_l_@quot& (0+255),b
  7686  003758  0E00               	movlw	0
  7687  00375A  6F89               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7688  00375C  0E00               	movlw	0
  7689  00375E  6F8A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7690  003760  0E00               	movlw	0
  7691  003762  6F8B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7692                           
  7693                           ; BSR set to: 0
  7694  003764  0E7F               	movlw	127
  7695  003766  5F8D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7696                           
  7697                           ; BSR set to: 0
  7698  003768  518C               	movf	__div_to_l_@cntr& (0+255),w,b
  7699  00376A  0FA0               	addlw	160
  7700  00376C  5F8D               	subwf	__div_to_l_@exp1& (0+255),f,b
  7701                           
  7702                           ; BSR set to: 0
  7703  00376E  0E20               	movlw	32
  7704  003770  6F8C               	movwf	__div_to_l_@cntr& (0+255),b
  7705  003772                     
  7706                           ; BSR set to: 0
  7707                           
  7708                           ; BSR set to: 0
  7709  003772  90D8               	bcf	status,0,c
  7710  003774  3788               	rlcf	__div_to_l_@quot& (0+255),f,b
  7711  003776  3789               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7712  003778  378A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7713  00377A  378B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7714                           
  7715                           ; BSR set to: 0
  7716  00377C  5184               	movf	__div_to_l_@f2& (0+255),w,b
  7717  00377E  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
  7718  003780  5185               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7719  003782  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7720  003784  5186               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7721  003786  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7722  003788  5187               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7723  00378A  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7724  00378C  A0D8               	btfss	status,0,c
  7725  00378E  D009               	goto	l721
  7726                           
  7727                           ; BSR set to: 0
  7728  003790  5184               	movf	__div_to_l_@f2& (0+255),w,b
  7729  003792  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
  7730  003794  5185               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7731  003796  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7732  003798  5186               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7733  00379A  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7734  00379C  5187               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7735  00379E  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7736                           
  7737                           ; BSR set to: 0
  7738  0037A0  8188               	bsf	__div_to_l_@quot& (0+255),0,b
  7739  0037A2                     l721:
  7740                           
  7741                           ; BSR set to: 0
  7742                           
  7743                           ; BSR set to: 0
  7744  0037A2  90D8               	bcf	status,0,c
  7745  0037A4  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
  7746  0037A6  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7747  0037A8  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7748  0037AA  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7749                           
  7750                           ; BSR set to: 0
  7751  0037AC  2F8C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7752  0037AE  D7E1               	goto	l720
  7753                           
  7754                           ; BSR set to: 0
  7755                           
  7756                           ; BSR set to: 0
  7757  0037B0  AF8D               	btfss	__div_to_l_@exp1& (0+255),7,b
  7758  0037B2  D016               	goto	l723
  7759                           
  7760                           ; BSR set to: 0
  7761  0037B4  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  7762  0037B6  0A80               	xorlw	128
  7763  0037B8  0F9F               	addlw	159
  7764  0037BA  B0D8               	btfsc	status,0,c
  7765  0037BC  D009               	goto	l724
  7766                           
  7767                           ; BSR set to: 0
  7768  0037BE  0E00               	movlw	0
  7769  0037C0  6F80               	movwf	?__div_to_l_& (0+255),b
  7770  0037C2  0E00               	movlw	0
  7771  0037C4  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  7772  0037C6  0E00               	movlw	0
  7773  0037C8  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  7774  0037CA  0E00               	movlw	0
  7775  0037CC  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  7776                           
  7777                           ; BSR set to: 0
  7778  0037CE  0012               	return	
  7779  0037D0                     l724:
  7780                           
  7781                           ; BSR set to: 0
  7782                           
  7783                           ; BSR set to: 0
  7784                           
  7785                           ; BSR set to: 0
  7786  0037D0  90D8               	bcf	status,0,c
  7787  0037D2  338B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7788  0037D4  338A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7789  0037D6  3389               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7790  0037D8  3388               	rrcf	__div_to_l_@quot& (0+255),f,b
  7791                           
  7792                           ; BSR set to: 0
  7793  0037DA  3F8D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7794  0037DC  D7F9               	goto	l724
  7795                           
  7796                           ; BSR set to: 0
  7797  0037DE  D015               	goto	u4890
  7798  0037E0                     l723:
  7799                           
  7800                           ; BSR set to: 0
  7801                           
  7802                           ; BSR set to: 0
  7803  0037E0  0E1F               	movlw	31
  7804  0037E2  658D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7805  0037E4  D00F               	goto	l729
  7806                           
  7807                           ; BSR set to: 0
  7808  0037E6  0E00               	movlw	0
  7809  0037E8  6F80               	movwf	?__div_to_l_& (0+255),b
  7810  0037EA  0E00               	movlw	0
  7811  0037EC  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  7812  0037EE  0E00               	movlw	0
  7813  0037F0  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  7814  0037F2  0E00               	movlw	0
  7815  0037F4  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  7816                           
  7817                           ; BSR set to: 0
  7818  0037F6  0012               	return	
  7819  0037F8                     
  7820                           ; BSR set to: 0
  7821                           
  7822                           ; BSR set to: 0
  7823  0037F8  90D8               	bcf	status,0,c
  7824  0037FA  3788               	rlcf	__div_to_l_@quot& (0+255),f,b
  7825  0037FC  3789               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7826  0037FE  378A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7827  003800  378B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7828  003802  078D               	decf	__div_to_l_@exp1& (0+255),f,b
  7829  003804                     l729:
  7830                           
  7831                           ; BSR set to: 0
  7832                           
  7833                           ; BSR set to: 0
  7834  003804  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  7835  003806  A4D8               	btfss	status,2,c
  7836  003808  D7F7               	goto	l730
  7837  00380A                     u4890:
  7838                           
  7839                           ; BSR set to: 0
  7840                           
  7841                           ; BSR set to: 0
  7842  00380A  C088  F080         	movff	__div_to_l_@quot,?__div_to_l_
  7843  00380E  C089  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7844  003812  C08A  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7845  003816  C08B  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7846                           
  7847                           ; BSR set to: 0
  7848  00381A  0012               	return		;funcret
  7849  00381C                     __end_of__div_to_l_:
  7850                           	opt stack 0
  7851                           tblptru	equ	0xFF8
  7852                           tblptrh	equ	0xFF7
  7853                           tblptrl	equ	0xFF6
  7854                           tablat	equ	0xFF5
  7855                           prodh	equ	0xFF4
  7856                           prodl	equ	0xFF3
  7857                           intcon	equ	0xFF2
  7858                           intcon2	equ	0xFF1
  7859                           intcon3	equ	0xFF0
  7860                           indf0	equ	0xFEF
  7861                           postinc0	equ	0xFEE
  7862                           fsr0h	equ	0xFEA
  7863                           fsr0l	equ	0xFE9
  7864                           wreg	equ	0xFE8
  7865                           postdec1	equ	0xFE5
  7866                           fsr1l	equ	0xFE1
  7867                           indf2	equ	0xFDF
  7868                           postinc2	equ	0xFDE
  7869                           postdec2	equ	0xFDD
  7870                           fsr2h	equ	0xFDA
  7871                           fsr2l	equ	0xFD9
  7872                           status	equ	0xFD8
  7873                           
  7874 ;; *************** function ___xxtofl *****************
  7875 ;; Defined at:
  7876 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  sign            1    wreg     unsigned char 
  7879 ;;  val             4    6[BANK0 ] long 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  sign            1   14[BANK0 ] unsigned char 
  7882 ;;  arg             4   16[BANK0 ] unsigned long 
  7883 ;;  exp             1   15[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  4    6[BANK0 ] unsigned char 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;Total ram usage:       14 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    3
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_read_adc_voltage
  7904 ;;		_autoCool
  7905 ;;		_autoHeat
  7906 ;;		_sprintf
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text17
  7911  00331A                     __ptext17:
  7912                           	opt stack 0
  7913  00331A                     ___xxtofl:
  7914                           	opt stack 26
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;incstack = 0
  7918                           ;___xxtofl@sign stored from wreg
  7919  00331A  0100               	movlb	0	; () banked
  7920  00331C  6F8E               	movwf	___xxtofl@sign& (0+255),b
  7921  00331E  0100               	movlb	0	; () banked
  7922  003320  518E               	movf	___xxtofl@sign& (0+255),w,b
  7923  003322  A4D8               	btfss	status,2,c
  7924                           
  7925                           ; BSR set to: 0
  7926  003324  AF89               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7927  003326  D01A               	goto	l1108
  7928                           
  7929                           ; BSR set to: 0
  7930  003328  C086  F08A         	movff	___xxtofl@val,??___xxtofl
  7931  00332C  C087  F08B         	movff	___xxtofl@val+1,??___xxtofl+1
  7932  003330  C088  F08C         	movff	___xxtofl@val+2,??___xxtofl+2
  7933  003334  C089  F08D         	movff	___xxtofl@val+3,??___xxtofl+3
  7934  003338  1F8A               	comf	??___xxtofl& (0+255),f,b
  7935  00333A  1F8B               	comf	(??___xxtofl+1)& (0+255),f,b
  7936  00333C  1F8C               	comf	(??___xxtofl+2)& (0+255),f,b
  7937  00333E  1F8D               	comf	(??___xxtofl+3)& (0+255),f,b
  7938  003340  2B8A               	incf	??___xxtofl& (0+255),f,b
  7939  003342  0E00               	movlw	0
  7940  003344  238B               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7941  003346  238C               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7942  003348  238D               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7943  00334A  C08A  F090         	movff	??___xxtofl,___xxtofl@arg
  7944  00334E  C08B  F091         	movff	??___xxtofl+1,___xxtofl@arg+1
  7945  003352  C08C  F092         	movff	??___xxtofl+2,___xxtofl@arg+2
  7946  003356  C08D  F093         	movff	??___xxtofl+3,___xxtofl@arg+3
  7947  00335A  D008               	goto	l1109
  7948  00335C                     l1108:
  7949                           
  7950                           ; BSR set to: 0
  7951  00335C  C086  F090         	movff	___xxtofl@val,___xxtofl@arg
  7952  003360  C087  F091         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7953  003364  C088  F092         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7954  003368  C089  F093         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7955  00336C                     l1109:
  7956                           
  7957                           ; BSR set to: 0
  7958                           
  7959                           ; BSR set to: 0
  7960  00336C  5186               	movf	___xxtofl@val& (0+255),w,b
  7961  00336E  1187               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7962  003370  1188               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7963  003372  1189               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7964  003374  A4D8               	btfss	status,2,c
  7965  003376  D009               	goto	l1110
  7966                           
  7967                           ; BSR set to: 0
  7968  003378  0E00               	movlw	0
  7969  00337A  6F86               	movwf	?___xxtofl& (0+255),b
  7970  00337C  0E00               	movlw	0
  7971  00337E  6F87               	movwf	(?___xxtofl+1)& (0+255),b
  7972  003380  0E00               	movlw	0
  7973  003382  6F88               	movwf	(?___xxtofl+2)& (0+255),b
  7974  003384  0E00               	movlw	0
  7975  003386  6F89               	movwf	(?___xxtofl+3)& (0+255),b
  7976                           
  7977                           ; BSR set to: 0
  7978  003388  0012               	return	
  7979  00338A                     l1110:
  7980                           
  7981                           ; BSR set to: 0
  7982                           
  7983                           ; BSR set to: 0
  7984  00338A  0E96               	movlw	150
  7985  00338C  6F8F               	movwf	___xxtofl@exp& (0+255),b
  7986  00338E  D006               	goto	l1112
  7987  003390                     
  7988                           ; BSR set to: 0
  7989                           
  7990                           ; BSR set to: 0
  7991  003390  2B8F               	incf	___xxtofl@exp& (0+255),f,b
  7992  003392  90D8               	bcf	status,0,c
  7993  003394  3393               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7994  003396  3392               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7995  003398  3391               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7996  00339A  3390               	rrcf	___xxtofl@arg& (0+255),f,b
  7997  00339C                     l1112:
  7998                           
  7999                           ; BSR set to: 0
  8000                           
  8001                           ; BSR set to: 0
  8002  00339C  0E00               	movlw	0
  8003  00339E  1590               	andwf	___xxtofl@arg& (0+255),w,b
  8004  0033A0  6F8A               	movwf	??___xxtofl& (0+255),b
  8005  0033A2  0E00               	movlw	0
  8006  0033A4  1591               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8007  0033A6  6F8B               	movwf	(??___xxtofl+1)& (0+255),b
  8008  0033A8  0E00               	movlw	0
  8009  0033AA  1592               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8010  0033AC  6F8C               	movwf	(??___xxtofl+2)& (0+255),b
  8011  0033AE  0EFE               	movlw	254
  8012  0033B0  1593               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8013  0033B2  6F8D               	movwf	(??___xxtofl+3)& (0+255),b
  8014  0033B4  518A               	movf	??___xxtofl& (0+255),w,b
  8015  0033B6  118B               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8016  0033B8  118C               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8017  0033BA  118D               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8018  0033BC  B4D8               	btfsc	status,2,c
  8019  0033BE  D00D               	goto	l1115
  8020  0033C0  D7E7               	goto	l1113
  8021  0033C2                     
  8022                           ; BSR set to: 0
  8023                           
  8024                           ; BSR set to: 0
  8025  0033C2  2B8F               	incf	___xxtofl@exp& (0+255),f,b
  8026                           
  8027                           ; BSR set to: 0
  8028  0033C4  0E01               	movlw	1
  8029  0033C6  2790               	addwf	___xxtofl@arg& (0+255),f,b
  8030  0033C8  0E00               	movlw	0
  8031  0033CA  2391               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8032  0033CC  2392               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8033  0033CE  2393               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8034                           
  8035                           ; BSR set to: 0
  8036  0033D0  90D8               	bcf	status,0,c
  8037  0033D2  3393               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8038  0033D4  3392               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8039  0033D6  3391               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8040  0033D8  3390               	rrcf	___xxtofl@arg& (0+255),f,b
  8041  0033DA                     l1115:
  8042                           
  8043                           ; BSR set to: 0
  8044  0033DA  0E00               	movlw	0
  8045  0033DC  1590               	andwf	___xxtofl@arg& (0+255),w,b
  8046  0033DE  6F8A               	movwf	??___xxtofl& (0+255),b
  8047  0033E0  0E00               	movlw	0
  8048  0033E2  1591               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8049  0033E4  6F8B               	movwf	(??___xxtofl+1)& (0+255),b
  8050  0033E6  0E00               	movlw	0
  8051  0033E8  1592               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8052  0033EA  6F8C               	movwf	(??___xxtofl+2)& (0+255),b
  8053  0033EC  0EFF               	movlw	255
  8054  0033EE  1593               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8055  0033F0  6F8D               	movwf	(??___xxtofl+3)& (0+255),b
  8056  0033F2  518A               	movf	??___xxtofl& (0+255),w,b
  8057  0033F4  118B               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8058  0033F6  118C               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8059  0033F8  118D               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8060  0033FA  B4D8               	btfsc	status,2,c
  8061  0033FC  D007               	goto	l1118
  8062  0033FE  D7E1               	goto	l1116
  8063  003400                     
  8064                           ; BSR set to: 0
  8065                           
  8066                           ; BSR set to: 0
  8067  003400  078F               	decf	___xxtofl@exp& (0+255),f,b
  8068  003402  90D8               	bcf	status,0,c
  8069  003404  3790               	rlcf	___xxtofl@arg& (0+255),f,b
  8070  003406  3791               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8071  003408  3792               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8072  00340A  3793               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8073  00340C                     l1118:
  8074                           
  8075                           ; BSR set to: 0
  8076                           
  8077                           ; BSR set to: 0
  8078  00340C  BF92               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8079  00340E  D003               	goto	u5380
  8080                           
  8081                           ; BSR set to: 0
  8082  003410  0E02               	movlw	2
  8083  003412  618F               	cpfslt	___xxtofl@exp& (0+255),b
  8084  003414  D7F5               	goto	l1119
  8085  003416                     u5380:
  8086                           
  8087                           ; BSR set to: 0
  8088                           
  8089                           ; BSR set to: 0
  8090  003416  B18F               	btfsc	___xxtofl@exp& (0+255),0,b
  8091  003418  D008               	goto	l1123
  8092                           
  8093                           ; BSR set to: 0
  8094  00341A  0EFF               	movlw	255
  8095  00341C  1790               	andwf	___xxtofl@arg& (0+255),f,b
  8096  00341E  0EFF               	movlw	255
  8097  003420  1791               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  8098  003422  0E7F               	movlw	127
  8099  003424  1792               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  8100  003426  0EFF               	movlw	255
  8101  003428  1793               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  8102  00342A                     l1123:
  8103                           
  8104                           ; BSR set to: 0
  8105  00342A  90D8               	bcf	status,0,c
  8106  00342C  338F               	rrcf	___xxtofl@exp& (0+255),f,b
  8107  00342E  C08F  F08A         	movff	___xxtofl@exp,??___xxtofl
  8108  003432  6B8B               	clrf	(??___xxtofl+1)& (0+255),b
  8109  003434  6B8C               	clrf	(??___xxtofl+2)& (0+255),b
  8110  003436  6B8D               	clrf	(??___xxtofl+3)& (0+255),b
  8111  003438  C08A  F08D         	movff	??___xxtofl,??___xxtofl+3
  8112  00343C  6B8C               	clrf	(??___xxtofl+2)& (0+255),b
  8113  00343E  6B8B               	clrf	(??___xxtofl+1)& (0+255),b
  8114  003440  6B8A               	clrf	??___xxtofl& (0+255),b
  8115  003442  518A               	movf	??___xxtofl& (0+255),w,b
  8116  003444  1390               	iorwf	___xxtofl@arg& (0+255),f,b
  8117  003446  518B               	movf	(??___xxtofl+1)& (0+255),w,b
  8118  003448  1391               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8119  00344A  518C               	movf	(??___xxtofl+2)& (0+255),w,b
  8120  00344C  1392               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8121  00344E  518D               	movf	(??___xxtofl+3)& (0+255),w,b
  8122  003450  1393               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8123                           
  8124                           ; BSR set to: 0
  8125  003452  518E               	movf	___xxtofl@sign& (0+255),w,b
  8126  003454  A4D8               	btfss	status,2,c
  8127                           
  8128                           ; BSR set to: 0
  8129  003456  AF89               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8130  003458  D001               	goto	l1124
  8131                           
  8132                           ; BSR set to: 0
  8133  00345A  8F93               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8134  00345C                     l1124:
  8135                           
  8136                           ; BSR set to: 0
  8137                           
  8138                           ; BSR set to: 0
  8139  00345C  C090  F086         	movff	___xxtofl@arg,?___xxtofl
  8140  003460  C091  F087         	movff	___xxtofl@arg+1,?___xxtofl+1
  8141  003464  C092  F088         	movff	___xxtofl@arg+2,?___xxtofl+2
  8142  003468  C093  F089         	movff	___xxtofl@arg+3,?___xxtofl+3
  8143  00346C  0012               	return	
  8144  00346E                     __end_of___xxtofl:
  8145                           	opt stack 0
  8146                           tblptru	equ	0xFF8
  8147                           tblptrh	equ	0xFF7
  8148                           tblptrl	equ	0xFF6
  8149                           tablat	equ	0xFF5
  8150                           prodh	equ	0xFF4
  8151                           prodl	equ	0xFF3
  8152                           intcon	equ	0xFF2
  8153                           intcon2	equ	0xFF1
  8154                           intcon3	equ	0xFF0
  8155                           indf0	equ	0xFEF
  8156                           postinc0	equ	0xFEE
  8157                           fsr0h	equ	0xFEA
  8158                           fsr0l	equ	0xFE9
  8159                           wreg	equ	0xFE8
  8160                           postdec1	equ	0xFE5
  8161                           fsr1l	equ	0xFE1
  8162                           indf2	equ	0xFDF
  8163                           postinc2	equ	0xFDE
  8164                           postdec2	equ	0xFDD
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8
  8168                           
  8169 ;; *************** function ___wmul *****************
  8170 ;; Defined at:
  8171 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8174 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  product         2    4[BANK0 ] unsigned int 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  2    0[BANK0 ] unsigned int 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0, prodl, prodh
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;Total ram usage:        6 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    3
  8193 ;; This function calls:
  8194 ;;		Nothing
  8195 ;; This function is called by:
  8196 ;;		_read_adc_voltage
  8197 ;;		_autoCool
  8198 ;;		_autoHeat
  8199 ;;		_main
  8200 ;;		_sprintf
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text18
  8205  0044BE                     __ptext18:
  8206                           	opt stack 0
  8207  0044BE                     ___wmul:
  8208                           	opt stack 26
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;incstack = 0
  8212  0044BE  0100               	movlb	0	; () banked
  8213  0044C0  5180               	movf	___wmul@multiplier& (0+255),w,b
  8214  0044C2  0382               	mulwf	___wmul@multiplicand& (0+255),b
  8215  0044C4  CFF3 F084          	movff	prodl,___wmul@product
  8216  0044C8  CFF4 F085          	movff	prodh,___wmul@product+1
  8217  0044CC  5180               	movf	___wmul@multiplier& (0+255),w,b
  8218  0044CE  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8219  0044D0  50F3               	movf	prodl,w,c
  8220  0044D2  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  8221  0044D4  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8222  0044D6  0382               	mulwf	___wmul@multiplicand& (0+255),b
  8223  0044D8  50F3               	movf	prodl,w,c
  8224  0044DA  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  8225                           
  8226                           ; BSR set to: 0
  8227  0044DC  C084  F080         	movff	___wmul@product,?___wmul
  8228  0044E0  C085  F081         	movff	___wmul@product+1,?___wmul+1
  8229  0044E4  0012               	return	
  8230  0044E6                     __end_of___wmul:
  8231                           	opt stack 0
  8232                           tblptru	equ	0xFF8
  8233                           tblptrh	equ	0xFF7
  8234                           tblptrl	equ	0xFF6
  8235                           tablat	equ	0xFF5
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           intcon	equ	0xFF2
  8239                           intcon2	equ	0xFF1
  8240                           intcon3	equ	0xFF0
  8241                           indf0	equ	0xFEF
  8242                           postinc0	equ	0xFEE
  8243                           fsr0h	equ	0xFEA
  8244                           fsr0l	equ	0xFE9
  8245                           wreg	equ	0xFE8
  8246                           postdec1	equ	0xFE5
  8247                           fsr1l	equ	0xFE1
  8248                           indf2	equ	0xFDF
  8249                           postinc2	equ	0xFDE
  8250                           postdec2	equ	0xFDD
  8251                           fsr2h	equ	0xFDA
  8252                           fsr2l	equ	0xFD9
  8253                           status	equ	0xFD8
  8254                           
  8255 ;; *************** function ___llmod *****************
  8256 ;; Defined at:
  8257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  dividend        4   13[BANK0 ] unsigned long 
  8260 ;;  divisor         4   17[BANK0 ] unsigned long 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  counter         1   21[BANK0 ] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  4   13[BANK0 ] unsigned long 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8272 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;Total ram usage:        9 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    3
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_sprintf
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text19
  8287  00411C                     __ptext19:
  8288                           	opt stack 0
  8289  00411C                     ___llmod:
  8290                           	opt stack 26
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;incstack = 0
  8294  00411C  0100               	movlb	0	; () banked
  8295  00411E  5191               	movf	___llmod@divisor& (0+255),w,b
  8296  004120  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8297  004122  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8298  004124  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8299  004126  B4D8               	btfsc	status,2,c
  8300  004128  D024               	goto	l922
  8301                           
  8302                           ; BSR set to: 0
  8303  00412A  0E01               	movlw	1
  8304  00412C  6F95               	movwf	___llmod@counter& (0+255),b
  8305  00412E  D006               	goto	l917
  8306  004130                     
  8307                           ; BSR set to: 0
  8308                           
  8309                           ; BSR set to: 0
  8310  004130  90D8               	bcf	status,0,c
  8311  004132  3791               	rlcf	___llmod@divisor& (0+255),f,b
  8312  004134  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8313  004136  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8314  004138  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8315  00413A  2B95               	incf	___llmod@counter& (0+255),f,b
  8316  00413C                     l917:
  8317                           
  8318                           ; BSR set to: 0
  8319                           
  8320                           ; BSR set to: 0
  8321  00413C  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8322  00413E  D7F8               	goto	l918
  8323  004140                     u5300:
  8324                           
  8325                           ; BSR set to: 0
  8326                           
  8327                           ; BSR set to: 0
  8328                           
  8329                           ; BSR set to: 0
  8330  004140  5191               	movf	___llmod@divisor& (0+255),w,b
  8331  004142  5D8D               	subwf	___llmod@dividend& (0+255),w,b
  8332  004144  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  8333  004146  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8334  004148  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  8335  00414A  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8336  00414C  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  8337  00414E  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8338  004150  A0D8               	btfss	status,0,c
  8339  004152  D008               	goto	l921
  8340                           
  8341                           ; BSR set to: 0
  8342  004154  5191               	movf	___llmod@divisor& (0+255),w,b
  8343  004156  5F8D               	subwf	___llmod@dividend& (0+255),f,b
  8344  004158  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  8345  00415A  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8346  00415C  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  8347  00415E  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8348  004160  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  8349  004162  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8350  004164                     l921:
  8351                           
  8352                           ; BSR set to: 0
  8353                           
  8354                           ; BSR set to: 0
  8355  004164  90D8               	bcf	status,0,c
  8356  004166  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8357  004168  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8358  00416A  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8359  00416C  3391               	rrcf	___llmod@divisor& (0+255),f,b
  8360                           
  8361                           ; BSR set to: 0
  8362  00416E  2F95               	decfsz	___llmod@counter& (0+255),f,b
  8363  004170  D7E7               	goto	u5300
  8364  004172                     l922:
  8365                           
  8366                           ; BSR set to: 0
  8367                           
  8368                           ; BSR set to: 0
  8369  004172  C08D  F08D         	movff	___llmod@dividend,?___llmod
  8370  004176  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
  8371  00417A  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
  8372  00417E  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
  8373                           
  8374                           ; BSR set to: 0
  8375  004182  0012               	return		;funcret
  8376  004184                     __end_of___llmod:
  8377                           	opt stack 0
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           intcon3	equ	0xFF0
  8387                           indf0	equ	0xFEF
  8388                           postinc0	equ	0xFEE
  8389                           fsr0h	equ	0xFEA
  8390                           fsr0l	equ	0xFE9
  8391                           wreg	equ	0xFE8
  8392                           postdec1	equ	0xFE5
  8393                           fsr1l	equ	0xFE1
  8394                           indf2	equ	0xFDF
  8395                           postinc2	equ	0xFDE
  8396                           postdec2	equ	0xFDD
  8397                           fsr2h	equ	0xFDA
  8398                           fsr2l	equ	0xFD9
  8399                           status	equ	0xFD8
  8400                           
  8401 ;; *************** function ___lldiv *****************
  8402 ;; Defined at:
  8403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  dividend        4    0[BANK0 ] unsigned long 
  8406 ;;  divisor         4    4[BANK0 ] unsigned long 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  quotient        4    8[BANK0 ] unsigned long 
  8409 ;;  counter         1   12[BANK0 ] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  4    0[BANK0 ] unsigned long 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8419 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8423 ;;Total ram usage:       13 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    3
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_sprintf
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text20
  8434  003FB8                     __ptext20:
  8435                           	opt stack 0
  8436  003FB8                     ___lldiv:
  8437                           	opt stack 26
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;incstack = 0
  8441  003FB8  0E00               	movlw	0
  8442  003FBA  0100               	movlb	0	; () banked
  8443  003FBC  6F88               	movwf	___lldiv@quotient& (0+255),b
  8444  003FBE  0E00               	movlw	0
  8445  003FC0  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  8446  003FC2  0E00               	movlw	0
  8447  003FC4  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8448  003FC6  0E00               	movlw	0
  8449  003FC8  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8450                           
  8451                           ; BSR set to: 0
  8452  003FCA  5184               	movf	___lldiv@divisor& (0+255),w,b
  8453  003FCC  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8454  003FCE  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8455  003FD0  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8456  003FD2  B4D8               	btfsc	status,2,c
  8457  003FD4  D02A               	goto	l912
  8458                           
  8459                           ; BSR set to: 0
  8460  003FD6  0E01               	movlw	1
  8461  003FD8  6F8C               	movwf	___lldiv@counter& (0+255),b
  8462  003FDA  D006               	goto	l907
  8463  003FDC                     
  8464                           ; BSR set to: 0
  8465                           
  8466                           ; BSR set to: 0
  8467  003FDC  90D8               	bcf	status,0,c
  8468  003FDE  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  8469  003FE0  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8470  003FE2  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8471  003FE4  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8472  003FE6  2B8C               	incf	___lldiv@counter& (0+255),f,b
  8473  003FE8                     l907:
  8474                           
  8475                           ; BSR set to: 0
  8476                           
  8477                           ; BSR set to: 0
  8478  003FE8  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8479  003FEA  D7F8               	goto	l908
  8480  003FEC                     u5270:
  8481                           
  8482                           ; BSR set to: 0
  8483                           
  8484                           ; BSR set to: 0
  8485                           
  8486                           ; BSR set to: 0
  8487  003FEC  90D8               	bcf	status,0,c
  8488  003FEE  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  8489  003FF0  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8490  003FF2  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8491  003FF4  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8492                           
  8493                           ; BSR set to: 0
  8494  003FF6  5184               	movf	___lldiv@divisor& (0+255),w,b
  8495  003FF8  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  8496  003FFA  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8497  003FFC  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8498  003FFE  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8499  004000  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8500  004002  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8501  004004  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8502  004006  A0D8               	btfss	status,0,c
  8503  004008  D009               	goto	l911
  8504                           
  8505                           ; BSR set to: 0
  8506  00400A  5184               	movf	___lldiv@divisor& (0+255),w,b
  8507  00400C  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  8508  00400E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8509  004010  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8510  004012  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8511  004014  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8512  004016  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8513  004018  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8514                           
  8515                           ; BSR set to: 0
  8516  00401A  8188               	bsf	___lldiv@quotient& (0+255),0,b
  8517  00401C                     l911:
  8518                           
  8519                           ; BSR set to: 0
  8520                           
  8521                           ; BSR set to: 0
  8522  00401C  90D8               	bcf	status,0,c
  8523  00401E  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8524  004020  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8525  004022  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8526  004024  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  8527                           
  8528                           ; BSR set to: 0
  8529  004026  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  8530  004028  D7E1               	goto	u5270
  8531  00402A                     l912:
  8532                           
  8533                           ; BSR set to: 0
  8534                           
  8535                           ; BSR set to: 0
  8536  00402A  C088  F080         	movff	___lldiv@quotient,?___lldiv
  8537  00402E  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  8538  004032  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  8539  004036  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  8540                           
  8541                           ; BSR set to: 0
  8542  00403A  0012               	return		;funcret
  8543  00403C                     __end_of___lldiv:
  8544                           	opt stack 0
  8545                           tblptru	equ	0xFF8
  8546                           tblptrh	equ	0xFF7
  8547                           tblptrl	equ	0xFF6
  8548                           tablat	equ	0xFF5
  8549                           prodh	equ	0xFF4
  8550                           prodl	equ	0xFF3
  8551                           intcon	equ	0xFF2
  8552                           intcon2	equ	0xFF1
  8553                           intcon3	equ	0xFF0
  8554                           indf0	equ	0xFEF
  8555                           postinc0	equ	0xFEE
  8556                           fsr0h	equ	0xFEA
  8557                           fsr0l	equ	0xFE9
  8558                           wreg	equ	0xFE8
  8559                           postdec1	equ	0xFE5
  8560                           fsr1l	equ	0xFE1
  8561                           indf2	equ	0xFDF
  8562                           postinc2	equ	0xFDE
  8563                           postdec2	equ	0xFDD
  8564                           fsr2h	equ	0xFDA
  8565                           fsr2l	equ	0xFD9
  8566                           status	equ	0xFD8
  8567                           
  8568 ;; *************** function ___flsub *****************
  8569 ;; Defined at:
  8570 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  b               4  114[BANK0 ] unsigned long 
  8573 ;;  a               4  118[BANK0 ] unsigned long 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  4  114[BANK0 ] unsigned long 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8585 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8589 ;;Total ram usage:        8 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    4
  8592 ;; This function calls:
  8593 ;;		___fladd
  8594 ;; This function is called by:
  8595 ;;		_sprintf
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text21
  8600  004292                     __ptext21:
  8601                           	opt stack 0
  8602  004292                     ___flsub:
  8603                           	opt stack 25
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;incstack = 0
  8607  004292  0E00               	movlw	0
  8608  004294  0100               	movlb	0	; () banked
  8609  004296  1BF6               	xorwf	___flsub@a& (0+255),f,b
  8610  004298  0E00               	movlw	0
  8611  00429A  1BF7               	xorwf	(___flsub@a+1)& (0+255),f,b
  8612  00429C  0E00               	movlw	0
  8613  00429E  1BF8               	xorwf	(___flsub@a+2)& (0+255),f,b
  8614  0042A0  0E80               	movlw	128
  8615  0042A2  1BF9               	xorwf	(___flsub@a+3)& (0+255),f,b
  8616                           
  8617                           ; BSR set to: 0
  8618  0042A4  C0F2  F0DE         	movff	___flsub@b,___fladd@b
  8619  0042A8  C0F3  F0DF         	movff	___flsub@b+1,___fladd@b+1
  8620  0042AC  C0F4  F0E0         	movff	___flsub@b+2,___fladd@b+2
  8621  0042B0  C0F5  F0E1         	movff	___flsub@b+3,___fladd@b+3
  8622  0042B4  C0F6  F0E2         	movff	___flsub@a,___fladd@a
  8623  0042B8  C0F7  F0E3         	movff	___flsub@a+1,___fladd@a+1
  8624  0042BC  C0F8  F0E4         	movff	___flsub@a+2,___fladd@a+2
  8625  0042C0  C0F9  F0E5         	movff	___flsub@a+3,___fladd@a+3
  8626  0042C4  ECA8  F00E         	call	___fladd	;wreg free
  8627  0042C8  C0DE  F0F2         	movff	?___fladd,?___flsub
  8628  0042CC  C0DF  F0F3         	movff	?___fladd+1,?___flsub+1
  8629  0042D0  C0E0  F0F4         	movff	?___fladd+2,?___flsub+2
  8630  0042D4  C0E1  F0F5         	movff	?___fladd+3,?___flsub+3
  8631  0042D8  0012               	return	
  8632  0042DA                     __end_of___flsub:
  8633                           	opt stack 0
  8634                           tblptru	equ	0xFF8
  8635                           tblptrh	equ	0xFF7
  8636                           tblptrl	equ	0xFF6
  8637                           tablat	equ	0xFF5
  8638                           prodh	equ	0xFF4
  8639                           prodl	equ	0xFF3
  8640                           intcon	equ	0xFF2
  8641                           intcon2	equ	0xFF1
  8642                           intcon3	equ	0xFF0
  8643                           indf0	equ	0xFEF
  8644                           postinc0	equ	0xFEE
  8645                           fsr0h	equ	0xFEA
  8646                           fsr0l	equ	0xFE9
  8647                           wreg	equ	0xFE8
  8648                           postdec1	equ	0xFE5
  8649                           fsr1l	equ	0xFE1
  8650                           indf2	equ	0xFDF
  8651                           postinc2	equ	0xFDE
  8652                           postdec2	equ	0xFDD
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function ___flneg *****************
  8658 ;; Defined at:
  8659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  f1              4   20[BANK0 ] unsigned long 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  4   20[BANK0 ] unsigned long 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;Total ram usage:        4 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    3
  8680 ;; This function calls:
  8681 ;;		Nothing
  8682 ;; This function is called by:
  8683 ;;		_autoCool
  8684 ;;		_autoHeat
  8685 ;;		_main
  8686 ;;		_sprintf
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text22
  8691  0043D8                     __ptext22:
  8692                           	opt stack 0
  8693  0043D8                     ___flneg:
  8694                           	opt stack 26
  8695                           
  8696                           ;incstack = 0
  8697  0043D8  0100               	movlb	0	; () banked
  8698  0043DA  5194               	movf	___flneg@f1& (0+255),w,b
  8699  0043DC  1195               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8700  0043DE  1196               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8701  0043E0  1197               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8702  0043E2  B4D8               	btfsc	status,2,c
  8703  0043E4  D008               	goto	l741
  8704                           
  8705                           ; BSR set to: 0
  8706  0043E6  0E00               	movlw	0
  8707  0043E8  1B94               	xorwf	___flneg@f1& (0+255),f,b
  8708  0043EA  0E00               	movlw	0
  8709  0043EC  1B95               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8710  0043EE  0E00               	movlw	0
  8711  0043F0  1B96               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8712  0043F2  0E80               	movlw	128
  8713  0043F4  1B97               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8714  0043F6                     l741:
  8715                           
  8716                           ; BSR set to: 0
  8717                           
  8718                           ; BSR set to: 0
  8719  0043F6  C094  F094         	movff	___flneg@f1,?___flneg
  8720  0043FA  C095  F095         	movff	___flneg@f1+1,?___flneg+1
  8721  0043FE  C096  F096         	movff	___flneg@f1+2,?___flneg+2
  8722  004402  C097  F097         	movff	___flneg@f1+3,?___flneg+3
  8723  004406  0012               	return	
  8724  004408                     __end_of___flneg:
  8725                           	opt stack 0
  8726                           tblptru	equ	0xFF8
  8727                           tblptrh	equ	0xFF7
  8728                           tblptrl	equ	0xFF6
  8729                           tablat	equ	0xFF5
  8730                           prodh	equ	0xFF4
  8731                           prodl	equ	0xFF3
  8732                           intcon	equ	0xFF2
  8733                           intcon2	equ	0xFF1
  8734                           intcon3	equ	0xFF0
  8735                           indf0	equ	0xFEF
  8736                           postinc0	equ	0xFEE
  8737                           fsr0h	equ	0xFEA
  8738                           fsr0l	equ	0xFE9
  8739                           wreg	equ	0xFE8
  8740                           postdec1	equ	0xFE5
  8741                           fsr1l	equ	0xFE1
  8742                           indf2	equ	0xFDF
  8743                           postinc2	equ	0xFDE
  8744                           postdec2	equ	0xFDD
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           
  8749 ;; *************** function ___flge *****************
  8750 ;; Defined at:
  8751 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  ff1             4  114[BANK0 ] unsigned long 
  8754 ;;  ff2             4  118[BANK0 ] unsigned long 
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;		None
  8757 ;; Return value:  Size  Location     Type
  8758 ;;		None               void
  8759 ;; Registers used:
  8760 ;;		wreg, status,2, status,0
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8766 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8768 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8769 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;Total ram usage:       12 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:    3
  8773 ;; This function calls:
  8774 ;;		Nothing
  8775 ;; This function is called by:
  8776 ;;		_autoCool
  8777 ;;		_autoHeat
  8778 ;;		_main
  8779 ;;		_sprintf
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text23
  8784  00381C                     __ptext23:
  8785                           	opt stack 0
  8786  00381C                     ___flge:
  8787                           	opt stack 26
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;incstack = 0
  8791  00381C  0E00               	movlw	0
  8792  00381E  0100               	movlb	0	; () banked
  8793  003820  15F2               	andwf	___flge@ff1& (0+255),w,b
  8794  003822  6FFA               	movwf	??___flge& (0+255),b
  8795  003824  0E00               	movlw	0
  8796  003826  15F3               	andwf	(___flge@ff1+1)& (0+255),w,b
  8797  003828  6FFB               	movwf	(??___flge+1)& (0+255),b
  8798  00382A  0E80               	movlw	128
  8799  00382C  15F4               	andwf	(___flge@ff1+2)& (0+255),w,b
  8800  00382E  6FFC               	movwf	(??___flge+2)& (0+255),b
  8801  003830  0E7F               	movlw	127
  8802  003832  15F5               	andwf	(___flge@ff1+3)& (0+255),w,b
  8803  003834  6FFD               	movwf	(??___flge+3)& (0+255),b
  8804  003836  51FA               	movf	??___flge& (0+255),w,b
  8805  003838  11FB               	iorwf	(??___flge+1)& (0+255),w,b
  8806  00383A  11FC               	iorwf	(??___flge+2)& (0+255),w,b
  8807  00383C  11FD               	iorwf	(??___flge+3)& (0+255),w,b
  8808  00383E  A4D8               	btfss	status,2,c
  8809  003840  D008               	goto	l734
  8810                           
  8811                           ; BSR set to: 0
  8812  003842  0E00               	movlw	0
  8813  003844  6FF2               	movwf	___flge@ff1& (0+255),b
  8814  003846  0E00               	movlw	0
  8815  003848  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  8816  00384A  0E00               	movlw	0
  8817  00384C  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  8818  00384E  0E00               	movlw	0
  8819  003850  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  8820  003852                     l734:
  8821                           
  8822                           ; BSR set to: 0
  8823                           
  8824                           ; BSR set to: 0
  8825  003852  0E00               	movlw	0
  8826  003854  15F6               	andwf	___flge@ff2& (0+255),w,b
  8827  003856  6FFA               	movwf	??___flge& (0+255),b
  8828  003858  0E00               	movlw	0
  8829  00385A  15F7               	andwf	(___flge@ff2+1)& (0+255),w,b
  8830  00385C  6FFB               	movwf	(??___flge+1)& (0+255),b
  8831  00385E  0E80               	movlw	128
  8832  003860  15F8               	andwf	(___flge@ff2+2)& (0+255),w,b
  8833  003862  6FFC               	movwf	(??___flge+2)& (0+255),b
  8834  003864  0E7F               	movlw	127
  8835  003866  15F9               	andwf	(___flge@ff2+3)& (0+255),w,b
  8836  003868  6FFD               	movwf	(??___flge+3)& (0+255),b
  8837  00386A  51FA               	movf	??___flge& (0+255),w,b
  8838  00386C  11FB               	iorwf	(??___flge+1)& (0+255),w,b
  8839  00386E  11FC               	iorwf	(??___flge+2)& (0+255),w,b
  8840  003870  11FD               	iorwf	(??___flge+3)& (0+255),w,b
  8841  003872  A4D8               	btfss	status,2,c
  8842  003874  D008               	goto	l735
  8843                           
  8844                           ; BSR set to: 0
  8845  003876  0E00               	movlw	0
  8846  003878  6FF6               	movwf	___flge@ff2& (0+255),b
  8847  00387A  0E00               	movlw	0
  8848  00387C  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  8849  00387E  0E00               	movlw	0
  8850  003880  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  8851  003882  0E00               	movlw	0
  8852  003884  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  8853  003886                     l735:
  8854                           
  8855                           ; BSR set to: 0
  8856                           
  8857                           ; BSR set to: 0
  8858  003886  AFF5               	btfss	(___flge@ff1+3)& (0+255),7,b
  8859  003888  D01D               	goto	l736
  8860                           
  8861                           ; BSR set to: 0
  8862  00388A  C0F2  F0FA         	movff	___flge@ff1,??___flge
  8863  00388E  C0F3  F0FB         	movff	___flge@ff1+1,??___flge+1
  8864  003892  C0F4  F0FC         	movff	___flge@ff1+2,??___flge+2
  8865  003896  C0F5  F0FD         	movff	___flge@ff1+3,??___flge+3
  8866  00389A  1FFA               	comf	??___flge& (0+255),f,b
  8867  00389C  1FFB               	comf	(??___flge+1)& (0+255),f,b
  8868  00389E  1FFC               	comf	(??___flge+2)& (0+255),f,b
  8869  0038A0  1FFD               	comf	(??___flge+3)& (0+255),f,b
  8870  0038A2  2BFA               	incf	??___flge& (0+255),f,b
  8871  0038A4  0E00               	movlw	0
  8872  0038A6  23FB               	addwfc	(??___flge+1)& (0+255),f,b
  8873  0038A8  23FC               	addwfc	(??___flge+2)& (0+255),f,b
  8874  0038AA  23FD               	addwfc	(??___flge+3)& (0+255),f,b
  8875  0038AC  0E00               	movlw	0
  8876  0038AE  25FA               	addwf	??___flge& (0+255),w,b
  8877  0038B0  6FF2               	movwf	___flge@ff1& (0+255),b
  8878  0038B2  0E00               	movlw	0
  8879  0038B4  21FB               	addwfc	(??___flge+1)& (0+255),w,b
  8880  0038B6  6FF3               	movwf	(___flge@ff1+1)& (0+255),b
  8881  0038B8  0E00               	movlw	0
  8882  0038BA  21FC               	addwfc	(??___flge+2)& (0+255),w,b
  8883  0038BC  6FF4               	movwf	(___flge@ff1+2)& (0+255),b
  8884  0038BE  0E80               	movlw	128
  8885  0038C0  21FD               	addwfc	(??___flge+3)& (0+255),w,b
  8886  0038C2  6FF5               	movwf	(___flge@ff1+3)& (0+255),b
  8887  0038C4                     l736:
  8888                           
  8889                           ; BSR set to: 0
  8890                           
  8891                           ; BSR set to: 0
  8892  0038C4  AFF9               	btfss	(___flge@ff2+3)& (0+255),7,b
  8893  0038C6  D01D               	goto	l737
  8894                           
  8895                           ; BSR set to: 0
  8896  0038C8  C0F6  F0FA         	movff	___flge@ff2,??___flge
  8897  0038CC  C0F7  F0FB         	movff	___flge@ff2+1,??___flge+1
  8898  0038D0  C0F8  F0FC         	movff	___flge@ff2+2,??___flge+2
  8899  0038D4  C0F9  F0FD         	movff	___flge@ff2+3,??___flge+3
  8900  0038D8  1FFA               	comf	??___flge& (0+255),f,b
  8901  0038DA  1FFB               	comf	(??___flge+1)& (0+255),f,b
  8902  0038DC  1FFC               	comf	(??___flge+2)& (0+255),f,b
  8903  0038DE  1FFD               	comf	(??___flge+3)& (0+255),f,b
  8904  0038E0  2BFA               	incf	??___flge& (0+255),f,b
  8905  0038E2  0E00               	movlw	0
  8906  0038E4  23FB               	addwfc	(??___flge+1)& (0+255),f,b
  8907  0038E6  23FC               	addwfc	(??___flge+2)& (0+255),f,b
  8908  0038E8  23FD               	addwfc	(??___flge+3)& (0+255),f,b
  8909  0038EA  0E00               	movlw	0
  8910  0038EC  25FA               	addwf	??___flge& (0+255),w,b
  8911  0038EE  6FF6               	movwf	___flge@ff2& (0+255),b
  8912  0038F0  0E00               	movlw	0
  8913  0038F2  21FB               	addwfc	(??___flge+1)& (0+255),w,b
  8914  0038F4  6FF7               	movwf	(___flge@ff2+1)& (0+255),b
  8915  0038F6  0E00               	movlw	0
  8916  0038F8  21FC               	addwfc	(??___flge+2)& (0+255),w,b
  8917  0038FA  6FF8               	movwf	(___flge@ff2+2)& (0+255),b
  8918  0038FC  0E80               	movlw	128
  8919  0038FE  21FD               	addwfc	(??___flge+3)& (0+255),w,b
  8920  003900  6FF9               	movwf	(___flge@ff2+3)& (0+255),b
  8921  003902                     l737:
  8922                           
  8923                           ; BSR set to: 0
  8924  003902  0E00               	movlw	0
  8925  003904  1BF2               	xorwf	___flge@ff1& (0+255),f,b
  8926  003906  0E00               	movlw	0
  8927  003908  1BF3               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8928  00390A  0E00               	movlw	0
  8929  00390C  1BF4               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8930  00390E  0E80               	movlw	128
  8931  003910  1BF5               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8932  003912  0E00               	movlw	0
  8933  003914  1BF6               	xorwf	___flge@ff2& (0+255),f,b
  8934  003916  0E00               	movlw	0
  8935  003918  1BF7               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8936  00391A  0E00               	movlw	0
  8937  00391C  1BF8               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8938  00391E  0E80               	movlw	128
  8939  003920  1BF9               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8940  003922  51F6               	movf	___flge@ff2& (0+255),w,b
  8941  003924  5DF2               	subwf	___flge@ff1& (0+255),w,b
  8942  003926  51F7               	movf	(___flge@ff2+1)& (0+255),w,b
  8943  003928  59F3               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8944  00392A  51F8               	movf	(___flge@ff2+2)& (0+255),w,b
  8945  00392C  59F4               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8946  00392E  51F9               	movf	(___flge@ff2+3)& (0+255),w,b
  8947  003930  59F5               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8948  003932  B0D8               	btfsc	status,0,c
  8949  003934  D002               	goto	l3688
  8950                           
  8951                           ; BSR set to: 0
  8952  003936  90D8               	bcf	status,0,c
  8953  003938  0012               	return	
  8954  00393A                     l3688:
  8955                           
  8956                           ; BSR set to: 0
  8957                           
  8958                           ; BSR set to: 0
  8959  00393A  80D8               	bsf	status,0,c
  8960                           
  8961                           ; BSR set to: 0
  8962  00393C  0012               	return	
  8963  00393E                     __end_of___flge:
  8964                           	opt stack 0
  8965                           tblptru	equ	0xFF8
  8966                           tblptrh	equ	0xFF7
  8967                           tblptrl	equ	0xFF6
  8968                           tablat	equ	0xFF5
  8969                           prodh	equ	0xFF4
  8970                           prodl	equ	0xFF3
  8971                           intcon	equ	0xFF2
  8972                           intcon2	equ	0xFF1
  8973                           intcon3	equ	0xFF0
  8974                           indf0	equ	0xFEF
  8975                           postinc0	equ	0xFEE
  8976                           fsr0h	equ	0xFEA
  8977                           fsr0l	equ	0xFE9
  8978                           wreg	equ	0xFE8
  8979                           postdec1	equ	0xFE5
  8980                           fsr1l	equ	0xFE1
  8981                           indf2	equ	0xFDF
  8982                           postinc2	equ	0xFDE
  8983                           postdec2	equ	0xFDD
  8984                           fsr2h	equ	0xFDA
  8985                           fsr2l	equ	0xFD9
  8986                           status	equ	0xFD8
  8987                           
  8988 ;; *************** function _set_pwm1_percent *****************
  8989 ;; Defined at:
  8990 ;;		line 243 in file "Main.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  value           4  124[BANK0 ] float 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  tmp             4    0[BANK1 ] float 
  8995 ;;  raw_val         2    4[BANK1 ] int 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9005 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;Total ram usage:       10 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    4
  9012 ;; This function calls:
  9013 ;;		___fladd
  9014 ;;		___fldiv
  9015 ;;		___flmul
  9016 ;;		___fltol
  9017 ;;		_set_pwm1_raw
  9018 ;; This function is called by:
  9019 ;;		_autoCool
  9020 ;;		_autoHeat
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text24
  9025  003D2E                     __ptext24:
  9026                           	opt stack 0
  9027  003D2E                     _set_pwm1_percent:
  9028                           	opt stack 25
  9029                           
  9030                           ;Main.c: 244: float tmp = value*1023.0/100.0;
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;incstack = 0
  9034  003D2E  0E00               	movlw	0
  9035  003D30  0100               	movlb	0	; () banked
  9036  003D32  6FBC               	movwf	___flmul@a& (0+255),b
  9037  003D34  0EC0               	movlw	192
  9038  003D36  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  9039  003D38  0E7F               	movlw	127
  9040  003D3A  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  9041  003D3C  0E44               	movlw	68
  9042  003D3E  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  9043  003D40  C0FC  F0B8         	movff	set_pwm1_percent@value,___flmul@b
  9044  003D44  C0FD  F0B9         	movff	set_pwm1_percent@value+1,___flmul@b+1
  9045  003D48  C0FE  F0BA         	movff	set_pwm1_percent@value+2,___flmul@b+2
  9046  003D4C  C0FF  F0BB         	movff	set_pwm1_percent@value+3,___flmul@b+3
  9047  003D50  EC57  F00B         	call	___flmul	;wreg free
  9048  003D54  C0B8  F094         	movff	?___flmul,___fldiv@b
  9049  003D58  C0B9  F095         	movff	?___flmul+1,___fldiv@b+1
  9050  003D5C  C0BA  F096         	movff	?___flmul+2,___fldiv@b+2
  9051  003D60  C0BB  F097         	movff	?___flmul+3,___fldiv@b+3
  9052  003D64  0E00               	movlw	0
  9053  003D66  0100               	movlb	0	; () banked
  9054  003D68  6F98               	movwf	___fldiv@a& (0+255),b
  9055  003D6A  0E00               	movlw	0
  9056  003D6C  6F99               	movwf	(___fldiv@a+1)& (0+255),b
  9057  003D6E  0EC8               	movlw	200
  9058  003D70  6F9A               	movwf	(___fldiv@a+2)& (0+255),b
  9059  003D72  0E42               	movlw	66
  9060  003D74  6F9B               	movwf	(___fldiv@a+3)& (0+255),b
  9061  003D76  ECC5  F014         	call	___fldiv	;wreg free
  9062  003D7A  C094  F100         	movff	?___fldiv,set_pwm1_percent@tmp
  9063  003D7E  C095  F101         	movff	?___fldiv+1,set_pwm1_percent@tmp+1
  9064  003D82  C096  F102         	movff	?___fldiv+2,set_pwm1_percent@tmp+2
  9065  003D86  C097  F103         	movff	?___fldiv+3,set_pwm1_percent@tmp+3
  9066                           
  9067                           ;Main.c: 245: int raw_val = (int)(tmp +0.5);
  9068  003D8A  0E00               	movlw	0
  9069  003D8C  0100               	movlb	0	; () banked
  9070  003D8E  6FE2               	movwf	___fladd@a& (0+255),b
  9071  003D90  0E00               	movlw	0
  9072  003D92  6FE3               	movwf	(___fladd@a+1)& (0+255),b
  9073  003D94  0E00               	movlw	0
  9074  003D96  6FE4               	movwf	(___fladd@a+2)& (0+255),b
  9075  003D98  0E3F               	movlw	63
  9076  003D9A  6FE5               	movwf	(___fladd@a+3)& (0+255),b
  9077  003D9C  C100  F0DE         	movff	set_pwm1_percent@tmp,___fladd@b
  9078  003DA0  C101  F0DF         	movff	set_pwm1_percent@tmp+1,___fladd@b+1
  9079  003DA4  C102  F0E0         	movff	set_pwm1_percent@tmp+2,___fladd@b+2
  9080  003DA8  C103  F0E1         	movff	set_pwm1_percent@tmp+3,___fladd@b+3
  9081  003DAC  ECA8  F00E         	call	___fladd	;wreg free
  9082  003DB0  C0DE  F0F2         	movff	?___fladd,___fltol@f1
  9083  003DB4  C0DF  F0F3         	movff	?___fladd+1,___fltol@f1+1
  9084  003DB8  C0E0  F0F4         	movff	?___fladd+2,___fltol@f1+2
  9085  003DBC  C0E1  F0F5         	movff	?___fladd+3,___fltol@f1+3
  9086  003DC0  ECBA  F01D         	call	___fltol	;wreg free
  9087  003DC4  C0F2  F104         	movff	?___fltol,set_pwm1_percent@raw_val
  9088  003DC8  C0F3  F105         	movff	?___fltol+1,set_pwm1_percent@raw_val+1
  9089                           
  9090                           ;Main.c: 246: if ( raw_val> 1023) raw_val = 1023;
  9091  003DCC  0101               	movlb	1	; () banked
  9092  003DCE  BF05               	btfsc	(set_pwm1_percent@raw_val+1)& (0+255),7,b
  9093  003DD0  D007               	goto	l213
  9094  003DD2  0E04               	movlw	4
  9095  003DD4  5D05               	subwf	(set_pwm1_percent@raw_val+1)& (0+255),w,b
  9096  003DD6  A0D8               	btfss	status,0,c
  9097  003DD8  D003               	goto	l213
  9098                           
  9099                           ; BSR set to: 1
  9100  003DDA  0E03               	movlw	3
  9101  003DDC  6F05               	movwf	(set_pwm1_percent@raw_val+1)& (0+255),b
  9102  003DDE  6904               	setf	set_pwm1_percent@raw_val& (0+255),b
  9103  003DE0                     l213:
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;Main.c: 247: set_pwm1_raw(raw_val);
  9107                           
  9108                           ; BSR set to: 1
  9109  003DE0  C104  F080         	movff	set_pwm1_percent@raw_val,set_pwm1_raw@raw_value
  9110  003DE4  C105  F081         	movff	set_pwm1_percent@raw_val+1,set_pwm1_raw@raw_value+1
  9111  003DE8  EC04  F022         	call	_set_pwm1_raw	;wreg free
  9112  003DEC  0012               	return		;funcret
  9113  003DEE                     __end_of_set_pwm1_percent:
  9114                           	opt stack 0
  9115                           tblptru	equ	0xFF8
  9116                           tblptrh	equ	0xFF7
  9117                           tblptrl	equ	0xFF6
  9118                           tablat	equ	0xFF5
  9119                           prodh	equ	0xFF4
  9120                           prodl	equ	0xFF3
  9121                           intcon	equ	0xFF2
  9122                           intcon2	equ	0xFF1
  9123                           intcon3	equ	0xFF0
  9124                           indf0	equ	0xFEF
  9125                           postinc0	equ	0xFEE
  9126                           fsr0h	equ	0xFEA
  9127                           fsr0l	equ	0xFE9
  9128                           wreg	equ	0xFE8
  9129                           postdec1	equ	0xFE5
  9130                           fsr1l	equ	0xFE1
  9131                           indf2	equ	0xFDF
  9132                           postinc2	equ	0xFDE
  9133                           postdec2	equ	0xFDD
  9134                           fsr2h	equ	0xFDA
  9135                           fsr2l	equ	0xFD9
  9136                           status	equ	0xFD8
  9137                           
  9138 ;; *************** function _set_pwm1_raw *****************
  9139 ;; Defined at:
  9140 ;;		line 238 in file "Main.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  raw_value       2    0[BANK0 ] unsigned int 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      void 
  9147 ;; Registers used:
  9148 ;;		wreg, status,2, status,0
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;Total ram usage:        4 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:    3
  9161 ;; This function calls:
  9162 ;;		Nothing
  9163 ;; This function is called by:
  9164 ;;		_set_pwm1_percent
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text25
  9169  004408                     __ptext25:
  9170                           	opt stack 0
  9171  004408                     _set_pwm1_raw:
  9172                           	opt stack 25
  9173                           
  9174                           ;Main.c: 239: CCPR1L = (raw_value >> 2) & 0x00FF;
  9175                           
  9176                           ;incstack = 0
  9177  004408  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  9178  00440C  C081  F083         	movff	set_pwm1_raw@raw_value+1,??_set_pwm1_raw+1
  9179  004410  0100               	movlb	0	; () banked
  9180  004412  90D8               	bcf	status,0,c
  9181  004414  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  9182  004416  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  9183  004418  90D8               	bcf	status,0,c
  9184  00441A  3383               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  9185  00441C  3382               	rrcf	??_set_pwm1_raw& (0+255),f,b
  9186  00441E  5182               	movf	??_set_pwm1_raw& (0+255),w,b
  9187  004420  6EBE               	movwf	4030,c	;volatile
  9188                           
  9189                           ;Main.c: 240: CCP1CONbits.DC1B = raw_value & 0x0003;
  9190  004422  C080  F082         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  9191  004426  0E03               	movlw	3
  9192  004428  1782               	andwf	??_set_pwm1_raw& (0+255),f,b
  9193  00442A  3B82               	swapf	??_set_pwm1_raw& (0+255),f,b
  9194  00442C  50BD               	movf	4029,w,c	;volatile
  9195  00442E  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
  9196  004430  0BCF               	andlw	-49
  9197  004432  1982               	xorwf	??_set_pwm1_raw& (0+255),w,b
  9198  004434  6EBD               	movwf	4029,c	;volatile
  9199                           
  9200                           ; BSR set to: 0
  9201  004436  0012               	return		;funcret
  9202  004438                     __end_of_set_pwm1_raw:
  9203                           	opt stack 0
  9204                           tblptru	equ	0xFF8
  9205                           tblptrh	equ	0xFF7
  9206                           tblptrl	equ	0xFF6
  9207                           tablat	equ	0xFF5
  9208                           prodh	equ	0xFF4
  9209                           prodl	equ	0xFF3
  9210                           intcon	equ	0xFF2
  9211                           intcon2	equ	0xFF1
  9212                           intcon3	equ	0xFF0
  9213                           indf0	equ	0xFEF
  9214                           postinc0	equ	0xFEE
  9215                           fsr0h	equ	0xFEA
  9216                           fsr0l	equ	0xFE9
  9217                           wreg	equ	0xFE8
  9218                           postdec1	equ	0xFE5
  9219                           fsr1l	equ	0xFE1
  9220                           indf2	equ	0xFDF
  9221                           postinc2	equ	0xFDE
  9222                           postdec2	equ	0xFDD
  9223                           fsr2h	equ	0xFDA
  9224                           fsr2l	equ	0xFD9
  9225                           status	equ	0xFD8
  9226                           
  9227 ;; *************** function ___fltol *****************
  9228 ;; Defined at:
  9229 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  f1              4  114[BANK0 ] void 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  exp1            1  123[BANK0 ] unsigned char 
  9234 ;;  sign1           1  122[BANK0 ] unsigned char 
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  4  114[BANK0 ] long 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9244 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;Total ram usage:       10 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    3
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_set_pwm1_percent
  9255 ;;		_autoHeat
  9256 ;;		_sprintf
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text26
  9261  003B74                     __ptext26:
  9262                           	opt stack 0
  9263  003B74                     ___fltol:
  9264                           	opt stack 26
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;incstack = 0
  9268  003B74  0100               	movlb	0	; () banked
  9269  003B76  35F4               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9270  003B78  35F5               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9271  003B7A  6FFB               	movwf	___fltol@exp1& (0+255),b
  9272  003B7C  51FB               	movf	___fltol@exp1& (0+255),w,b
  9273  003B7E  A4D8               	btfss	status,2,c
  9274  003B80  D009               	goto	l764
  9275                           
  9276                           ; BSR set to: 0
  9277  003B82  0E00               	movlw	0
  9278  003B84  6FF2               	movwf	?___fltol& (0+255),b
  9279  003B86  0E00               	movlw	0
  9280  003B88  6FF3               	movwf	(?___fltol+1)& (0+255),b
  9281  003B8A  0E00               	movlw	0
  9282  003B8C  6FF4               	movwf	(?___fltol+2)& (0+255),b
  9283  003B8E  0E00               	movlw	0
  9284  003B90  6FF5               	movwf	(?___fltol+3)& (0+255),b
  9285                           
  9286                           ; BSR set to: 0
  9287  003B92  0012               	return	
  9288  003B94                     l764:
  9289                           
  9290                           ; BSR set to: 0
  9291                           
  9292                           ; BSR set to: 0
  9293  003B94  C0F2  F0F6         	movff	___fltol@f1,??___fltol
  9294  003B98  C0F3  F0F7         	movff	___fltol@f1+1,??___fltol+1
  9295  003B9C  C0F4  F0F8         	movff	___fltol@f1+2,??___fltol+2
  9296  003BA0  C0F5  F0F9         	movff	___fltol@f1+3,??___fltol+3
  9297  003BA4  0E20               	movlw	32
  9298  003BA6  D005               	goto	u5200
  9299  003BA8                     u5205:
  9300  003BA8  90D8               	bcf	status,0,c
  9301  003BAA  33F9               	rrcf	(??___fltol+3)& (0+255),f,b
  9302  003BAC  33F8               	rrcf	(??___fltol+2)& (0+255),f,b
  9303  003BAE  33F7               	rrcf	(??___fltol+1)& (0+255),f,b
  9304  003BB0  33F6               	rrcf	??___fltol& (0+255),f,b
  9305  003BB2                     u5200:
  9306  003BB2  2EE8               	decfsz	wreg,f,c
  9307  003BB4  D7F9               	goto	u5205
  9308  003BB6  51F6               	movf	??___fltol& (0+255),w,b
  9309  003BB8  6FFA               	movwf	___fltol@sign1& (0+255),b
  9310                           
  9311                           ; BSR set to: 0
  9312  003BBA  8FF4               	bsf	(___fltol@f1+2)& (0+255),7,b
  9313                           
  9314                           ; BSR set to: 0
  9315  003BBC  0EFF               	movlw	255
  9316  003BBE  17F2               	andwf	___fltol@f1& (0+255),f,b
  9317  003BC0  0EFF               	movlw	255
  9318  003BC2  17F3               	andwf	(___fltol@f1+1)& (0+255),f,b
  9319  003BC4  0EFF               	movlw	255
  9320  003BC6  17F4               	andwf	(___fltol@f1+2)& (0+255),f,b
  9321  003BC8  0E00               	movlw	0
  9322  003BCA  17F5               	andwf	(___fltol@f1+3)& (0+255),f,b
  9323                           
  9324                           ; BSR set to: 0
  9325  003BCC  0E96               	movlw	150
  9326  003BCE  5FFB               	subwf	___fltol@exp1& (0+255),f,b
  9327                           
  9328                           ; BSR set to: 0
  9329  003BD0  AFFB               	btfss	___fltol@exp1& (0+255),7,b
  9330  003BD2  D016               	goto	l766
  9331                           
  9332                           ; BSR set to: 0
  9333  003BD4  51FB               	movf	___fltol@exp1& (0+255),w,b
  9334  003BD6  0A80               	xorlw	128
  9335  003BD8  0F97               	addlw	151
  9336  003BDA  B0D8               	btfsc	status,0,c
  9337  003BDC  D009               	goto	l767
  9338                           
  9339                           ; BSR set to: 0
  9340  003BDE  0E00               	movlw	0
  9341  003BE0  6FF2               	movwf	?___fltol& (0+255),b
  9342  003BE2  0E00               	movlw	0
  9343  003BE4  6FF3               	movwf	(?___fltol+1)& (0+255),b
  9344  003BE6  0E00               	movlw	0
  9345  003BE8  6FF4               	movwf	(?___fltol+2)& (0+255),b
  9346  003BEA  0E00               	movlw	0
  9347  003BEC  6FF5               	movwf	(?___fltol+3)& (0+255),b
  9348                           
  9349                           ; BSR set to: 0
  9350  003BEE  0012               	return	
  9351  003BF0                     l767:
  9352                           
  9353                           ; BSR set to: 0
  9354                           
  9355                           ; BSR set to: 0
  9356                           
  9357                           ; BSR set to: 0
  9358  003BF0  90D8               	bcf	status,0,c
  9359  003BF2  33F5               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9360  003BF4  33F4               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9361  003BF6  33F3               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9362  003BF8  33F2               	rrcf	___fltol@f1& (0+255),f,b
  9363                           
  9364                           ; BSR set to: 0
  9365  003BFA  3FFB               	incfsz	___fltol@exp1& (0+255),f,b
  9366  003BFC  D7F9               	goto	l767
  9367                           
  9368                           ; BSR set to: 0
  9369  003BFE  D015               	goto	u5240
  9370  003C00                     l766:
  9371                           
  9372                           ; BSR set to: 0
  9373                           
  9374                           ; BSR set to: 0
  9375  003C00  0E1F               	movlw	31
  9376  003C02  65FB               	cpfsgt	___fltol@exp1& (0+255),b
  9377  003C04  D00F               	goto	l772
  9378                           
  9379                           ; BSR set to: 0
  9380  003C06  0E00               	movlw	0
  9381  003C08  6FF2               	movwf	?___fltol& (0+255),b
  9382  003C0A  0E00               	movlw	0
  9383  003C0C  6FF3               	movwf	(?___fltol+1)& (0+255),b
  9384  003C0E  0E00               	movlw	0
  9385  003C10  6FF4               	movwf	(?___fltol+2)& (0+255),b
  9386  003C12  0E00               	movlw	0
  9387  003C14  6FF5               	movwf	(?___fltol+3)& (0+255),b
  9388                           
  9389                           ; BSR set to: 0
  9390  003C16  0012               	return	
  9391  003C18                     
  9392                           ; BSR set to: 0
  9393                           
  9394                           ; BSR set to: 0
  9395  003C18  90D8               	bcf	status,0,c
  9396  003C1A  37F2               	rlcf	___fltol@f1& (0+255),f,b
  9397  003C1C  37F3               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9398  003C1E  37F4               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9399  003C20  37F5               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9400  003C22  07FB               	decf	___fltol@exp1& (0+255),f,b
  9401  003C24                     l772:
  9402                           
  9403                           ; BSR set to: 0
  9404                           
  9405                           ; BSR set to: 0
  9406  003C24  51FB               	movf	___fltol@exp1& (0+255),w,b
  9407  003C26  A4D8               	btfss	status,2,c
  9408  003C28  D7F7               	goto	l773
  9409  003C2A                     u5240:
  9410                           
  9411                           ; BSR set to: 0
  9412                           
  9413                           ; BSR set to: 0
  9414                           
  9415                           ; BSR set to: 0
  9416  003C2A  51FA               	movf	___fltol@sign1& (0+255),w,b
  9417  003C2C  B4D8               	btfsc	status,2,c
  9418  003C2E  D008               	goto	l775
  9419                           
  9420                           ; BSR set to: 0
  9421  003C30  1FF5               	comf	(___fltol@f1+3)& (0+255),f,b
  9422  003C32  1FF4               	comf	(___fltol@f1+2)& (0+255),f,b
  9423  003C34  1FF3               	comf	(___fltol@f1+1)& (0+255),f,b
  9424  003C36  6DF2               	negf	___fltol@f1& (0+255),b
  9425  003C38  0E00               	movlw	0
  9426  003C3A  23F3               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9427  003C3C  23F4               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9428  003C3E  23F5               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9429  003C40                     l775:
  9430                           
  9431                           ; BSR set to: 0
  9432                           
  9433                           ; BSR set to: 0
  9434  003C40  C0F2  F0F2         	movff	___fltol@f1,?___fltol
  9435  003C44  C0F3  F0F3         	movff	___fltol@f1+1,?___fltol+1
  9436  003C48  C0F4  F0F4         	movff	___fltol@f1+2,?___fltol+2
  9437  003C4C  C0F5  F0F5         	movff	___fltol@f1+3,?___fltol+3
  9438  003C50  0012               	return	
  9439  003C52                     __end_of___fltol:
  9440                           	opt stack 0
  9441                           tblptru	equ	0xFF8
  9442                           tblptrh	equ	0xFF7
  9443                           tblptrl	equ	0xFF6
  9444                           tablat	equ	0xFF5
  9445                           prodh	equ	0xFF4
  9446                           prodl	equ	0xFF3
  9447                           intcon	equ	0xFF2
  9448                           intcon2	equ	0xFF1
  9449                           intcon3	equ	0xFF0
  9450                           indf0	equ	0xFEF
  9451                           postinc0	equ	0xFEE
  9452                           fsr0h	equ	0xFEA
  9453                           fsr0l	equ	0xFE9
  9454                           wreg	equ	0xFE8
  9455                           postdec1	equ	0xFE5
  9456                           fsr1l	equ	0xFE1
  9457                           indf2	equ	0xFDF
  9458                           postinc2	equ	0xFDE
  9459                           postdec2	equ	0xFDD
  9460                           fsr2h	equ	0xFDA
  9461                           fsr2l	equ	0xFD9
  9462                           status	equ	0xFD8
  9463                           
  9464 ;; *************** function ___flmul *****************
  9465 ;; Defined at:
  9466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  b               4   56[BANK0 ] long 
  9469 ;;  a               4   60[BANK0 ] long 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  prod            4   75[BANK0 ] struct .
  9472 ;;  grs             4   69[BANK0 ] unsigned long 
  9473 ;;  temp            2   79[BANK0 ] struct .
  9474 ;;  bexp            1   74[BANK0 ] unsigned char 
  9475 ;;  aexp            1   73[BANK0 ] unsigned char 
  9476 ;;  sign            1   68[BANK0 ] unsigned char 
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  4   56[BANK0 ] unsigned char 
  9479 ;; Registers used:
  9480 ;;		wreg, status,2, status,0, prodl, prodh
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9486 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;Total ram usage:       25 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    3
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_set_pwm1_percent
  9497 ;;		_autoCool
  9498 ;;		_main
  9499 ;;		_fround
  9500 ;;		_scale
  9501 ;;		_sprintf
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text27
  9506  0016AE                     __ptext27:
  9507                           	opt stack 0
  9508  0016AE                     ___flmul:
  9509                           	opt stack 25
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;incstack = 0
  9513  0016AE  0100               	movlb	0	; () banked
  9514  0016B0  51BB               	movf	(___flmul@b+3)& (0+255),w,b
  9515  0016B2  0B80               	andlw	128
  9516  0016B4  6FC4               	movwf	___flmul@sign& (0+255),b
  9517  0016B6  51BB               	movf	(___flmul@b+3)& (0+255),w,b
  9518  0016B8  25BB               	addwf	(___flmul@b+3)& (0+255),w,b
  9519  0016BA  6FCA               	movwf	___flmul@bexp& (0+255),b
  9520                           
  9521                           ; BSR set to: 0
  9522  0016BC  BFBA               	btfsc	(___flmul@b+2)& (0+255),7,b
  9523                           
  9524                           ; BSR set to: 0
  9525  0016BE  81CA               	bsf	___flmul@bexp& (0+255),0,b
  9526                           
  9527                           ; BSR set to: 0
  9528                           
  9529                           ; BSR set to: 0
  9530  0016C0  51CA               	movf	___flmul@bexp& (0+255),w,b
  9531  0016C2  B4D8               	btfsc	status,2,c
  9532  0016C4  D00D               	goto	l1080
  9533                           
  9534                           ; BSR set to: 0
  9535  0016C6  29CA               	incf	___flmul@bexp& (0+255),w,b
  9536  0016C8  A4D8               	btfss	status,2,c
  9537  0016CA  D008               	goto	l1081
  9538                           
  9539                           ; BSR set to: 0
  9540  0016CC  0E00               	movlw	0
  9541  0016CE  6FB8               	movwf	___flmul@b& (0+255),b
  9542  0016D0  0E00               	movlw	0
  9543  0016D2  6FB9               	movwf	(___flmul@b+1)& (0+255),b
  9544  0016D4  0E00               	movlw	0
  9545  0016D6  6FBA               	movwf	(___flmul@b+2)& (0+255),b
  9546  0016D8  0E00               	movlw	0
  9547  0016DA  6FBB               	movwf	(___flmul@b+3)& (0+255),b
  9548  0016DC                     l1081:
  9549                           
  9550                           ; BSR set to: 0
  9551                           
  9552                           ; BSR set to: 0
  9553  0016DC  8FBA               	bsf	(___flmul@b+2)& (0+255),7,b
  9554  0016DE  D008               	goto	l1082
  9555  0016E0                     l1080:
  9556                           
  9557                           ; BSR set to: 0
  9558                           
  9559                           ; BSR set to: 0
  9560  0016E0  0E00               	movlw	0
  9561  0016E2  6FB8               	movwf	___flmul@b& (0+255),b
  9562  0016E4  0E00               	movlw	0
  9563  0016E6  6FB9               	movwf	(___flmul@b+1)& (0+255),b
  9564  0016E8  0E00               	movlw	0
  9565  0016EA  6FBA               	movwf	(___flmul@b+2)& (0+255),b
  9566  0016EC  0E00               	movlw	0
  9567  0016EE  6FBB               	movwf	(___flmul@b+3)& (0+255),b
  9568  0016F0                     l1082:
  9569                           
  9570                           ; BSR set to: 0
  9571                           
  9572                           ; BSR set to: 0
  9573  0016F0  51BF               	movf	(___flmul@a+3)& (0+255),w,b
  9574  0016F2  0B80               	andlw	128
  9575  0016F4  1BC4               	xorwf	___flmul@sign& (0+255),f,b
  9576                           
  9577                           ; BSR set to: 0
  9578  0016F6  51BF               	movf	(___flmul@a+3)& (0+255),w,b
  9579  0016F8  25BF               	addwf	(___flmul@a+3)& (0+255),w,b
  9580  0016FA  6FC9               	movwf	___flmul@aexp& (0+255),b
  9581                           
  9582                           ; BSR set to: 0
  9583  0016FC  BFBE               	btfsc	(___flmul@a+2)& (0+255),7,b
  9584                           
  9585                           ; BSR set to: 0
  9586  0016FE  81C9               	bsf	___flmul@aexp& (0+255),0,b
  9587                           
  9588                           ; BSR set to: 0
  9589                           
  9590                           ; BSR set to: 0
  9591  001700  51C9               	movf	___flmul@aexp& (0+255),w,b
  9592  001702  B4D8               	btfsc	status,2,c
  9593  001704  D00D               	goto	l1084
  9594                           
  9595                           ; BSR set to: 0
  9596  001706  29C9               	incf	___flmul@aexp& (0+255),w,b
  9597  001708  A4D8               	btfss	status,2,c
  9598  00170A  D008               	goto	l1085
  9599                           
  9600                           ; BSR set to: 0
  9601  00170C  0E00               	movlw	0
  9602  00170E  6FBC               	movwf	___flmul@a& (0+255),b
  9603  001710  0E00               	movlw	0
  9604  001712  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  9605  001714  0E00               	movlw	0
  9606  001716  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  9607  001718  0E00               	movlw	0
  9608  00171A  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  9609  00171C                     l1085:
  9610                           
  9611                           ; BSR set to: 0
  9612                           
  9613                           ; BSR set to: 0
  9614  00171C  8FBE               	bsf	(___flmul@a+2)& (0+255),7,b
  9615  00171E  D008               	goto	l1086
  9616  001720                     l1084:
  9617                           
  9618                           ; BSR set to: 0
  9619                           
  9620                           ; BSR set to: 0
  9621  001720  0E00               	movlw	0
  9622  001722  6FBC               	movwf	___flmul@a& (0+255),b
  9623  001724  0E00               	movlw	0
  9624  001726  6FBD               	movwf	(___flmul@a+1)& (0+255),b
  9625  001728  0E00               	movlw	0
  9626  00172A  6FBE               	movwf	(___flmul@a+2)& (0+255),b
  9627  00172C  0E00               	movlw	0
  9628  00172E  6FBF               	movwf	(___flmul@a+3)& (0+255),b
  9629  001730                     l1086:
  9630                           
  9631                           ; BSR set to: 0
  9632  001730  51C9               	movf	___flmul@aexp& (0+255),w,b
  9633  001732  B4D8               	btfsc	status,2,c
  9634  001734  D003               	goto	u4410
  9635                           
  9636                           ; BSR set to: 0
  9637  001736  51CA               	movf	___flmul@bexp& (0+255),w,b
  9638  001738  A4D8               	btfss	status,2,c
  9639  00173A  D009               	goto	l1087
  9640  00173C                     u4410:
  9641                           
  9642                           ; BSR set to: 0
  9643                           
  9644                           ; BSR set to: 0
  9645  00173C  0E00               	movlw	0
  9646  00173E  6FB8               	movwf	?___flmul& (0+255),b
  9647  001740  0E00               	movlw	0
  9648  001742  6FB9               	movwf	(?___flmul+1)& (0+255),b
  9649  001744  0E00               	movlw	0
  9650  001746  6FBA               	movwf	(?___flmul+2)& (0+255),b
  9651  001748  0E00               	movlw	0
  9652  00174A  6FBB               	movwf	(?___flmul+3)& (0+255),b
  9653                           
  9654                           ; BSR set to: 0
  9655  00174C  0012               	return	
  9656  00174E                     l1087:
  9657                           
  9658                           ; BSR set to: 0
  9659                           
  9660                           ; BSR set to: 0
  9661  00174E  51BE               	movf	(___flmul@a+2)& (0+255),w,b
  9662  001750  03B8               	mulwf	___flmul@b& (0+255),b
  9663  001752  CFF3 F0CF          	movff	prodl,___flmul@temp
  9664  001756  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9665                           
  9666                           ; BSR set to: 0
  9667  00175A  51CF               	movf	___flmul@temp& (0+255),w,b
  9668  00175C  6FC5               	movwf	___flmul@grs& (0+255),b
  9669  00175E  6BC6               	clrf	(___flmul@grs+1)& (0+255),b
  9670  001760  6BC7               	clrf	(___flmul@grs+2)& (0+255),b
  9671  001762  6BC8               	clrf	(___flmul@grs+3)& (0+255),b
  9672                           
  9673                           ; BSR set to: 0
  9674  001764  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9675  001766  6FCB               	movwf	___flmul@prod& (0+255),b
  9676  001768  6BCC               	clrf	(___flmul@prod+1)& (0+255),b
  9677  00176A  6BCD               	clrf	(___flmul@prod+2)& (0+255),b
  9678  00176C  6BCE               	clrf	(___flmul@prod+3)& (0+255),b
  9679  00176E  51BD               	movf	(___flmul@a+1)& (0+255),w,b
  9680  001770  03B9               	mulwf	(___flmul@b+1)& (0+255),b
  9681  001772  CFF3 F0CF          	movff	prodl,___flmul@temp
  9682  001776  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9683                           
  9684                           ; BSR set to: 0
  9685  00177A  51CF               	movf	___flmul@temp& (0+255),w,b
  9686  00177C  27C5               	addwf	___flmul@grs& (0+255),f,b
  9687  00177E  0E00               	movlw	0
  9688  001780  23C6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9689  001782  23C7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9690  001784  23C8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9691                           
  9692                           ; BSR set to: 0
  9693  001786  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9694  001788  27CB               	addwf	___flmul@prod& (0+255),f,b
  9695  00178A  0E00               	movlw	0
  9696  00178C  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9697  00178E  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9698  001790  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9699  001792  51BC               	movf	___flmul@a& (0+255),w,b
  9700  001794  03BA               	mulwf	(___flmul@b+2)& (0+255),b
  9701  001796  CFF3 F0CF          	movff	prodl,___flmul@temp
  9702  00179A  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9703                           
  9704                           ; BSR set to: 0
  9705  00179E  51CF               	movf	___flmul@temp& (0+255),w,b
  9706  0017A0  27C5               	addwf	___flmul@grs& (0+255),f,b
  9707  0017A2  0E00               	movlw	0
  9708  0017A4  23C6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9709  0017A6  23C7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9710  0017A8  23C8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9711                           
  9712                           ; BSR set to: 0
  9713  0017AA  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9714  0017AC  27CB               	addwf	___flmul@prod& (0+255),f,b
  9715  0017AE  0E00               	movlw	0
  9716  0017B0  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9717  0017B2  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9718  0017B4  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9719                           
  9720                           ; BSR set to: 0
  9721  0017B6  C0C7  F0C8         	movff	___flmul@grs+2,___flmul@grs+3
  9722  0017BA  C0C6  F0C7         	movff	___flmul@grs+1,___flmul@grs+2
  9723  0017BE  C0C5  F0C6         	movff	___flmul@grs,___flmul@grs+1
  9724  0017C2  6BC5               	clrf	___flmul@grs& (0+255),b
  9725                           
  9726                           ; BSR set to: 0
  9727  0017C4  51BC               	movf	___flmul@a& (0+255),w,b
  9728  0017C6  03B9               	mulwf	(___flmul@b+1)& (0+255),b
  9729  0017C8  CFF3 F0CF          	movff	prodl,___flmul@temp
  9730  0017CC  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9731                           
  9732                           ; BSR set to: 0
  9733  0017D0  51CF               	movf	___flmul@temp& (0+255),w,b
  9734  0017D2  27C5               	addwf	___flmul@grs& (0+255),f,b
  9735  0017D4  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9736  0017D6  23C6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9737  0017D8  0E00               	movlw	0
  9738  0017DA  23C7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9739  0017DC  0E00               	movlw	0
  9740  0017DE  23C8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9741                           
  9742                           ; BSR set to: 0
  9743  0017E0  51BD               	movf	(___flmul@a+1)& (0+255),w,b
  9744  0017E2  03B8               	mulwf	___flmul@b& (0+255),b
  9745  0017E4  CFF3 F0CF          	movff	prodl,___flmul@temp
  9746  0017E8  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9747                           
  9748                           ; BSR set to: 0
  9749  0017EC  51CF               	movf	___flmul@temp& (0+255),w,b
  9750  0017EE  27C5               	addwf	___flmul@grs& (0+255),f,b
  9751  0017F0  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9752  0017F2  23C6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9753  0017F4  0E00               	movlw	0
  9754  0017F6  23C7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9755  0017F8  0E00               	movlw	0
  9756  0017FA  23C8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9757                           
  9758                           ; BSR set to: 0
  9759  0017FC  C0C7  F0C8         	movff	___flmul@grs+2,___flmul@grs+3
  9760  001800  C0C6  F0C7         	movff	___flmul@grs+1,___flmul@grs+2
  9761  001804  C0C5  F0C6         	movff	___flmul@grs,___flmul@grs+1
  9762  001808  6BC5               	clrf	___flmul@grs& (0+255),b
  9763  00180A  51BC               	movf	___flmul@a& (0+255),w,b
  9764  00180C  03B8               	mulwf	___flmul@b& (0+255),b
  9765  00180E  CFF3 F0CF          	movff	prodl,___flmul@temp
  9766  001812  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9767                           
  9768                           ; BSR set to: 0
  9769  001816  51CF               	movf	___flmul@temp& (0+255),w,b
  9770  001818  27C5               	addwf	___flmul@grs& (0+255),f,b
  9771  00181A  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9772  00181C  23C6               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9773  00181E  0E00               	movlw	0
  9774  001820  23C7               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9775  001822  0E00               	movlw	0
  9776  001824  23C8               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9777                           
  9778                           ; BSR set to: 0
  9779  001826  51BE               	movf	(___flmul@a+2)& (0+255),w,b
  9780  001828  03B9               	mulwf	(___flmul@b+1)& (0+255),b
  9781  00182A  CFF3 F0CF          	movff	prodl,___flmul@temp
  9782  00182E  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9783  001832  51CF               	movf	___flmul@temp& (0+255),w,b
  9784  001834  27CB               	addwf	___flmul@prod& (0+255),f,b
  9785  001836  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9786  001838  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9787  00183A  0E00               	movlw	0
  9788  00183C  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9789  00183E  0E00               	movlw	0
  9790  001840  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9791                           
  9792                           ; BSR set to: 0
  9793  001842  51BD               	movf	(___flmul@a+1)& (0+255),w,b
  9794  001844  03BA               	mulwf	(___flmul@b+2)& (0+255),b
  9795  001846  CFF3 F0CF          	movff	prodl,___flmul@temp
  9796  00184A  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9797                           
  9798                           ; BSR set to: 0
  9799  00184E  51CF               	movf	___flmul@temp& (0+255),w,b
  9800  001850  27CB               	addwf	___flmul@prod& (0+255),f,b
  9801  001852  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9802  001854  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9803  001856  0E00               	movlw	0
  9804  001858  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9805  00185A  0E00               	movlw	0
  9806  00185C  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9807  00185E  51BE               	movf	(___flmul@a+2)& (0+255),w,b
  9808  001860  03BA               	mulwf	(___flmul@b+2)& (0+255),b
  9809  001862  CFF3 F0CF          	movff	prodl,___flmul@temp
  9810  001866  CFF4 F0D0          	movff	prodh,___flmul@temp+1
  9811                           
  9812                           ; BSR set to: 0
  9813  00186A  51CF               	movf	___flmul@temp& (0+255),w,b
  9814  00186C  6FC0               	movwf	??___flmul& (0+255),b
  9815  00186E  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
  9816  001870  6FC1               	movwf	(??___flmul+1)& (0+255),b
  9817  001872  6BC2               	clrf	(??___flmul+2)& (0+255),b
  9818  001874  6BC3               	clrf	(??___flmul+3)& (0+255),b
  9819  001876  C0C2  F0C3         	movff	??___flmul+2,??___flmul+3
  9820  00187A  C0C1  F0C2         	movff	??___flmul+1,??___flmul+2
  9821  00187E  C0C0  F0C1         	movff	??___flmul,??___flmul+1
  9822  001882  6BC0               	clrf	??___flmul& (0+255),b
  9823  001884  51C0               	movf	??___flmul& (0+255),w,b
  9824  001886  27CB               	addwf	___flmul@prod& (0+255),f,b
  9825  001888  51C1               	movf	(??___flmul+1)& (0+255),w,b
  9826  00188A  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9827  00188C  51C2               	movf	(??___flmul+2)& (0+255),w,b
  9828  00188E  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9829  001890  51C3               	movf	(??___flmul+3)& (0+255),w,b
  9830  001892  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9831                           
  9832                           ; BSR set to: 0
  9833  001894  C0C5  F0C0         	movff	___flmul@grs,??___flmul
  9834  001898  C0C6  F0C1         	movff	___flmul@grs+1,??___flmul+1
  9835  00189C  C0C7  F0C2         	movff	___flmul@grs+2,??___flmul+2
  9836  0018A0  C0C8  F0C3         	movff	___flmul@grs+3,??___flmul+3
  9837  0018A4  0E19               	movlw	25
  9838  0018A6  D005               	goto	u4420
  9839  0018A8                     u4425:
  9840  0018A8  90D8               	bcf	status,0,c
  9841  0018AA  33C3               	rrcf	(??___flmul+3)& (0+255),f,b
  9842  0018AC  33C2               	rrcf	(??___flmul+2)& (0+255),f,b
  9843  0018AE  33C1               	rrcf	(??___flmul+1)& (0+255),f,b
  9844  0018B0  33C0               	rrcf	??___flmul& (0+255),f,b
  9845  0018B2                     u4420:
  9846  0018B2  2EE8               	decfsz	wreg,f,c
  9847  0018B4  D7F9               	goto	u4425
  9848  0018B6  51C0               	movf	??___flmul& (0+255),w,b
  9849  0018B8  27CB               	addwf	___flmul@prod& (0+255),f,b
  9850  0018BA  51C1               	movf	(??___flmul+1)& (0+255),w,b
  9851  0018BC  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9852  0018BE  51C2               	movf	(??___flmul+2)& (0+255),w,b
  9853  0018C0  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9854  0018C2  51C3               	movf	(??___flmul+3)& (0+255),w,b
  9855  0018C4  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9856                           
  9857                           ; BSR set to: 0
  9858  0018C6  C0C7  F0C8         	movff	___flmul@grs+2,___flmul@grs+3
  9859  0018CA  C0C6  F0C7         	movff	___flmul@grs+1,___flmul@grs+2
  9860  0018CE  C0C5  F0C6         	movff	___flmul@grs,___flmul@grs+1
  9861  0018D2  6BC5               	clrf	___flmul@grs& (0+255),b
  9862                           
  9863                           ; BSR set to: 0
  9864  0018D4  51C9               	movf	___flmul@aexp& (0+255),w,b
  9865  0018D6  C0CA  F0C0         	movff	___flmul@bexp,??___flmul
  9866  0018DA  6BC1               	clrf	(??___flmul+1)& (0+255),b
  9867  0018DC  27C0               	addwf	??___flmul& (0+255),f,b
  9868  0018DE  0E00               	movlw	0
  9869  0018E0  23C1               	addwfc	(??___flmul+1)& (0+255),f,b
  9870  0018E2  0E82               	movlw	130
  9871  0018E4  25C0               	addwf	??___flmul& (0+255),w,b
  9872  0018E6  6FCF               	movwf	___flmul@temp& (0+255),b
  9873  0018E8  0EFF               	movlw	255
  9874  0018EA  21C1               	addwfc	(??___flmul+1)& (0+255),w,b
  9875  0018EC  6FD0               	movwf	(___flmul@temp+1)& (0+255),b
  9876  0018EE  D00F               	goto	l1091
  9877  0018F0                     
  9878                           ; BSR set to: 0
  9879                           
  9880                           ; BSR set to: 0
  9881  0018F0  90D8               	bcf	status,0,c
  9882  0018F2  37CB               	rlcf	___flmul@prod& (0+255),f,b
  9883  0018F4  37CC               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9884  0018F6  37CD               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9885  0018F8  37CE               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9886                           
  9887                           ; BSR set to: 0
  9888  0018FA  BFC8               	btfsc	(___flmul@grs+3)& (0+255),7,b
  9889                           
  9890                           ; BSR set to: 0
  9891  0018FC  81CB               	bsf	___flmul@prod& (0+255),0,b
  9892                           
  9893                           ; BSR set to: 0
  9894  0018FE  90D8               	bcf	status,0,c
  9895  001900  37C5               	rlcf	___flmul@grs& (0+255),f,b
  9896  001902  37C6               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9897  001904  37C7               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9898  001906  37C8               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9899  001908  07CF               	decf	___flmul@temp& (0+255),f,b
  9900  00190A  A0D8               	btfss	status,0,c
  9901  00190C  07D0               	decf	(___flmul@temp+1)& (0+255),f,b
  9902  00190E                     l1091:
  9903                           
  9904                           ; BSR set to: 0
  9905                           
  9906                           ; BSR set to: 0
  9907  00190E  AFCD               	btfss	(___flmul@prod+2)& (0+255),7,b
  9908  001910  D7EF               	goto	l1092
  9909                           
  9910                           ; BSR set to: 0
  9911                           
  9912                           ; BSR set to: 0
  9913  001912  0E00               	movlw	0
  9914  001914  6FC9               	movwf	___flmul@aexp& (0+255),b
  9915                           
  9916                           ; BSR set to: 0
  9917  001916  AFC8               	btfss	(___flmul@grs+3)& (0+255),7,b
  9918  001918  D016               	goto	l1098
  9919                           
  9920                           ; BSR set to: 0
  9921  00191A  0EFF               	movlw	255
  9922  00191C  15C5               	andwf	___flmul@grs& (0+255),w,b
  9923  00191E  6FC0               	movwf	??___flmul& (0+255),b
  9924  001920  0EFF               	movlw	255
  9925  001922  15C6               	andwf	(___flmul@grs+1)& (0+255),w,b
  9926  001924  6FC1               	movwf	(??___flmul+1)& (0+255),b
  9927  001926  0EFF               	movlw	255
  9928  001928  15C7               	andwf	(___flmul@grs+2)& (0+255),w,b
  9929  00192A  6FC2               	movwf	(??___flmul+2)& (0+255),b
  9930  00192C  0E7F               	movlw	127
  9931  00192E  15C8               	andwf	(___flmul@grs+3)& (0+255),w,b
  9932  001930  6FC3               	movwf	(??___flmul+3)& (0+255),b
  9933  001932  51C0               	movf	??___flmul& (0+255),w,b
  9934  001934  11C1               	iorwf	(??___flmul+1)& (0+255),w,b
  9935  001936  11C2               	iorwf	(??___flmul+2)& (0+255),w,b
  9936  001938  11C3               	iorwf	(??___flmul+3)& (0+255),w,b
  9937  00193A  A4D8               	btfss	status,2,c
  9938  00193C  D002               	goto	u4470
  9939                           
  9940                           ; BSR set to: 0
  9941                           
  9942                           ; BSR set to: 0
  9943  00193E  A1CB               	btfss	___flmul@prod& (0+255),0,b
  9944  001940  D002               	goto	l1098
  9945  001942                     u4470:
  9946                           
  9947                           ; BSR set to: 0
  9948  001942  0E01               	movlw	1
  9949  001944  6FC9               	movwf	___flmul@aexp& (0+255),b
  9950  001946                     l1098:
  9951                           
  9952                           ; BSR set to: 0
  9953                           
  9954                           ; BSR set to: 0
  9955                           
  9956                           ; BSR set to: 0
  9957  001946  51C9               	movf	___flmul@aexp& (0+255),w,b
  9958  001948  B4D8               	btfsc	status,2,c
  9959  00194A  D01F               	goto	l1100
  9960                           
  9961                           ; BSR set to: 0
  9962  00194C  0E01               	movlw	1
  9963  00194E  27CB               	addwf	___flmul@prod& (0+255),f,b
  9964  001950  0E00               	movlw	0
  9965  001952  23CC               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9966  001954  23CD               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9967  001956  23CE               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9968                           
  9969                           ; BSR set to: 0
  9970  001958  A1CE               	btfss	(___flmul@prod+3)& (0+255),0,b
  9971  00195A  D017               	goto	l1100
  9972                           
  9973                           ; BSR set to: 0
  9974  00195C  C0CB  F0C0         	movff	___flmul@prod,??___flmul
  9975  001960  C0CC  F0C1         	movff	___flmul@prod+1,??___flmul+1
  9976  001964  C0CD  F0C2         	movff	___flmul@prod+2,??___flmul+2
  9977  001968  C0CE  F0C3         	movff	___flmul@prod+3,??___flmul+3
  9978  00196C  35C3               	rlcf	(??___flmul+3)& (0+255),w,b
  9979  00196E  33C3               	rrcf	(??___flmul+3)& (0+255),f,b
  9980  001970  33C2               	rrcf	(??___flmul+2)& (0+255),f,b
  9981  001972  33C1               	rrcf	(??___flmul+1)& (0+255),f,b
  9982  001974  33C0               	rrcf	??___flmul& (0+255),f,b
  9983  001976  C0C0  F0CB         	movff	??___flmul,___flmul@prod
  9984  00197A  C0C1  F0CC         	movff	??___flmul+1,___flmul@prod+1
  9985  00197E  C0C2  F0CD         	movff	??___flmul+2,___flmul@prod+2
  9986  001982  C0C3  F0CE         	movff	??___flmul+3,___flmul@prod+3
  9987                           
  9988                           ; BSR set to: 0
  9989  001986  4BCF               	infsnz	___flmul@temp& (0+255),f,b
  9990  001988  2BD0               	incf	(___flmul@temp+1)& (0+255),f,b
  9991  00198A                     l1100:
  9992                           
  9993                           ; BSR set to: 0
  9994                           
  9995                           ; BSR set to: 0
  9996                           
  9997                           ; BSR set to: 0
  9998  00198A  BFD0               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9999  00198C  D00D               	goto	l1101
 10000  00198E  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
 10001  001990  E103               	bnz	u4500
 10002  001992  29CF               	incf	___flmul@temp& (0+255),w,b
 10003  001994  A0D8               	btfss	status,0,c
 10004  001996  D008               	goto	l1101
 10005  001998                     u4500:
 10006                           
 10007                           ; BSR set to: 0
 10008  001998  0E00               	movlw	0
 10009  00199A  6FCB               	movwf	___flmul@prod& (0+255),b
 10010  00199C  0E00               	movlw	0
 10011  00199E  6FCC               	movwf	(___flmul@prod+1)& (0+255),b
 10012  0019A0  0E80               	movlw	128
 10013  0019A2  6FCD               	movwf	(___flmul@prod+2)& (0+255),b
 10014  0019A4  0E7F               	movlw	127
 10015  0019A6  D020               	goto	L11
 10016  0019A8                     l1101:
 10017                           
 10018                           ; BSR set to: 0
 10019                           
 10020                           ; BSR set to: 0
 10021  0019A8  BFD0               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10022  0019AA  D005               	goto	u4510
 10023  0019AC  51D0               	movf	(___flmul@temp+1)& (0+255),w,b
 10024  0019AE  E10E               	bnz	l1103
 10025  0019B0  05CF               	decf	___flmul@temp& (0+255),w,b
 10026  0019B2  B0D8               	btfsc	status,0,c
 10027  0019B4  D00B               	goto	l1103
 10028  0019B6                     u4510:
 10029                           
 10030                           ; BSR set to: 0
 10031  0019B6  0E00               	movlw	0
 10032  0019B8  6FCB               	movwf	___flmul@prod& (0+255),b
 10033  0019BA  0E00               	movlw	0
 10034  0019BC  6FCC               	movwf	(___flmul@prod+1)& (0+255),b
 10035  0019BE  0E00               	movlw	0
 10036  0019C0  6FCD               	movwf	(___flmul@prod+2)& (0+255),b
 10037  0019C2  0E00               	movlw	0
 10038  0019C4  6FCE               	movwf	(___flmul@prod+3)& (0+255),b
 10039  0019C6  0E00               	movlw	0
 10040  0019C8  6FC4               	movwf	___flmul@sign& (0+255),b
 10041  0019CA  D00F               	goto	l1104
 10042  0019CC                     l1103:
 10043                           
 10044                           ; BSR set to: 0
 10045  0019CC  C0CF  F0CA         	movff	___flmul@temp,___flmul@bexp
 10046                           
 10047                           ; BSR set to: 0
 10048  0019D0  0EFF               	movlw	255
 10049  0019D2  17CB               	andwf	___flmul@prod& (0+255),f,b
 10050  0019D4  0EFF               	movlw	255
 10051  0019D6  17CC               	andwf	(___flmul@prod+1)& (0+255),f,b
 10052  0019D8  0E7F               	movlw	127
 10053  0019DA  17CD               	andwf	(___flmul@prod+2)& (0+255),f,b
 10054  0019DC  0E00               	movlw	0
 10055  0019DE  17CE               	andwf	(___flmul@prod+3)& (0+255),f,b
 10056                           
 10057                           ; BSR set to: 0
 10058  0019E0  B1CA               	btfsc	___flmul@bexp& (0+255),0,b
 10059                           
 10060                           ; BSR set to: 0
 10061  0019E2  8FCD               	bsf	(___flmul@prod+2)& (0+255),7,b
 10062                           
 10063                           ; BSR set to: 0
 10064                           
 10065                           ; BSR set to: 0
 10066  0019E4  90D8               	bcf	status,0,c
 10067  0019E6  31CA               	rrcf	___flmul@bexp& (0+255),w,b
 10068  0019E8                     L11:
 10069  0019E8  6FCE               	movwf	(___flmul@prod+3)& (0+255),b
 10070  0019EA                     l1104:
 10071                           
 10072                           ; BSR set to: 0
 10073                           
 10074                           ; BSR set to: 0
 10075                           
 10076                           ; BSR set to: 0
 10077  0019EA  51C4               	movf	___flmul@sign& (0+255),w,b
 10078  0019EC  13CE               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10079                           
 10080                           ; BSR set to: 0
 10081  0019EE  C0CB  F0B8         	movff	___flmul@prod,?___flmul
 10082  0019F2  C0CC  F0B9         	movff	___flmul@prod+1,?___flmul+1
 10083  0019F6  C0CD  F0BA         	movff	___flmul@prod+2,?___flmul+2
 10084  0019FA  C0CE  F0BB         	movff	___flmul@prod+3,?___flmul+3
 10085  0019FE  0012               	return	
 10086  001A00                     __end_of___flmul:
 10087                           	opt stack 0
 10088                           tblptru	equ	0xFF8
 10089                           tblptrh	equ	0xFF7
 10090                           tblptrl	equ	0xFF6
 10091                           tablat	equ	0xFF5
 10092                           prodh	equ	0xFF4
 10093                           prodl	equ	0xFF3
 10094                           intcon	equ	0xFF2
 10095                           intcon2	equ	0xFF1
 10096                           intcon3	equ	0xFF0
 10097                           indf0	equ	0xFEF
 10098                           postinc0	equ	0xFEE
 10099                           fsr0h	equ	0xFEA
 10100                           fsr0l	equ	0xFE9
 10101                           wreg	equ	0xFE8
 10102                           postdec1	equ	0xFE5
 10103                           fsr1l	equ	0xFE1
 10104                           indf2	equ	0xFDF
 10105                           postinc2	equ	0xFDE
 10106                           postdec2	equ	0xFDD
 10107                           fsr2h	equ	0xFDA
 10108                           fsr2l	equ	0xFD9
 10109                           status	equ	0xFD8
 10110                           
 10111 ;; *************** function ___fldiv *****************
 10112 ;; Defined at:
 10113 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  b               4   20[BANK0 ] unsigned char 
 10116 ;;  a               4   24[BANK0 ] unsigned char 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  grs             4   39[BANK0 ] unsigned long 
 10119 ;;  rem             4   33[BANK0 ] unsigned long 
 10120 ;;  new_exp         2   37[BANK0 ] int 
 10121 ;;  aexp            1   44[BANK0 ] unsigned char 
 10122 ;;  bexp            1   43[BANK0 ] unsigned char 
 10123 ;;  sign            1   32[BANK0 ] unsigned char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  4   20[BANK0 ] unsigned char 
 10126 ;; Registers used:
 10127 ;;		wreg, status,2, status,0
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10133 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10134 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;Total ram usage:       25 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    3
 10140 ;; This function calls:
 10141 ;;		Nothing
 10142 ;; This function is called by:
 10143 ;;		_read_adc_voltage
 10144 ;;		_set_pwm1_percent
 10145 ;;		_autoCool
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text28
 10150  00298A                     __ptext28:
 10151                           	opt stack 0
 10152  00298A                     ___fldiv:
 10153                           	opt stack 26
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;incstack = 0
 10157  00298A  0100               	movlb	0	; () banked
 10158  00298C  5197               	movf	(___fldiv@b+3)& (0+255),w,b
 10159  00298E  0B80               	andlw	128
 10160  002990  6FA0               	movwf	___fldiv@sign& (0+255),b
 10161  002992  5197               	movf	(___fldiv@b+3)& (0+255),w,b
 10162  002994  2597               	addwf	(___fldiv@b+3)& (0+255),w,b
 10163  002996  6FAB               	movwf	___fldiv@bexp& (0+255),b
 10164                           
 10165                           ; BSR set to: 0
 10166  002998  BF96               	btfsc	(___fldiv@b+2)& (0+255),7,b
 10167                           
 10168                           ; BSR set to: 0
 10169  00299A  81AB               	bsf	___fldiv@bexp& (0+255),0,b
 10170                           
 10171                           ; BSR set to: 0
 10172                           
 10173                           ; BSR set to: 0
 10174  00299C  51AB               	movf	___fldiv@bexp& (0+255),w,b
 10175  00299E  B4D8               	btfsc	status,2,c
 10176  0029A0  D00D               	goto	l1046
 10177                           
 10178                           ; BSR set to: 0
 10179  0029A2  29AB               	incf	___fldiv@bexp& (0+255),w,b
 10180  0029A4  A4D8               	btfss	status,2,c
 10181  0029A6  D008               	goto	l1047
 10182                           
 10183                           ; BSR set to: 0
 10184  0029A8  0E00               	movlw	0
 10185  0029AA  6F94               	movwf	___fldiv@b& (0+255),b
 10186  0029AC  0E00               	movlw	0
 10187  0029AE  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10188  0029B0  0E00               	movlw	0
 10189  0029B2  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10190  0029B4  0E00               	movlw	0
 10191  0029B6  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10192  0029B8                     l1047:
 10193                           
 10194                           ; BSR set to: 0
 10195                           
 10196                           ; BSR set to: 0
 10197  0029B8  8F96               	bsf	(___fldiv@b+2)& (0+255),7,b
 10198  0029BA  D006               	goto	L12
 10199  0029BC                     l1046:
 10200                           
 10201                           ; BSR set to: 0
 10202                           
 10203                           ; BSR set to: 0
 10204  0029BC  0E00               	movlw	0
 10205  0029BE  6F94               	movwf	___fldiv@b& (0+255),b
 10206  0029C0  0E00               	movlw	0
 10207  0029C2  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10208  0029C4  0E00               	movlw	0
 10209  0029C6  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10210  0029C8                     L12:
 10211  0029C8  0E00               	movlw	0
 10212  0029CA  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10213                           
 10214                           ; BSR set to: 0
 10215                           
 10216                           ; BSR set to: 0
 10217  0029CC  519B               	movf	(___fldiv@a+3)& (0+255),w,b
 10218  0029CE  0B80               	andlw	128
 10219  0029D0  1BA0               	xorwf	___fldiv@sign& (0+255),f,b
 10220                           
 10221                           ; BSR set to: 0
 10222  0029D2  519B               	movf	(___fldiv@a+3)& (0+255),w,b
 10223  0029D4  259B               	addwf	(___fldiv@a+3)& (0+255),w,b
 10224  0029D6  6FAC               	movwf	___fldiv@aexp& (0+255),b
 10225                           
 10226                           ; BSR set to: 0
 10227  0029D8  BF9A               	btfsc	(___fldiv@a+2)& (0+255),7,b
 10228                           
 10229                           ; BSR set to: 0
 10230  0029DA  81AC               	bsf	___fldiv@aexp& (0+255),0,b
 10231                           
 10232                           ; BSR set to: 0
 10233                           
 10234                           ; BSR set to: 0
 10235  0029DC  51AC               	movf	___fldiv@aexp& (0+255),w,b
 10236  0029DE  B4D8               	btfsc	status,2,c
 10237  0029E0  D00D               	goto	l1050
 10238                           
 10239                           ; BSR set to: 0
 10240  0029E2  29AC               	incf	___fldiv@aexp& (0+255),w,b
 10241  0029E4  A4D8               	btfss	status,2,c
 10242  0029E6  D008               	goto	l1051
 10243                           
 10244                           ; BSR set to: 0
 10245  0029E8  0E00               	movlw	0
 10246  0029EA  6F98               	movwf	___fldiv@a& (0+255),b
 10247  0029EC  0E00               	movlw	0
 10248  0029EE  6F99               	movwf	(___fldiv@a+1)& (0+255),b
 10249  0029F0  0E00               	movlw	0
 10250  0029F2  6F9A               	movwf	(___fldiv@a+2)& (0+255),b
 10251  0029F4  0E00               	movlw	0
 10252  0029F6  6F9B               	movwf	(___fldiv@a+3)& (0+255),b
 10253  0029F8                     l1051:
 10254                           
 10255                           ; BSR set to: 0
 10256                           
 10257                           ; BSR set to: 0
 10258  0029F8  8F9A               	bsf	(___fldiv@a+2)& (0+255),7,b
 10259  0029FA  D006               	goto	L13
 10260  0029FC                     l1050:
 10261                           
 10262                           ; BSR set to: 0
 10263                           
 10264                           ; BSR set to: 0
 10265  0029FC  0E00               	movlw	0
 10266  0029FE  6F98               	movwf	___fldiv@a& (0+255),b
 10267  002A00  0E00               	movlw	0
 10268  002A02  6F99               	movwf	(___fldiv@a+1)& (0+255),b
 10269  002A04  0E00               	movlw	0
 10270  002A06  6F9A               	movwf	(___fldiv@a+2)& (0+255),b
 10271  002A08                     L13:
 10272  002A08  0E00               	movlw	0
 10273  002A0A  6F9B               	movwf	(___fldiv@a+3)& (0+255),b
 10274                           
 10275                           ; BSR set to: 0
 10276                           
 10277                           ; BSR set to: 0
 10278  002A0C  5198               	movf	___fldiv@a& (0+255),w,b
 10279  002A0E  1199               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10280  002A10  119A               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10281  002A12  119B               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10282  002A14  A4D8               	btfss	status,2,c
 10283  002A16  D015               	goto	l1053
 10284                           
 10285                           ; BSR set to: 0
 10286  002A18  0E00               	movlw	0
 10287  002A1A  6F94               	movwf	___fldiv@b& (0+255),b
 10288  002A1C  0E00               	movlw	0
 10289  002A1E  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10290  002A20  0E00               	movlw	0
 10291  002A22  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10292  002A24  0E00               	movlw	0
 10293  002A26  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10294                           
 10295                           ; BSR set to: 0
 10296  002A28  0E80               	movlw	128
 10297  002A2A  1396               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10298  002A2C  0E7F               	movlw	127
 10299  002A2E  1397               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10300                           
 10301                           ; BSR set to: 0
 10302  002A30  C094  F094         	movff	___fldiv@b,?___fldiv
 10303  002A34  C095  F095         	movff	___fldiv@b+1,?___fldiv+1
 10304  002A38  C096  F096         	movff	___fldiv@b+2,?___fldiv+2
 10305  002A3C  C097  F097         	movff	___fldiv@b+3,?___fldiv+3
 10306                           
 10307                           ; BSR set to: 0
 10308  002A40  0012               	return	
 10309  002A42                     l1053:
 10310                           
 10311                           ; BSR set to: 0
 10312                           
 10313                           ; BSR set to: 0
 10314  002A42  51AB               	movf	___fldiv@bexp& (0+255),w,b
 10315  002A44  A4D8               	btfss	status,2,c
 10316  002A46  D011               	goto	l1055
 10317                           
 10318                           ; BSR set to: 0
 10319  002A48  0E00               	movlw	0
 10320  002A4A  6F94               	movwf	___fldiv@b& (0+255),b
 10321  002A4C  0E00               	movlw	0
 10322  002A4E  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10323  002A50  0E00               	movlw	0
 10324  002A52  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10325  002A54  0E00               	movlw	0
 10326  002A56  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10327                           
 10328                           ; BSR set to: 0
 10329  002A58  C094  F094         	movff	___fldiv@b,?___fldiv
 10330  002A5C  C095  F095         	movff	___fldiv@b+1,?___fldiv+1
 10331  002A60  C096  F096         	movff	___fldiv@b+2,?___fldiv+2
 10332  002A64  C097  F097         	movff	___fldiv@b+3,?___fldiv+3
 10333                           
 10334                           ; BSR set to: 0
 10335  002A68  0012               	return	
 10336  002A6A                     l1055:
 10337                           
 10338                           ; BSR set to: 0
 10339                           
 10340                           ; BSR set to: 0
 10341  002A6A  51AC               	movf	___fldiv@aexp& (0+255),w,b
 10342  002A6C  6F9C               	movwf	??___fldiv& (0+255),b
 10343  002A6E  6B9D               	clrf	(??___fldiv+1)& (0+255),b
 10344  002A70  1F9C               	comf	??___fldiv& (0+255),f,b
 10345  002A72  1F9D               	comf	(??___fldiv+1)& (0+255),f,b
 10346  002A74  4B9C               	infsnz	??___fldiv& (0+255),f,b
 10347  002A76  2B9D               	incf	(??___fldiv+1)& (0+255),f,b
 10348  002A78  51AB               	movf	___fldiv@bexp& (0+255),w,b
 10349  002A7A  6F9E               	movwf	(??___fldiv+2)& (0+255),b
 10350  002A7C  6B9F               	clrf	(??___fldiv+3)& (0+255),b
 10351  002A7E  519C               	movf	??___fldiv& (0+255),w,b
 10352  002A80  279E               	addwf	(??___fldiv+2)& (0+255),f,b
 10353  002A82  519D               	movf	(??___fldiv+1)& (0+255),w,b
 10354  002A84  239F               	addwfc	(??___fldiv+3)& (0+255),f,b
 10355  002A86  0E7F               	movlw	127
 10356  002A88  259E               	addwf	(??___fldiv+2)& (0+255),w,b
 10357  002A8A  6FA5               	movwf	___fldiv@new_exp& (0+255),b
 10358  002A8C  0E00               	movlw	0
 10359  002A8E  219F               	addwfc	(??___fldiv+3)& (0+255),w,b
 10360  002A90  6FA6               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363  002A92  C094  F0A1         	movff	___fldiv@b,___fldiv@rem
 10364  002A96  C095  F0A2         	movff	___fldiv@b+1,___fldiv@rem+1
 10365  002A9A  C096  F0A3         	movff	___fldiv@b+2,___fldiv@rem+2
 10366  002A9E  C097  F0A4         	movff	___fldiv@b+3,___fldiv@rem+3
 10367                           
 10368                           ; BSR set to: 0
 10369  002AA2  0E00               	movlw	0
 10370  002AA4  6F94               	movwf	___fldiv@b& (0+255),b
 10371  002AA6  0E00               	movlw	0
 10372  002AA8  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10373  002AAA  0E00               	movlw	0
 10374  002AAC  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10375  002AAE  0E00               	movlw	0
 10376  002AB0  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10377                           
 10378                           ; BSR set to: 0
 10379  002AB2  0E00               	movlw	0
 10380  002AB4  6FA7               	movwf	___fldiv@grs& (0+255),b
 10381  002AB6  0E00               	movlw	0
 10382  002AB8  6FA8               	movwf	(___fldiv@grs+1)& (0+255),b
 10383  002ABA  0E00               	movlw	0
 10384  002ABC  6FA9               	movwf	(___fldiv@grs+2)& (0+255),b
 10385  002ABE  0E00               	movlw	0
 10386  002AC0  6FAA               	movwf	(___fldiv@grs+3)& (0+255),b
 10387                           
 10388                           ; BSR set to: 0
 10389  002AC2  0E00               	movlw	0
 10390  002AC4  6FAC               	movwf	___fldiv@aexp& (0+255),b
 10391  002AC6  D028               	goto	l1056
 10392  002AC8                     
 10393                           ; BSR set to: 0
 10394                           
 10395                           ; BSR set to: 0
 10396  002AC8  51AC               	movf	___fldiv@aexp& (0+255),w,b
 10397  002ACA  B4D8               	btfsc	status,2,c
 10398  002ACC  D011               	goto	l1058
 10399                           
 10400                           ; BSR set to: 0
 10401  002ACE  90D8               	bcf	status,0,c
 10402  002AD0  37A1               	rlcf	___fldiv@rem& (0+255),f,b
 10403  002AD2  37A2               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10404  002AD4  37A3               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10405  002AD6  37A4               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10406  002AD8  90D8               	bcf	status,0,c
 10407  002ADA  3794               	rlcf	___fldiv@b& (0+255),f,b
 10408  002ADC  3795               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10409  002ADE  3796               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10410  002AE0  3797               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10411                           
 10412                           ; BSR set to: 0
 10413  002AE2  BFAA               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 10414                           
 10415                           ; BSR set to: 0
 10416  002AE4  8194               	bsf	___fldiv@b& (0+255),0,b
 10417                           
 10418                           ; BSR set to: 0
 10419  002AE6  90D8               	bcf	status,0,c
 10420  002AE8  37A7               	rlcf	___fldiv@grs& (0+255),f,b
 10421  002AEA  37A8               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10422  002AEC  37A9               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10423  002AEE  37AA               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10424  002AF0                     l1058:
 10425                           
 10426                           ; BSR set to: 0
 10427                           
 10428                           ; BSR set to: 0
 10429  002AF0  5198               	movf	___fldiv@a& (0+255),w,b
 10430  002AF2  5DA1               	subwf	___fldiv@rem& (0+255),w,b
 10431  002AF4  5199               	movf	(___fldiv@a+1)& (0+255),w,b
 10432  002AF6  59A2               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10433  002AF8  519A               	movf	(___fldiv@a+2)& (0+255),w,b
 10434  002AFA  59A3               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10435  002AFC  519B               	movf	(___fldiv@a+3)& (0+255),w,b
 10436  002AFE  59A4               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10437  002B00  A0D8               	btfss	status,0,c
 10438  002B02  D009               	goto	l1060
 10439                           
 10440                           ; BSR set to: 0
 10441  002B04  8DAA               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10442                           
 10443                           ; BSR set to: 0
 10444  002B06  5198               	movf	___fldiv@a& (0+255),w,b
 10445  002B08  5FA1               	subwf	___fldiv@rem& (0+255),f,b
 10446  002B0A  5199               	movf	(___fldiv@a+1)& (0+255),w,b
 10447  002B0C  5BA2               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10448  002B0E  519A               	movf	(___fldiv@a+2)& (0+255),w,b
 10449  002B10  5BA3               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10450  002B12  519B               	movf	(___fldiv@a+3)& (0+255),w,b
 10451  002B14  5BA4               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10452  002B16                     l1060:
 10453                           
 10454                           ; BSR set to: 0
 10455                           
 10456                           ; BSR set to: 0
 10457  002B16  2BAC               	incf	___fldiv@aexp& (0+255),f,b
 10458  002B18                     l1056:
 10459                           
 10460                           ; BSR set to: 0
 10461  002B18  0E19               	movlw	25
 10462  002B1A  65AC               	cpfsgt	___fldiv@aexp& (0+255),b
 10463  002B1C  D7D5               	goto	l1057
 10464                           
 10465                           ; BSR set to: 0
 10466                           
 10467                           ; BSR set to: 0
 10468  002B1E  51A1               	movf	___fldiv@rem& (0+255),w,b
 10469  002B20  11A2               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10470  002B22  11A3               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10471  002B24  11A4               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10472  002B26  B4D8               	btfsc	status,2,c
 10473  002B28  D011               	goto	l1063
 10474                           
 10475                           ; BSR set to: 0
 10476  002B2A  81A7               	bsf	___fldiv@grs& (0+255),0,b
 10477                           
 10478                           ; BSR set to: 0
 10479  002B2C  D00F               	goto	l1063
 10480  002B2E                     
 10481                           ; BSR set to: 0
 10482                           
 10483                           ; BSR set to: 0
 10484  002B2E  90D8               	bcf	status,0,c
 10485  002B30  3794               	rlcf	___fldiv@b& (0+255),f,b
 10486  002B32  3795               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10487  002B34  3796               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10488  002B36  3797               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10489                           
 10490                           ; BSR set to: 0
 10491  002B38  BFAA               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 10492                           
 10493                           ; BSR set to: 0
 10494  002B3A  8194               	bsf	___fldiv@b& (0+255),0,b
 10495                           
 10496                           ; BSR set to: 0
 10497  002B3C  90D8               	bcf	status,0,c
 10498  002B3E  37A7               	rlcf	___fldiv@grs& (0+255),f,b
 10499  002B40  37A8               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10500  002B42  37A9               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10501  002B44  37AA               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10502  002B46  07A5               	decf	___fldiv@new_exp& (0+255),f,b
 10503  002B48  A0D8               	btfss	status,0,c
 10504  002B4A  07A6               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10505  002B4C                     l1063:
 10506                           
 10507                           ; BSR set to: 0
 10508                           
 10509                           ; BSR set to: 0
 10510  002B4C  AF96               	btfss	(___fldiv@b+2)& (0+255),7,b
 10511  002B4E  D7EF               	goto	l1064
 10512                           
 10513                           ; BSR set to: 0
 10514                           
 10515                           ; BSR set to: 0
 10516  002B50  0E00               	movlw	0
 10517  002B52  6FAC               	movwf	___fldiv@aexp& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520  002B54  AFAA               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10521  002B56  D016               	goto	l1070
 10522                           
 10523                           ; BSR set to: 0
 10524  002B58  0EFF               	movlw	255
 10525  002B5A  15A7               	andwf	___fldiv@grs& (0+255),w,b
 10526  002B5C  6F9C               	movwf	??___fldiv& (0+255),b
 10527  002B5E  0EFF               	movlw	255
 10528  002B60  15A8               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10529  002B62  6F9D               	movwf	(??___fldiv+1)& (0+255),b
 10530  002B64  0EFF               	movlw	255
 10531  002B66  15A9               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10532  002B68  6F9E               	movwf	(??___fldiv+2)& (0+255),b
 10533  002B6A  0E7F               	movlw	127
 10534  002B6C  15AA               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10535  002B6E  6F9F               	movwf	(??___fldiv+3)& (0+255),b
 10536  002B70  519C               	movf	??___fldiv& (0+255),w,b
 10537  002B72  119D               	iorwf	(??___fldiv+1)& (0+255),w,b
 10538  002B74  119E               	iorwf	(??___fldiv+2)& (0+255),w,b
 10539  002B76  119F               	iorwf	(??___fldiv+3)& (0+255),w,b
 10540  002B78  A4D8               	btfss	status,2,c
 10541  002B7A  D002               	goto	u5070
 10542                           
 10543                           ; BSR set to: 0
 10544                           
 10545                           ; BSR set to: 0
 10546  002B7C  A194               	btfss	___fldiv@b& (0+255),0,b
 10547  002B7E  D002               	goto	l1070
 10548  002B80                     u5070:
 10549                           
 10550                           ; BSR set to: 0
 10551  002B80  0E01               	movlw	1
 10552  002B82  6FAC               	movwf	___fldiv@aexp& (0+255),b
 10553  002B84                     l1070:
 10554                           
 10555                           ; BSR set to: 0
 10556                           
 10557                           ; BSR set to: 0
 10558                           
 10559                           ; BSR set to: 0
 10560  002B84  51AC               	movf	___fldiv@aexp& (0+255),w,b
 10561  002B86  B4D8               	btfsc	status,2,c
 10562  002B88  D01F               	goto	l1072
 10563                           
 10564                           ; BSR set to: 0
 10565  002B8A  0E01               	movlw	1
 10566  002B8C  2794               	addwf	___fldiv@b& (0+255),f,b
 10567  002B8E  0E00               	movlw	0
 10568  002B90  2395               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10569  002B92  2396               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10570  002B94  2397               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10571                           
 10572                           ; BSR set to: 0
 10573  002B96  A197               	btfss	(___fldiv@b+3)& (0+255),0,b
 10574  002B98  D017               	goto	l1072
 10575                           
 10576                           ; BSR set to: 0
 10577  002B9A  C094  F09C         	movff	___fldiv@b,??___fldiv
 10578  002B9E  C095  F09D         	movff	___fldiv@b+1,??___fldiv+1
 10579  002BA2  C096  F09E         	movff	___fldiv@b+2,??___fldiv+2
 10580  002BA6  C097  F09F         	movff	___fldiv@b+3,??___fldiv+3
 10581  002BAA  359F               	rlcf	(??___fldiv+3)& (0+255),w,b
 10582  002BAC  339F               	rrcf	(??___fldiv+3)& (0+255),f,b
 10583  002BAE  339E               	rrcf	(??___fldiv+2)& (0+255),f,b
 10584  002BB0  339D               	rrcf	(??___fldiv+1)& (0+255),f,b
 10585  002BB2  339C               	rrcf	??___fldiv& (0+255),f,b
 10586  002BB4  C09C  F094         	movff	??___fldiv,___fldiv@b
 10587  002BB8  C09D  F095         	movff	??___fldiv+1,___fldiv@b+1
 10588  002BBC  C09E  F096         	movff	??___fldiv+2,___fldiv@b+2
 10589  002BC0  C09F  F097         	movff	??___fldiv+3,___fldiv@b+3
 10590                           
 10591                           ; BSR set to: 0
 10592  002BC4  4BA5               	infsnz	___fldiv@new_exp& (0+255),f,b
 10593  002BC6  2BA6               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10594  002BC8                     l1072:
 10595                           
 10596                           ; BSR set to: 0
 10597                           
 10598                           ; BSR set to: 0
 10599                           
 10600                           ; BSR set to: 0
 10601  002BC8  BFA6               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10602  002BCA  D010               	goto	l1073
 10603  002BCC  51A6               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10604  002BCE  E103               	bnz	u5100
 10605  002BD0  29A5               	incf	___fldiv@new_exp& (0+255),w,b
 10606  002BD2  A0D8               	btfss	status,0,c
 10607  002BD4  D00B               	goto	l1073
 10608  002BD6                     u5100:
 10609                           
 10610                           ; BSR set to: 0
 10611  002BD6  0E00               	movlw	0
 10612  002BD8  6FA6               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10613  002BDA  69A5               	setf	___fldiv@new_exp& (0+255),b
 10614  002BDC  0E00               	movlw	0
 10615  002BDE  6F94               	movwf	___fldiv@b& (0+255),b
 10616  002BE0  0E00               	movlw	0
 10617  002BE2  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10618  002BE4  0E00               	movlw	0
 10619  002BE6  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10620  002BE8  0E00               	movlw	0
 10621  002BEA  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10622  002BEC                     l1073:
 10623                           
 10624                           ; BSR set to: 0
 10625                           
 10626                           ; BSR set to: 0
 10627  002BEC  BFA6               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10628  002BEE  D005               	goto	u5110
 10629  002BF0  51A6               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10630  002BF2  E111               	bnz	l4492
 10631  002BF4  05A5               	decf	___fldiv@new_exp& (0+255),w,b
 10632  002BF6  B0D8               	btfsc	status,0,c
 10633  002BF8  D00E               	goto	l1074
 10634  002BFA                     u5110:
 10635                           
 10636                           ; BSR set to: 0
 10637  002BFA  0E00               	movlw	0
 10638  002BFC  6FA6               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10639  002BFE  0E00               	movlw	0
 10640  002C00  6FA5               	movwf	___fldiv@new_exp& (0+255),b
 10641  002C02  0E00               	movlw	0
 10642  002C04  6F94               	movwf	___fldiv@b& (0+255),b
 10643  002C06  0E00               	movlw	0
 10644  002C08  6F95               	movwf	(___fldiv@b+1)& (0+255),b
 10645  002C0A  0E00               	movlw	0
 10646  002C0C  6F96               	movwf	(___fldiv@b+2)& (0+255),b
 10647  002C0E  0E00               	movlw	0
 10648  002C10  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10649  002C12  0E00               	movlw	0
 10650  002C14  6FA0               	movwf	___fldiv@sign& (0+255),b
 10651  002C16                     l1074:
 10652  002C16                     l4492:
 10653                           
 10654                           ; BSR set to: 0
 10655  002C16  C0A5  F0AB         	movff	___fldiv@new_exp,___fldiv@bexp
 10656                           
 10657                           ; BSR set to: 0
 10658  002C1A  A1AB               	btfss	___fldiv@bexp& (0+255),0,b
 10659  002C1C  D002               	goto	l1075
 10660                           
 10661                           ; BSR set to: 0
 10662  002C1E  8F96               	bsf	(___fldiv@b+2)& (0+255),7,b
 10663  002C20  D001               	goto	l1076
 10664  002C22                     l1075:
 10665                           
 10666                           ; BSR set to: 0
 10667                           
 10668                           ; BSR set to: 0
 10669  002C22  9F96               	bcf	(___fldiv@b+2)& (0+255),7,b
 10670  002C24                     l1076:
 10671                           
 10672                           ; BSR set to: 0
 10673                           
 10674                           ; BSR set to: 0
 10675  002C24  90D8               	bcf	status,0,c
 10676  002C26  31AB               	rrcf	___fldiv@bexp& (0+255),w,b
 10677  002C28  6F97               	movwf	(___fldiv@b+3)& (0+255),b
 10678                           
 10679                           ; BSR set to: 0
 10680  002C2A  51A0               	movf	___fldiv@sign& (0+255),w,b
 10681  002C2C  1397               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10682                           
 10683                           ; BSR set to: 0
 10684  002C2E  C094  F094         	movff	___fldiv@b,?___fldiv
 10685  002C32  C095  F095         	movff	___fldiv@b+1,?___fldiv+1
 10686  002C36  C096  F096         	movff	___fldiv@b+2,?___fldiv+2
 10687  002C3A  C097  F097         	movff	___fldiv@b+3,?___fldiv+3
 10688  002C3E  0012               	return	
 10689  002C40                     __end_of___fldiv:
 10690                           	opt stack 0
 10691                           tblptru	equ	0xFF8
 10692                           tblptrh	equ	0xFF7
 10693                           tblptrl	equ	0xFF6
 10694                           tablat	equ	0xFF5
 10695                           prodh	equ	0xFF4
 10696                           prodl	equ	0xFF3
 10697                           intcon	equ	0xFF2
 10698                           intcon2	equ	0xFF1
 10699                           intcon3	equ	0xFF0
 10700                           indf0	equ	0xFEF
 10701                           postinc0	equ	0xFEE
 10702                           fsr0h	equ	0xFEA
 10703                           fsr0l	equ	0xFE9
 10704                           wreg	equ	0xFE8
 10705                           postdec1	equ	0xFE5
 10706                           fsr1l	equ	0xFE1
 10707                           indf2	equ	0xFDF
 10708                           postinc2	equ	0xFDE
 10709                           postdec2	equ	0xFDD
 10710                           fsr2h	equ	0xFDA
 10711                           fsr2l	equ	0xFD9
 10712                           status	equ	0xFD8
 10713                           
 10714 ;; *************** function ___fladd *****************
 10715 ;; Defined at:
 10716 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  b               4   94[BANK0 ] unsigned char 
 10719 ;;  a               4   98[BANK0 ] unsigned char 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  grs             1  113[BANK0 ] unsigned char 
 10722 ;;  bexp            1  112[BANK0 ] unsigned char 
 10723 ;;  aexp            1  111[BANK0 ] unsigned char 
 10724 ;;  signs           1  110[BANK0 ] unsigned char 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  4   94[BANK0 ] unsigned char 
 10727 ;; Registers used:
 10728 ;;		wreg, status,2, status,0
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10734 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10737 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;Total ram usage:       20 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    3
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_set_pwm1_percent
 10745 ;;		_autoCool
 10746 ;;		_autoHeat
 10747 ;;		_main
 10748 ;;		_sprintf
 10749 ;;		___flsub
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text29
 10754  001D50                     __ptext29:
 10755                           	opt stack 0
 10756  001D50                     ___fladd:
 10757                           	opt stack 25
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;incstack = 0
 10761  001D50  0100               	movlb	0	; () banked
 10762  001D52  51E1               	movf	(___fladd@b+3)& (0+255),w,b
 10763  001D54  0B80               	andlw	128
 10764  001D56  6FEE               	movwf	___fladd@signs& (0+255),b
 10765  001D58  51E1               	movf	(___fladd@b+3)& (0+255),w,b
 10766  001D5A  25E1               	addwf	(___fladd@b+3)& (0+255),w,b
 10767  001D5C  6FF0               	movwf	___fladd@bexp& (0+255),b
 10768                           
 10769                           ; BSR set to: 0
 10770  001D5E  BFE0               	btfsc	(___fladd@b+2)& (0+255),7,b
 10771                           
 10772                           ; BSR set to: 0
 10773  001D60  81F0               	bsf	___fladd@bexp& (0+255),0,b
 10774                           
 10775                           ; BSR set to: 0
 10776                           
 10777                           ; BSR set to: 0
 10778  001D62  51F0               	movf	___fladd@bexp& (0+255),w,b
 10779  001D64  B4D8               	btfsc	status,2,c
 10780  001D66  D00D               	goto	l989
 10781                           
 10782                           ; BSR set to: 0
 10783  001D68  29F0               	incf	___fladd@bexp& (0+255),w,b
 10784  001D6A  A4D8               	btfss	status,2,c
 10785  001D6C  D008               	goto	l990
 10786                           
 10787                           ; BSR set to: 0
 10788  001D6E  0E00               	movlw	0
 10789  001D70  6FDE               	movwf	___fladd@b& (0+255),b
 10790  001D72  0E00               	movlw	0
 10791  001D74  6FDF               	movwf	(___fladd@b+1)& (0+255),b
 10792  001D76  0E00               	movlw	0
 10793  001D78  6FE0               	movwf	(___fladd@b+2)& (0+255),b
 10794  001D7A  0E00               	movlw	0
 10795  001D7C  6FE1               	movwf	(___fladd@b+3)& (0+255),b
 10796  001D7E                     l990:
 10797                           
 10798                           ; BSR set to: 0
 10799                           
 10800                           ; BSR set to: 0
 10801  001D7E  8FE0               	bsf	(___fladd@b+2)& (0+255),7,b
 10802  001D80  D006               	goto	L14
 10803  001D82                     l989:
 10804                           
 10805                           ; BSR set to: 0
 10806                           
 10807                           ; BSR set to: 0
 10808  001D82  0E00               	movlw	0
 10809  001D84  6FDE               	movwf	___fladd@b& (0+255),b
 10810  001D86  0E00               	movlw	0
 10811  001D88  6FDF               	movwf	(___fladd@b+1)& (0+255),b
 10812  001D8A  0E00               	movlw	0
 10813  001D8C  6FE0               	movwf	(___fladd@b+2)& (0+255),b
 10814  001D8E                     L14:
 10815  001D8E  0E00               	movlw	0
 10816  001D90  6FE1               	movwf	(___fladd@b+3)& (0+255),b
 10817                           
 10818                           ; BSR set to: 0
 10819                           
 10820                           ; BSR set to: 0
 10821  001D92  51E5               	movf	(___fladd@a+3)& (0+255),w,b
 10822  001D94  0B80               	andlw	128
 10823  001D96  6FEF               	movwf	___fladd@aexp& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826  001D98  51EE               	movf	___fladd@signs& (0+255),w,b
 10827  001D9A  19EF               	xorwf	___fladd@aexp& (0+255),w,b
 10828  001D9C  A4D8               	btfss	status,2,c
 10829                           
 10830                           ; BSR set to: 0
 10831  001D9E  8DEE               	bsf	___fladd@signs& (0+255),6,b
 10832                           
 10833                           ; BSR set to: 0
 10834                           
 10835                           ; BSR set to: 0
 10836  001DA0  51E5               	movf	(___fladd@a+3)& (0+255),w,b
 10837  001DA2  25E5               	addwf	(___fladd@a+3)& (0+255),w,b
 10838  001DA4  6FEF               	movwf	___fladd@aexp& (0+255),b
 10839                           
 10840                           ; BSR set to: 0
 10841  001DA6  BFE4               	btfsc	(___fladd@a+2)& (0+255),7,b
 10842                           
 10843                           ; BSR set to: 0
 10844  001DA8  81EF               	bsf	___fladd@aexp& (0+255),0,b
 10845                           
 10846                           ; BSR set to: 0
 10847                           
 10848                           ; BSR set to: 0
 10849  001DAA  51EF               	movf	___fladd@aexp& (0+255),w,b
 10850  001DAC  B4D8               	btfsc	status,2,c
 10851  001DAE  D00D               	goto	l994
 10852                           
 10853                           ; BSR set to: 0
 10854  001DB0  29EF               	incf	___fladd@aexp& (0+255),w,b
 10855  001DB2  A4D8               	btfss	status,2,c
 10856  001DB4  D008               	goto	l995
 10857                           
 10858                           ; BSR set to: 0
 10859  001DB6  0E00               	movlw	0
 10860  001DB8  6FE2               	movwf	___fladd@a& (0+255),b
 10861  001DBA  0E00               	movlw	0
 10862  001DBC  6FE3               	movwf	(___fladd@a+1)& (0+255),b
 10863  001DBE  0E00               	movlw	0
 10864  001DC0  6FE4               	movwf	(___fladd@a+2)& (0+255),b
 10865  001DC2  0E00               	movlw	0
 10866  001DC4  6FE5               	movwf	(___fladd@a+3)& (0+255),b
 10867  001DC6                     l995:
 10868                           
 10869                           ; BSR set to: 0
 10870                           
 10871                           ; BSR set to: 0
 10872  001DC6  8FE4               	bsf	(___fladd@a+2)& (0+255),7,b
 10873  001DC8  D006               	goto	L15
 10874  001DCA                     l994:
 10875                           
 10876                           ; BSR set to: 0
 10877                           
 10878                           ; BSR set to: 0
 10879  001DCA  0E00               	movlw	0
 10880  001DCC  6FE2               	movwf	___fladd@a& (0+255),b
 10881  001DCE  0E00               	movlw	0
 10882  001DD0  6FE3               	movwf	(___fladd@a+1)& (0+255),b
 10883  001DD2  0E00               	movlw	0
 10884  001DD4  6FE4               	movwf	(___fladd@a+2)& (0+255),b
 10885  001DD6                     L15:
 10886  001DD6  0E00               	movlw	0
 10887  001DD8  6FE5               	movwf	(___fladd@a+3)& (0+255),b
 10888                           
 10889                           ; BSR set to: 0
 10890                           
 10891                           ; BSR set to: 0
 10892  001DDA  51F0               	movf	___fladd@bexp& (0+255),w,b
 10893  001DDC  5DEF               	subwf	___fladd@aexp& (0+255),w,b
 10894  001DDE  B0D8               	btfsc	status,0,c
 10895  001DE0  D022               	goto	l997
 10896                           
 10897                           ; BSR set to: 0
 10898  001DE2  ADEE               	btfss	___fladd@signs& (0+255),6,b
 10899  001DE4  D002               	goto	l998
 10900                           
 10901                           ; BSR set to: 0
 10902  001DE6  0E80               	movlw	128
 10903  001DE8  1BEE               	xorwf	___fladd@signs& (0+255),f,b
 10904  001DEA                     l998:
 10905                           
 10906                           ; BSR set to: 0
 10907                           
 10908                           ; BSR set to: 0
 10909  001DEA  C0F0  F0F1         	movff	___fladd@bexp,___fladd@grs
 10910                           
 10911                           ; BSR set to: 0
 10912  001DEE  C0EF  F0F0         	movff	___fladd@aexp,___fladd@bexp
 10913                           
 10914                           ; BSR set to: 0
 10915  001DF2  C0F1  F0EF         	movff	___fladd@grs,___fladd@aexp
 10916                           
 10917                           ; BSR set to: 0
 10918  001DF6  C0DE  F0F1         	movff	___fladd@b,___fladd@grs
 10919                           
 10920                           ; BSR set to: 0
 10921  001DFA  C0E2  F0DE         	movff	___fladd@a,___fladd@b
 10922                           
 10923                           ; BSR set to: 0
 10924  001DFE  C0F1  F0E2         	movff	___fladd@grs,___fladd@a
 10925                           
 10926                           ; BSR set to: 0
 10927  001E02  C0DF  F0F1         	movff	___fladd@b+1,___fladd@grs
 10928                           
 10929                           ; BSR set to: 0
 10930  001E06  C0E3  F0DF         	movff	___fladd@a+1,___fladd@b+1
 10931                           
 10932                           ; BSR set to: 0
 10933  001E0A  C0F1  F0E3         	movff	___fladd@grs,___fladd@a+1
 10934                           
 10935                           ; BSR set to: 0
 10936  001E0E  C0E0  F0F1         	movff	___fladd@b+2,___fladd@grs
 10937                           
 10938                           ; BSR set to: 0
 10939  001E12  C0E4  F0E0         	movff	___fladd@a+2,___fladd@b+2
 10940                           
 10941                           ; BSR set to: 0
 10942  001E16  C0F1  F0E4         	movff	___fladd@grs,___fladd@a+2
 10943                           
 10944                           ; BSR set to: 0
 10945  001E1A  C0E1  F0F1         	movff	___fladd@b+3,___fladd@grs
 10946                           
 10947                           ; BSR set to: 0
 10948  001E1E  C0E5  F0E1         	movff	___fladd@a+3,___fladd@b+3
 10949                           
 10950                           ; BSR set to: 0
 10951  001E22  C0F1  F0E5         	movff	___fladd@grs,___fladd@a+3
 10952  001E26                     l997:
 10953                           
 10954                           ; BSR set to: 0
 10955                           
 10956                           ; BSR set to: 0
 10957  001E26  0E00               	movlw	0
 10958  001E28  6FF1               	movwf	___fladd@grs& (0+255),b
 10959                           
 10960                           ; BSR set to: 0
 10961  001E2A  51F0               	movf	___fladd@bexp& (0+255),w,b
 10962  001E2C  6FE6               	movwf	??___fladd& (0+255),b
 10963  001E2E  6BE7               	clrf	(??___fladd+1)& (0+255),b
 10964  001E30  1FE6               	comf	??___fladd& (0+255),f,b
 10965  001E32  1FE7               	comf	(??___fladd+1)& (0+255),f,b
 10966  001E34  4BE6               	infsnz	??___fladd& (0+255),f,b
 10967  001E36  2BE7               	incf	(??___fladd+1)& (0+255),f,b
 10968  001E38  51EF               	movf	___fladd@aexp& (0+255),w,b
 10969  001E3A  6FE8               	movwf	(??___fladd+2)& (0+255),b
 10970  001E3C  6BE9               	clrf	(??___fladd+3)& (0+255),b
 10971  001E3E  51E6               	movf	??___fladd& (0+255),w,b
 10972  001E40  27E8               	addwf	(??___fladd+2)& (0+255),f,b
 10973  001E42  51E7               	movf	(??___fladd+1)& (0+255),w,b
 10974  001E44  23E9               	addwfc	(??___fladd+3)& (0+255),f,b
 10975  001E46  BFE9               	btfsc	(??___fladd+3)& (0+255),7,b
 10976  001E48  D02C               	goto	l1001
 10977  001E4A  51E9               	movf	(??___fladd+3)& (0+255),w,b
 10978  001E4C  E104               	bnz	u4040
 10979  001E4E  0E1A               	movlw	26
 10980  001E50  5DE8               	subwf	(??___fladd+2)& (0+255),w,b
 10981  001E52  A0D8               	btfss	status,0,c
 10982  001E54  D026               	goto	l1001
 10983  001E56                     u4040:
 10984                           
 10985                           ; BSR set to: 0
 10986  001E56  51DE               	movf	___fladd@b& (0+255),w,b
 10987  001E58  11DF               	iorwf	(___fladd@b+1)& (0+255),w,b
 10988  001E5A  11E0               	iorwf	(___fladd@b+2)& (0+255),w,b
 10989  001E5C  11E1               	iorwf	(___fladd@b+3)& (0+255),w,b
 10990  001E5E  B4D8               	btfsc	status,2,c
 10991  001E60  D002               	goto	u4050
 10992  001E62  0E01               	movlw	1
 10993  001E64  D001               	goto	u4060
 10994  001E66                     u4050:
 10995  001E66  0E00               	movlw	0
 10996  001E68                     u4060:
 10997  001E68  6FF1               	movwf	___fladd@grs& (0+255),b
 10998                           
 10999                           ; BSR set to: 0
 11000  001E6A  0E00               	movlw	0
 11001  001E6C  6FDE               	movwf	___fladd@b& (0+255),b
 11002  001E6E  0E00               	movlw	0
 11003  001E70  6FDF               	movwf	(___fladd@b+1)& (0+255),b
 11004  001E72  0E00               	movlw	0
 11005  001E74  6FE0               	movwf	(___fladd@b+2)& (0+255),b
 11006  001E76  0E00               	movlw	0
 11007  001E78  6FE1               	movwf	(___fladd@b+3)& (0+255),b
 11008                           
 11009                           ; BSR set to: 0
 11010  001E7A  C0EF  F0F0         	movff	___fladd@aexp,___fladd@bexp
 11011  001E7E  D015               	goto	u4090
 11012  001E80                     l1002:
 11013                           
 11014                           ; BSR set to: 0
 11015  001E80  A1F1               	btfss	___fladd@grs& (0+255),0,b
 11016  001E82  D005               	goto	l1003
 11017                           
 11018                           ; BSR set to: 0
 11019  001E84  90D8               	bcf	status,0,c
 11020  001E86  31F1               	rrcf	___fladd@grs& (0+255),w,b
 11021  001E88  0901               	iorlw	1
 11022  001E8A  6FF1               	movwf	___fladd@grs& (0+255),b
 11023  001E8C  D002               	goto	l1004
 11024  001E8E                     l1003:
 11025                           
 11026                           ; BSR set to: 0
 11027                           
 11028                           ; BSR set to: 0
 11029  001E8E  90D8               	bcf	status,0,c
 11030  001E90  33F1               	rrcf	___fladd@grs& (0+255),f,b
 11031  001E92                     l1004:
 11032                           
 11033                           ; BSR set to: 0
 11034                           
 11035                           ; BSR set to: 0
 11036  001E92  B1DE               	btfsc	___fladd@b& (0+255),0,b
 11037                           
 11038                           ; BSR set to: 0
 11039  001E94  8FF1               	bsf	___fladd@grs& (0+255),7,b
 11040                           
 11041                           ; BSR set to: 0
 11042                           
 11043                           ; BSR set to: 0
 11044  001E96  35E1               	rlcf	(___fladd@b+3)& (0+255),w,b
 11045  001E98  33E1               	rrcf	(___fladd@b+3)& (0+255),f,b
 11046  001E9A  33E0               	rrcf	(___fladd@b+2)& (0+255),f,b
 11047  001E9C  33DF               	rrcf	(___fladd@b+1)& (0+255),f,b
 11048  001E9E  33DE               	rrcf	___fladd@b& (0+255),f,b
 11049                           
 11050                           ; BSR set to: 0
 11051  001EA0  2BF0               	incf	___fladd@bexp& (0+255),f,b
 11052  001EA2                     l1001:
 11053                           
 11054                           ; BSR set to: 0
 11055  001EA2  51EF               	movf	___fladd@aexp& (0+255),w,b
 11056  001EA4  5DF0               	subwf	___fladd@bexp& (0+255),w,b
 11057  001EA6  A0D8               	btfss	status,0,c
 11058  001EA8  D7EB               	goto	l1002
 11059  001EAA                     u4090:
 11060                           
 11061                           ; BSR set to: 0
 11062                           
 11063                           ; BSR set to: 0
 11064  001EAA  BDEE               	btfsc	___fladd@signs& (0+255),6,b
 11065  001EAC  D029               	goto	l1007
 11066                           
 11067                           ; BSR set to: 0
 11068  001EAE  51F0               	movf	___fladd@bexp& (0+255),w,b
 11069  001EB0  A4D8               	btfss	status,2,c
 11070  001EB2  D009               	goto	l1008
 11071                           
 11072                           ; BSR set to: 0
 11073  001EB4  0E00               	movlw	0
 11074  001EB6  6FDE               	movwf	?___fladd& (0+255),b
 11075  001EB8  0E00               	movlw	0
 11076  001EBA  6FDF               	movwf	(?___fladd+1)& (0+255),b
 11077  001EBC  0E00               	movlw	0
 11078  001EBE  6FE0               	movwf	(?___fladd+2)& (0+255),b
 11079  001EC0  0E00               	movlw	0
 11080  001EC2  6FE1               	movwf	(?___fladd+3)& (0+255),b
 11081                           
 11082                           ; BSR set to: 0
 11083  001EC4  0012               	return	
 11084  001EC6                     l1008:
 11085                           
 11086                           ; BSR set to: 0
 11087                           
 11088                           ; BSR set to: 0
 11089  001EC6  51E2               	movf	___fladd@a& (0+255),w,b
 11090  001EC8  27DE               	addwf	___fladd@b& (0+255),f,b
 11091  001ECA  51E3               	movf	(___fladd@a+1)& (0+255),w,b
 11092  001ECC  23DF               	addwfc	(___fladd@b+1)& (0+255),f,b
 11093  001ECE  51E4               	movf	(___fladd@a+2)& (0+255),w,b
 11094  001ED0  23E0               	addwfc	(___fladd@b+2)& (0+255),f,b
 11095  001ED2  51E5               	movf	(___fladd@a+3)& (0+255),w,b
 11096  001ED4  23E1               	addwfc	(___fladd@b+3)& (0+255),f,b
 11097                           
 11098                           ; BSR set to: 0
 11099  001ED6  A1E1               	btfss	(___fladd@b+3)& (0+255),0,b
 11100  001ED8  D083               	goto	u4220
 11101                           
 11102                           ; BSR set to: 0
 11103  001EDA  A1F1               	btfss	___fladd@grs& (0+255),0,b
 11104  001EDC  D006               	goto	l1011
 11105                           
 11106                           ; BSR set to: 0
 11107  001EDE  90D8               	bcf	status,0,c
 11108  001EE0  33F1               	rrcf	___fladd@grs& (0+255),f,b
 11109  001EE2  51F1               	movf	___fladd@grs& (0+255),w,b
 11110  001EE4  0901               	iorlw	1
 11111  001EE6  6FF1               	movwf	___fladd@grs& (0+255),b
 11112  001EE8  D002               	goto	l1012
 11113  001EEA                     l1011:
 11114                           
 11115                           ; BSR set to: 0
 11116                           
 11117                           ; BSR set to: 0
 11118  001EEA  90D8               	bcf	status,0,c
 11119  001EEC  33F1               	rrcf	___fladd@grs& (0+255),f,b
 11120  001EEE                     l1012:
 11121                           
 11122                           ; BSR set to: 0
 11123                           
 11124                           ; BSR set to: 0
 11125  001EEE  B1DE               	btfsc	___fladd@b& (0+255),0,b
 11126                           
 11127                           ; BSR set to: 0
 11128  001EF0  8FF1               	bsf	___fladd@grs& (0+255),7,b
 11129                           
 11130                           ; BSR set to: 0
 11131                           
 11132                           ; BSR set to: 0
 11133  001EF2  35E1               	rlcf	(___fladd@b+3)& (0+255),w,b
 11134  001EF4  33E1               	rrcf	(___fladd@b+3)& (0+255),f,b
 11135  001EF6  33E0               	rrcf	(___fladd@b+2)& (0+255),f,b
 11136  001EF8  33DF               	rrcf	(___fladd@b+1)& (0+255),f,b
 11137  001EFA  33DE               	rrcf	___fladd@b& (0+255),f,b
 11138                           
 11139                           ; BSR set to: 0
 11140  001EFC  2BF0               	incf	___fladd@bexp& (0+255),f,b
 11141                           
 11142                           ; BSR set to: 0
 11143  001EFE  D070               	goto	u4220
 11144  001F00                     l1007:
 11145                           
 11146                           ; BSR set to: 0
 11147                           
 11148                           ; BSR set to: 0
 11149  001F00  51E2               	movf	___fladd@a& (0+255),w,b
 11150  001F02  5DDE               	subwf	___fladd@b& (0+255),w,b
 11151  001F04  51E3               	movf	(___fladd@a+1)& (0+255),w,b
 11152  001F06  59DF               	subwfb	(___fladd@b+1)& (0+255),w,b
 11153  001F08  51E4               	movf	(___fladd@a+2)& (0+255),w,b
 11154  001F0A  59E0               	subwfb	(___fladd@b+2)& (0+255),w,b
 11155  001F0C  51E1               	movf	(___fladd@b+3)& (0+255),w,b
 11156  001F0E  0A80               	xorlw	128
 11157  001F10  6FE6               	movwf	??___fladd& (0+255),b
 11158  001F12  51E5               	movf	(___fladd@a+3)& (0+255),w,b
 11159  001F14  0A80               	xorlw	128
 11160  001F16  59E6               	subwfb	??___fladd& (0+255),w,b
 11161  001F18  B0D8               	btfsc	status,0,c
 11162  001F1A  D036               	goto	l1015
 11163                           
 11164                           ; BSR set to: 0
 11165  001F1C  C0DE  F0E6         	movff	___fladd@b,??___fladd
 11166  001F20  C0DF  F0E7         	movff	___fladd@b+1,??___fladd+1
 11167  001F24  C0E0  F0E8         	movff	___fladd@b+2,??___fladd+2
 11168  001F28  C0E1  F0E9         	movff	___fladd@b+3,??___fladd+3
 11169  001F2C  1FE6               	comf	??___fladd& (0+255),f,b
 11170  001F2E  1FE7               	comf	(??___fladd+1)& (0+255),f,b
 11171  001F30  1FE8               	comf	(??___fladd+2)& (0+255),f,b
 11172  001F32  1FE9               	comf	(??___fladd+3)& (0+255),f,b
 11173  001F34  2BE6               	incf	??___fladd& (0+255),f,b
 11174  001F36  0E00               	movlw	0
 11175  001F38  23E7               	addwfc	(??___fladd+1)& (0+255),f,b
 11176  001F3A  23E8               	addwfc	(??___fladd+2)& (0+255),f,b
 11177  001F3C  23E9               	addwfc	(??___fladd+3)& (0+255),f,b
 11178  001F3E  51E2               	movf	___fladd@a& (0+255),w,b
 11179  001F40  25E6               	addwf	??___fladd& (0+255),w,b
 11180  001F42  6FEA               	movwf	(??___fladd+4)& (0+255),b
 11181  001F44  51E3               	movf	(___fladd@a+1)& (0+255),w,b
 11182  001F46  21E7               	addwfc	(??___fladd+1)& (0+255),w,b
 11183  001F48  6FEB               	movwf	(??___fladd+5)& (0+255),b
 11184  001F4A  51E4               	movf	(___fladd@a+2)& (0+255),w,b
 11185  001F4C  21E8               	addwfc	(??___fladd+2)& (0+255),w,b
 11186  001F4E  6FEC               	movwf	(??___fladd+6)& (0+255),b
 11187  001F50  51E5               	movf	(___fladd@a+3)& (0+255),w,b
 11188  001F52  21E9               	addwfc	(??___fladd+3)& (0+255),w,b
 11189  001F54  6FED               	movwf	(??___fladd+7)& (0+255),b
 11190  001F56  0EFF               	movlw	255
 11191  001F58  25EA               	addwf	(??___fladd+4)& (0+255),w,b
 11192  001F5A  6FDE               	movwf	___fladd@b& (0+255),b
 11193  001F5C  0EFF               	movlw	255
 11194  001F5E  21EB               	addwfc	(??___fladd+5)& (0+255),w,b
 11195  001F60  6FDF               	movwf	(___fladd@b+1)& (0+255),b
 11196  001F62  0EFF               	movlw	255
 11197  001F64  21EC               	addwfc	(??___fladd+6)& (0+255),w,b
 11198  001F66  6FE0               	movwf	(___fladd@b+2)& (0+255),b
 11199  001F68  0EFF               	movlw	255
 11200  001F6A  21ED               	addwfc	(??___fladd+7)& (0+255),w,b
 11201  001F6C  6FE1               	movwf	(___fladd@b+3)& (0+255),b
 11202  001F6E  0E80               	movlw	128
 11203  001F70  1BEE               	xorwf	___fladd@signs& (0+255),f,b
 11204                           
 11205                           ; BSR set to: 0
 11206  001F72  6DF1               	negf	___fladd@grs& (0+255),b
 11207                           
 11208                           ; BSR set to: 0
 11209  001F74  51F1               	movf	___fladd@grs& (0+255),w,b
 11210  001F76  A4D8               	btfss	status,2,c
 11211  001F78  D00F               	goto	l1017
 11212                           
 11213                           ; BSR set to: 0
 11214  001F7A  0E01               	movlw	1
 11215  001F7C  27DE               	addwf	___fladd@b& (0+255),f,b
 11216  001F7E  0E00               	movlw	0
 11217  001F80  23DF               	addwfc	(___fladd@b+1)& (0+255),f,b
 11218  001F82  23E0               	addwfc	(___fladd@b+2)& (0+255),f,b
 11219  001F84  23E1               	addwfc	(___fladd@b+3)& (0+255),f,b
 11220                           
 11221                           ; BSR set to: 0
 11222  001F86  D008               	goto	l1017
 11223  001F88                     l1015:
 11224                           
 11225                           ; BSR set to: 0
 11226                           
 11227                           ; BSR set to: 0
 11228  001F88  51E2               	movf	___fladd@a& (0+255),w,b
 11229  001F8A  5FDE               	subwf	___fladd@b& (0+255),f,b
 11230  001F8C  51E3               	movf	(___fladd@a+1)& (0+255),w,b
 11231  001F8E  5BDF               	subwfb	(___fladd@b+1)& (0+255),f,b
 11232  001F90  51E4               	movf	(___fladd@a+2)& (0+255),w,b
 11233  001F92  5BE0               	subwfb	(___fladd@b+2)& (0+255),f,b
 11234  001F94  51E5               	movf	(___fladd@a+3)& (0+255),w,b
 11235  001F96  5BE1               	subwfb	(___fladd@b+3)& (0+255),f,b
 11236  001F98                     l1017:
 11237                           
 11238                           ; BSR set to: 0
 11239  001F98  51DE               	movf	___fladd@b& (0+255),w,b
 11240  001F9A  11DF               	iorwf	(___fladd@b+1)& (0+255),w,b
 11241  001F9C  11E0               	iorwf	(___fladd@b+2)& (0+255),w,b
 11242  001F9E  11E1               	iorwf	(___fladd@b+3)& (0+255),w,b
 11243  001FA0  A4D8               	btfss	status,2,c
 11244  001FA2  D01C               	goto	l1024
 11245                           
 11246                           ; BSR set to: 0
 11247  001FA4  51F1               	movf	___fladd@grs& (0+255),w,b
 11248  001FA6  A4D8               	btfss	status,2,c
 11249  001FA8  D019               	goto	l1024
 11250                           
 11251                           ; BSR set to: 0
 11252  001FAA  0E00               	movlw	0
 11253  001FAC  6FDE               	movwf	?___fladd& (0+255),b
 11254  001FAE  0E00               	movlw	0
 11255  001FB0  6FDF               	movwf	(?___fladd+1)& (0+255),b
 11256  001FB2  0E00               	movlw	0
 11257  001FB4  6FE0               	movwf	(?___fladd+2)& (0+255),b
 11258  001FB6  0E00               	movlw	0
 11259  001FB8  6FE1               	movwf	(?___fladd+3)& (0+255),b
 11260                           
 11261                           ; BSR set to: 0
 11262  001FBA  0012               	return	
 11263  001FBC                     
 11264                           ; BSR set to: 0
 11265                           
 11266                           ; BSR set to: 0
 11267  001FBC  90D8               	bcf	status,0,c
 11268  001FBE  37DE               	rlcf	___fladd@b& (0+255),f,b
 11269  001FC0  37DF               	rlcf	(___fladd@b+1)& (0+255),f,b
 11270  001FC2  37E0               	rlcf	(___fladd@b+2)& (0+255),f,b
 11271  001FC4  37E1               	rlcf	(___fladd@b+3)& (0+255),f,b
 11272                           
 11273                           ; BSR set to: 0
 11274  001FC6  BFF1               	btfsc	___fladd@grs& (0+255),7,b
 11275                           
 11276                           ; BSR set to: 0
 11277  001FC8  81DE               	bsf	___fladd@b& (0+255),0,b
 11278                           
 11279                           ; BSR set to: 0
 11280                           
 11281                           ; BSR set to: 0
 11282  001FCA  A1F1               	btfss	___fladd@grs& (0+255),0,b
 11283  001FCC  D002               	goto	l1022
 11284                           
 11285                           ; BSR set to: 0
 11286  001FCE  80D8               	bsf	status,0,c
 11287  001FD0  D001               	goto	L16
 11288  001FD2                     l1022:
 11289                           
 11290                           ; BSR set to: 0
 11291                           
 11292                           ; BSR set to: 0
 11293  001FD2  90D8               	bcf	status,0,c
 11294  001FD4                     L16:
 11295  001FD4  37F1               	rlcf	___fladd@grs& (0+255),f,b
 11296                           
 11297                           ; BSR set to: 0
 11298                           
 11299                           ; BSR set to: 0
 11300  001FD6  51F0               	movf	___fladd@bexp& (0+255),w,b
 11301  001FD8  A4D8               	btfss	status,2,c
 11302                           
 11303                           ; BSR set to: 0
 11304  001FDA  07F0               	decf	___fladd@bexp& (0+255),f,b
 11305  001FDC                     l1024:
 11306                           
 11307                           ; BSR set to: 0
 11308                           
 11309                           ; BSR set to: 0
 11310                           
 11311                           ; BSR set to: 0
 11312  001FDC  AFE0               	btfss	(___fladd@b+2)& (0+255),7,b
 11313  001FDE  D7EE               	goto	l1020
 11314  001FE0                     u4220:
 11315                           
 11316                           ; BSR set to: 0
 11317                           
 11318                           ; BSR set to: 0
 11319                           
 11320                           ; BSR set to: 0
 11321  001FE0  0E00               	movlw	0
 11322  001FE2  6FEF               	movwf	___fladd@aexp& (0+255),b
 11323                           
 11324                           ; BSR set to: 0
 11325  001FE4  AFF1               	btfss	___fladd@grs& (0+255),7,b
 11326  001FE6  D00A               	goto	l1029
 11327                           
 11328                           ; BSR set to: 0
 11329  001FE8  C0F1  F0E6         	movff	___fladd@grs,??___fladd
 11330  001FEC  0E7F               	movlw	127
 11331  001FEE  17E6               	andwf	??___fladd& (0+255),f,b
 11332  001FF0  A4D8               	btfss	status,2,c
 11333  001FF2  D002               	goto	u4250
 11334                           
 11335                           ; BSR set to: 0
 11336                           
 11337                           ; BSR set to: 0
 11338  001FF4  A1DE               	btfss	___fladd@b& (0+255),0,b
 11339  001FF6  D002               	goto	l1029
 11340  001FF8                     u4250:
 11341                           
 11342                           ; BSR set to: 0
 11343  001FF8  0E01               	movlw	1
 11344  001FFA  6FEF               	movwf	___fladd@aexp& (0+255),b
 11345  001FFC                     l1029:
 11346                           
 11347                           ; BSR set to: 0
 11348                           
 11349                           ; BSR set to: 0
 11350                           
 11351                           ; BSR set to: 0
 11352  001FFC  51EF               	movf	___fladd@aexp& (0+255),w,b
 11353  001FFE  B4D8               	btfsc	status,2,c
 11354  002000  D020               	goto	l1032
 11355                           
 11356                           ; BSR set to: 0
 11357  002002  0E01               	movlw	1
 11358  002004  27DE               	addwf	___fladd@b& (0+255),f,b
 11359  002006  0E00               	movlw	0
 11360  002008  23DF               	addwfc	(___fladd@b+1)& (0+255),f,b
 11361  00200A  23E0               	addwfc	(___fladd@b+2)& (0+255),f,b
 11362  00200C  23E1               	addwfc	(___fladd@b+3)& (0+255),f,b
 11363                           
 11364                           ; BSR set to: 0
 11365  00200E  A1E1               	btfss	(___fladd@b+3)& (0+255),0,b
 11366  002010  D018               	goto	l1032
 11367                           
 11368                           ; BSR set to: 0
 11369  002012  C0DE  F0E6         	movff	___fladd@b,??___fladd
 11370  002016  C0DF  F0E7         	movff	___fladd@b+1,??___fladd+1
 11371  00201A  C0E0  F0E8         	movff	___fladd@b+2,??___fladd+2
 11372  00201E  C0E1  F0E9         	movff	___fladd@b+3,??___fladd+3
 11373  002022  35E9               	rlcf	(??___fladd+3)& (0+255),w,b
 11374  002024  33E9               	rrcf	(??___fladd+3)& (0+255),f,b
 11375  002026  33E8               	rrcf	(??___fladd+2)& (0+255),f,b
 11376  002028  33E7               	rrcf	(??___fladd+1)& (0+255),f,b
 11377  00202A  33E6               	rrcf	??___fladd& (0+255),f,b
 11378  00202C  C0E6  F0DE         	movff	??___fladd,___fladd@b
 11379  002030  C0E7  F0DF         	movff	??___fladd+1,___fladd@b+1
 11380  002034  C0E8  F0E0         	movff	??___fladd+2,___fladd@b+2
 11381  002038  C0E9  F0E1         	movff	??___fladd+3,___fladd@b+3
 11382  00203C  29F0               	incf	___fladd@bexp& (0+255),w,b
 11383  00203E  A4D8               	btfss	status,2,c
 11384                           
 11385                           ; BSR set to: 0
 11386  002040  2BF0               	incf	___fladd@bexp& (0+255),f,b
 11387  002042                     l1032:
 11388                           
 11389                           ; BSR set to: 0
 11390                           
 11391                           ; BSR set to: 0
 11392                           
 11393                           ; BSR set to: 0
 11394                           
 11395                           ; BSR set to: 0
 11396  002042  29F0               	incf	___fladd@bexp& (0+255),w,b
 11397  002044  B4D8               	btfsc	status,2,c
 11398  002046  D003               	goto	u4300
 11399                           
 11400                           ; BSR set to: 0
 11401  002048  51F0               	movf	___fladd@bexp& (0+255),w,b
 11402  00204A  A4D8               	btfss	status,2,c
 11403  00204C  D00D               	goto	l1036
 11404  00204E                     u4300:
 11405                           
 11406                           ; BSR set to: 0
 11407                           
 11408                           ; BSR set to: 0
 11409  00204E  0E00               	movlw	0
 11410  002050  6FDE               	movwf	___fladd@b& (0+255),b
 11411  002052  0E00               	movlw	0
 11412  002054  6FDF               	movwf	(___fladd@b+1)& (0+255),b
 11413  002056  0E00               	movlw	0
 11414  002058  6FE0               	movwf	(___fladd@b+2)& (0+255),b
 11415  00205A  0E00               	movlw	0
 11416  00205C  6FE1               	movwf	(___fladd@b+3)& (0+255),b
 11417  00205E  51F0               	movf	___fladd@bexp& (0+255),w,b
 11418  002060  A4D8               	btfss	status,2,c
 11419  002062  D002               	goto	l1036
 11420                           
 11421                           ; BSR set to: 0
 11422  002064  0E00               	movlw	0
 11423  002066  6FEE               	movwf	___fladd@signs& (0+255),b
 11424  002068                     l1036:
 11425                           
 11426                           ; BSR set to: 0
 11427                           
 11428                           ; BSR set to: 0
 11429                           
 11430                           ; BSR set to: 0
 11431  002068  A1F0               	btfss	___fladd@bexp& (0+255),0,b
 11432  00206A  D002               	goto	l1037
 11433                           
 11434                           ; BSR set to: 0
 11435  00206C  8FE0               	bsf	(___fladd@b+2)& (0+255),7,b
 11436  00206E  D001               	goto	l1038
 11437  002070                     l1037:
 11438                           
 11439                           ; BSR set to: 0
 11440                           
 11441                           ; BSR set to: 0
 11442  002070  9FE0               	bcf	(___fladd@b+2)& (0+255),7,b
 11443  002072                     l1038:
 11444                           
 11445                           ; BSR set to: 0
 11446                           
 11447                           ; BSR set to: 0
 11448  002072  90D8               	bcf	status,0,c
 11449  002074  31F0               	rrcf	___fladd@bexp& (0+255),w,b
 11450  002076  6FE1               	movwf	(___fladd@b+3)& (0+255),b
 11451                           
 11452                           ; BSR set to: 0
 11453  002078  BFEE               	btfsc	___fladd@signs& (0+255),7,b
 11454                           
 11455                           ; BSR set to: 0
 11456  00207A  8FE1               	bsf	(___fladd@b+3)& (0+255),7,b
 11457                           
 11458                           ; BSR set to: 0
 11459                           
 11460                           ; BSR set to: 0
 11461  00207C  C0DE  F0DE         	movff	___fladd@b,?___fladd
 11462  002080  C0DF  F0DF         	movff	___fladd@b+1,?___fladd+1
 11463  002084  C0E0  F0E0         	movff	___fladd@b+2,?___fladd+2
 11464  002088  C0E1  F0E1         	movff	___fladd@b+3,?___fladd+3
 11465  00208C  0012               	return	
 11466  00208E                     __end_of___fladd:
 11467                           	opt stack 0
 11468                           tblptru	equ	0xFF8
 11469                           tblptrh	equ	0xFF7
 11470                           tblptrl	equ	0xFF6
 11471                           tablat	equ	0xFF5
 11472                           prodh	equ	0xFF4
 11473                           prodl	equ	0xFF3
 11474                           intcon	equ	0xFF2
 11475                           intcon2	equ	0xFF1
 11476                           intcon3	equ	0xFF0
 11477                           indf0	equ	0xFEF
 11478                           postinc0	equ	0xFEE
 11479                           fsr0h	equ	0xFEA
 11480                           fsr0l	equ	0xFE9
 11481                           wreg	equ	0xFE8
 11482                           postdec1	equ	0xFE5
 11483                           fsr1l	equ	0xFE1
 11484                           indf2	equ	0xFDF
 11485                           postinc2	equ	0xFDE
 11486                           postdec2	equ	0xFDD
 11487                           fsr2h	equ	0xFDA
 11488                           fsr2l	equ	0xFD9
 11489                           status	equ	0xFD8
 11490                           
 11491 ;; *************** function _lcd_puts *****************
 11492 ;; Defined at:
 11493 ;;		line 218 in file "Main.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;  s               2   14[BANK0 ] PTR unsigned char 
 11496 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
 11497 ;;		 -> STR_5(4), STR_2(3), Buffer(32), 
 11498 ;; Auto vars:     Size  Location     Type
 11499 ;;		None
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      void 
 11502 ;; Registers used:
 11503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;Total ram usage:        2 bytes
 11514 ;; Hardware stack levels used:    1
 11515 ;; Hardware stack levels required when called:    8
 11516 ;; This function calls:
 11517 ;;		_lcd_putc
 11518 ;; This function is called by:
 11519 ;;		_autoCool
 11520 ;;		_autoHeat
 11521 ;;		_main
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text30
 11526  0041E6                     __ptext30:
 11527                           	opt stack 0
 11528  0041E6                     _lcd_puts:
 11529                           	opt stack 22
 11530                           
 11531                           ;Main.c: 219: while (*s) {
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;incstack = 0
 11535  0041E6  D016               	goto	l197
 11536  0041E8                     
 11537                           ;Main.c: 220: lcd_putc(*s);
 11538  0041E8  C08E  FFF6         	movff	lcd_puts@s,tblptrl
 11539  0041EC  C08F  FFF7         	movff	lcd_puts@s+1,tblptrh
 11540  0041F0  0E00               	movlw	low (__mediumconst shr (0+16))
 11541  0041F2  6EF8               	movwf	tblptru,c
 11542  0041F4  0E0F               	movlw	(high __ramtop+-1)
 11543  0041F6  64F7               	cpfsgt	tblptrh,c
 11544  0041F8  D003               	bra	u5437
 11545  0041FA  0008               	tblrd		*
 11546  0041FC  50F5               	movf	tablat,w,c
 11547  0041FE  D005               	bra	u5430
 11548  004200                     u5437:
 11549  004200  CFF6 FFE9          	movff	tblptrl,fsr0l
 11550  004204  CFF7 FFEA          	movff	tblptrh,fsr0h
 11551  004208  50EF               	movf	indf0,w,c
 11552  00420A                     u5430:
 11553  00420A  ECC2  F020         	call	_lcd_putc
 11554                           
 11555                           ;Main.c: 221: s++;
 11556  00420E  0100               	movlb	0	; () banked
 11557  004210  4B8E               	infsnz	lcd_puts@s& (0+255),f,b
 11558  004212  2B8F               	incf	(lcd_puts@s+1)& (0+255),f,b
 11559  004214                     l197:
 11560                           
 11561                           ; BSR set to: 0
 11562  004214  C08E  FFF6         	movff	lcd_puts@s,tblptrl
 11563  004218  C08F  FFF7         	movff	lcd_puts@s+1,tblptrh
 11564  00421C  0E00               	movlw	low (__mediumconst shr (0+16))
 11565  00421E  6EF8               	movwf	tblptru,c
 11566  004220  0E0F               	movlw	(high __ramtop+-1)
 11567  004222  64F7               	cpfsgt	tblptrh,c
 11568  004224  D003               	bra	u5447
 11569  004226  0008               	tblrd		*
 11570  004228  50F5               	movf	tablat,w,c
 11571  00422A  D005               	bra	u5440
 11572  00422C                     u5447:
 11573  00422C  CFF6 FFE9          	movff	tblptrl,fsr0l
 11574  004230  CFF7 FFEA          	movff	tblptrh,fsr0h
 11575  004234  50EF               	movf	indf0,w,c
 11576  004236                     u5440:
 11577  004236  0900               	iorlw	0
 11578  004238  B4D8               	btfsc	status,2,c
 11579  00423A  0012               	return	
 11580  00423C  D7D5               	goto	l198
 11581  00423E                     __end_of_lcd_puts:
 11582                           	opt stack 0
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           intcon2	equ	0xFF1
 11591                           intcon3	equ	0xFF0
 11592                           indf0	equ	0xFEF
 11593                           postinc0	equ	0xFEE
 11594                           fsr0h	equ	0xFEA
 11595                           fsr0l	equ	0xFE9
 11596                           wreg	equ	0xFE8
 11597                           postdec1	equ	0xFE5
 11598                           fsr1l	equ	0xFE1
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           postdec2	equ	0xFDD
 11602                           fsr2h	equ	0xFDA
 11603                           fsr2l	equ	0xFD9
 11604                           status	equ	0xFD8
 11605                           
 11606 ;; *************** function _lcd_putc *****************
 11607 ;; Defined at:
 11608 ;;		line 204 in file "Main.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;  c               1    wreg     unsigned char 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  c               1   13[BANK0 ] unsigned char 
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		wreg, status,2, status,0, cstack
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;Total ram usage:        1 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:    7
 11629 ;; This function calls:
 11630 ;;		_delay_ms
 11631 ;;		_lcd_gotoxy
 11632 ;;		_lcd_send_byte
 11633 ;; This function is called by:
 11634 ;;		_lcd_puts
 11635 ;;		_autoHeat
 11636 ;;		_main
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text31
 11641  004184                     __ptext31:
 11642                           	opt stack 0
 11643  004184                     _lcd_putc:
 11644                           	opt stack 22
 11645                           
 11646                           ;incstack = 0
 11647                           ;lcd_putc@c stored from wreg
 11648  004184  0100               	movlb	0	; () banked
 11649  004186  6F8D               	movwf	lcd_putc@c& (0+255),b
 11650                           
 11651                           ;Main.c: 205: switch (c) {
 11652  004188  D022               	goto	l188
 11653  00418A  0E01               	movlw	1
 11654  00418C  0100               	movlb	0	; () banked
 11655  00418E  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11656  004190  0E00               	movlw	0
 11657  004192  EC1F  F021         	call	_lcd_send_byte
 11658                           
 11659                           ;Main.c: 207: delay_ms(2);
 11660  004196  0E00               	movlw	0
 11661  004198  0100               	movlb	0	; () banked
 11662  00419A  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11663  00419C  0E02               	movlw	2
 11664  00419E  6F80               	movwf	delay_ms@n& (0+255),b
 11665  0041A0  EC4A  F022         	call	_delay_ms	;wreg free
 11666                           
 11667                           ;Main.c: 208: break;
 11668  0041A4  0012               	return	
 11669  0041A6  0E02               	movlw	2
 11670  0041A8  0100               	movlb	0	; () banked
 11671  0041AA  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
 11672  0041AC  0E01               	movlw	1
 11673  0041AE  EC6D  F021         	call	_lcd_gotoxy
 11674                           
 11675                           ;Main.c: 210: break;
 11676  0041B2  0012               	return	
 11677  0041B4  0E10               	movlw	16
 11678  0041B6  0100               	movlb	0	; () banked
 11679  0041B8  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11680  0041BA  0E00               	movlw	0
 11681  0041BC  EC1F  F021         	call	_lcd_send_byte
 11682                           
 11683                           ;Main.c: 212: break;
 11684  0041C0  0012               	return	
 11685  0041C2  C08D  F088         	movff	lcd_putc@c,lcd_send_byte@n
 11686  0041C6  0E01               	movlw	1
 11687  0041C8  EC1F  F021         	call	_lcd_send_byte
 11688                           
 11689                           ;Main.c: 215: }
 11690                           
 11691                           ;Main.c: 214: break;
 11692  0041CC  0012               	return	
 11693  0041CE                     l188:
 11694  0041CE  0100               	movlb	0	; () banked
 11695  0041D0  518D               	movf	lcd_putc@c& (0+255),w,b
 11696                           
 11697                           ; Switch size 1, requested type "space"
 11698                           ; Number of cases is 3, Range of values is 8 to 12
 11699                           ; switch strategies available:
 11700                           ; Name         Instructions Cycles
 11701                           ; simple_byte           10     6 (average)
 11702                           ;	Chosen strategy is simple_byte
 11703  0041D2  0A08               	xorlw	8	; case 8
 11704  0041D4  B4D8               	btfsc	status,2,c
 11705  0041D6  D7EE               	goto	l192
 11706  0041D8  0A02               	xorlw	2	; case 10
 11707  0041DA  B4D8               	btfsc	status,2,c
 11708  0041DC  D7E4               	goto	l191
 11709  0041DE  0A06               	xorlw	6	; case 12
 11710  0041E0  B4D8               	btfsc	status,2,c
 11711  0041E2  D7D3               	goto	l189
 11712  0041E4  D7EE               	goto	l193
 11713  0041E6                     __end_of_lcd_putc:
 11714                           	opt stack 0
 11715                           tblptru	equ	0xFF8
 11716                           tblptrh	equ	0xFF7
 11717                           tblptrl	equ	0xFF6
 11718                           tablat	equ	0xFF5
 11719                           prodh	equ	0xFF4
 11720                           prodl	equ	0xFF3
 11721                           intcon	equ	0xFF2
 11722                           intcon2	equ	0xFF1
 11723                           intcon3	equ	0xFF0
 11724                           indf0	equ	0xFEF
 11725                           postinc0	equ	0xFEE
 11726                           fsr0h	equ	0xFEA
 11727                           fsr0l	equ	0xFE9
 11728                           wreg	equ	0xFE8
 11729                           postdec1	equ	0xFE5
 11730                           fsr1l	equ	0xFE1
 11731                           indf2	equ	0xFDF
 11732                           postinc2	equ	0xFDE
 11733                           postdec2	equ	0xFDD
 11734                           fsr2h	equ	0xFDA
 11735                           fsr2l	equ	0xFD9
 11736                           status	equ	0xFD8
 11737                           
 11738 ;; *************** function _lcd_gotoxy *****************
 11739 ;; Defined at:
 11740 ;;		line 187 in file "Main.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;  x               1    wreg     unsigned char 
 11743 ;;  y               1   10[BANK0 ] unsigned char 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  x               1   11[BANK0 ] unsigned char 
 11746 ;;  address         1   12[BANK0 ] unsigned char 
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1    wreg      void 
 11749 ;; Registers used:
 11750 ;;		wreg, status,2, status,0, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11756 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;Total ram usage:        3 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:    6
 11763 ;; This function calls:
 11764 ;;		_lcd_send_byte
 11765 ;; This function is called by:
 11766 ;;		_lcd_putc
 11767 ;;		_autoCool
 11768 ;;		_autoHeat
 11769 ;;		_main
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text32
 11774  0042DA                     __ptext32:
 11775                           	opt stack 0
 11776  0042DA                     _lcd_gotoxy:
 11777                           	opt stack 22
 11778                           
 11779                           ;incstack = 0
 11780                           ;lcd_gotoxy@x stored from wreg
 11781  0042DA  0100               	movlb	0	; () banked
 11782  0042DC  6F8B               	movwf	lcd_gotoxy@x& (0+255),b
 11783                           
 11784                           ;Main.c: 188: unsigned char address;
 11785                           ;Main.c: 190: switch (y) {
 11786  0042DE  D00A               	goto	l179
 11787  0042E0  0E80               	movlw	128
 11788  0042E2  0100               	movlb	0	; () banked
 11789  0042E4  D005               	goto	L19
 11790  0042E6                     
 11791                           ; BSR set to: 0
 11792                           
 11793                           ; BSR set to: 0
 11794  0042E6  0EC0               	movlw	192
 11795  0042E8  D003               	goto	L19
 11796  0042EA                     
 11797                           ; BSR set to: 0
 11798                           
 11799                           ; BSR set to: 0
 11800  0042EA  0E90               	movlw	144
 11801  0042EC  D001               	goto	L19
 11802  0042EE                     
 11803                           ; BSR set to: 0
 11804                           
 11805                           ; BSR set to: 0
 11806  0042EE  0ED0               	movlw	208
 11807  0042F0                     L19:
 11808  0042F0  6F8C               	movwf	lcd_gotoxy@address& (0+255),b
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;Main.c: 199: }
 11812                           
 11813                           ;Main.c: 198: break;
 11814  0042F2  D00E               	goto	l181
 11815  0042F4                     l179:
 11816                           
 11817                           ; BSR set to: 0
 11818  0042F4  0100               	movlb	0	; () banked
 11819  0042F6  518A               	movf	lcd_gotoxy@y& (0+255),w,b
 11820                           
 11821                           ; Switch size 1, requested type "space"
 11822                           ; Number of cases is 4, Range of values is 1 to 4
 11823                           ; switch strategies available:
 11824                           ; Name         Instructions Cycles
 11825                           ; simple_byte           13     7 (average)
 11826                           ;	Chosen strategy is simple_byte
 11827  0042F8  0A01               	xorlw	1	; case 1
 11828  0042FA  B4D8               	btfsc	status,2,c
 11829  0042FC  D7F1               	goto	l180
 11830  0042FE  0A03               	xorlw	3	; case 2
 11831  004300  B4D8               	btfsc	status,2,c
 11832  004302  D7F1               	goto	l182
 11833  004304  0A01               	xorlw	1	; case 3
 11834  004306  B4D8               	btfsc	status,2,c
 11835  004308  D7F0               	goto	l183
 11836  00430A  0A07               	xorlw	7	; case 4
 11837  00430C  B4D8               	btfsc	status,2,c
 11838  00430E  D7EF               	goto	l184
 11839  004310                     l181:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;Main.c: 200: address += x - 1;
 11843                           
 11844                           ; BSR set to: 0
 11845  004310  058B               	decf	lcd_gotoxy@x& (0+255),w,b
 11846  004312  278C               	addwf	lcd_gotoxy@address& (0+255),f,b
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;Main.c: 201: lcd_send_byte(0, (unsigned char) (0x80 | address));
 11850  004314  518C               	movf	lcd_gotoxy@address& (0+255),w,b
 11851  004316  0980               	iorlw	128
 11852  004318  6F88               	movwf	lcd_send_byte@n& (0+255),b
 11853  00431A  0E00               	movlw	0
 11854  00431C  EC1F  F021         	call	_lcd_send_byte
 11855  004320  0012               	return		;funcret
 11856  004322                     __end_of_lcd_gotoxy:
 11857                           	opt stack 0
 11858                           tblptru	equ	0xFF8
 11859                           tblptrh	equ	0xFF7
 11860                           tblptrl	equ	0xFF6
 11861                           tablat	equ	0xFF5
 11862                           prodh	equ	0xFF4
 11863                           prodl	equ	0xFF3
 11864                           intcon	equ	0xFF2
 11865                           intcon2	equ	0xFF1
 11866                           intcon3	equ	0xFF0
 11867                           indf0	equ	0xFEF
 11868                           postinc0	equ	0xFEE
 11869                           fsr0h	equ	0xFEA
 11870                           fsr0l	equ	0xFE9
 11871                           wreg	equ	0xFE8
 11872                           postdec1	equ	0xFE5
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           postdec2	equ	0xFDD
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function _lcd_send_byte *****************
 11882 ;; Defined at:
 11883 ;;		line 161 in file "Main.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  cm_data         1    wreg     unsigned char 
 11886 ;;  n               1    8[BANK0 ] unsigned char 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  cm_data         1    9[BANK0 ] unsigned char 
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg, status,2, status,0, cstack
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11898 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;Total ram usage:        2 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    5
 11905 ;; This function calls:
 11906 ;;		_delay_cycles
 11907 ;;		_delay_ms
 11908 ;;		_lcd_send_nibble
 11909 ;; This function is called by:
 11910 ;;		_lcd_init
 11911 ;;		_lcd_gotoxy
 11912 ;;		_lcd_putc
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text33
 11917  00423E                     __ptext33:
 11918                           	opt stack 0
 11919  00423E                     _lcd_send_byte:
 11920                           	opt stack 23
 11921                           
 11922                           ;incstack = 0
 11923                           ;lcd_send_byte@cm_data stored from wreg
 11924  00423E  0100               	movlb	0	; () banked
 11925  004240  6F89               	movwf	lcd_send_byte@cm_data& (0+255),b
 11926                           
 11927                           ;Main.c: 162: PORTEbits.RE2 = cm_data;
 11928  004242  0100               	movlb	0	; () banked
 11929  004244  B189               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
 11930  004246  D002               	bra	u3935
 11931  004248  9484               	bcf	3972,2,c	;volatile
 11932  00424A  D001               	bra	u3936
 11933  00424C                     u3935:
 11934  00424C  8484               	bsf	3972,2,c	;volatile
 11935  00424E                     u3936:
 11936                           
 11937                           ;Main.c: 163: delay_cycles(1);
 11938  00424E  0E01               	movlw	1
 11939  004250  ECD2  F021         	call	_delay_cycles
 11940                           
 11941                           ;Main.c: 164: delay_cycles(1);
 11942  004254  0E01               	movlw	1
 11943  004256  ECD2  F021         	call	_delay_cycles
 11944                           
 11945                           ;Main.c: 165: PORTEbits.RE1 = 0;
 11946  00425A  9284               	bcf	3972,1,c	;volatile
 11947                           
 11948                           ;Main.c: 166: lcd_send_nibble(n >> 4);
 11949  00425C  0100               	movlb	0	; () banked
 11950  00425E  3988               	swapf	lcd_send_byte@n& (0+255),w,b
 11951  004260  0B0F               	andlw	15
 11952  004262  EC73  F022         	call	_lcd_send_nibble
 11953                           
 11954                           ;Main.c: 167: lcd_send_nibble(n & 0x0f);
 11955  004266  0100               	movlb	0	; () banked
 11956  004268  5188               	movf	lcd_send_byte@n& (0+255),w,b
 11957  00426A  0B0F               	andlw	15
 11958  00426C  EC73  F022         	call	_lcd_send_nibble
 11959                           
 11960                           ;Main.c: 168: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 11961  004270  0100               	movlb	0	; () banked
 11962  004272  5189               	movf	lcd_send_byte@cm_data& (0+255),w,b
 11963  004274  B4D8               	btfsc	status,2,c
 11964  004276  D005               	goto	l167
 11965                           
 11966                           ; BSR set to: 0
 11967  004278  0E32               	movlw	50
 11968  00427A                     u7817:
 11969  00427A  0004               	clrwdt	
 11970  00427C  2EE8               	decfsz	wreg,f,c
 11971  00427E  D7FD               	bra	u7817
 11972  004280  0012               	return	
 11973  004282                     l167:
 11974                           
 11975                           ;Main.c: 169: else delay_ms(2);
 11976  004282  0E00               	movlw	0
 11977  004284  0100               	movlb	0	; () banked
 11978  004286  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11979  004288  0E02               	movlw	2
 11980  00428A  6F80               	movwf	delay_ms@n& (0+255),b
 11981  00428C  EC4A  F022         	call	_delay_ms	;wreg free
 11982  004290  0012               	return	
 11983  004292                     __end_of_lcd_send_byte:
 11984                           	opt stack 0
 11985                           tblptru	equ	0xFF8
 11986                           tblptrh	equ	0xFF7
 11987                           tblptrl	equ	0xFF6
 11988                           tablat	equ	0xFF5
 11989                           prodh	equ	0xFF4
 11990                           prodl	equ	0xFF3
 11991                           intcon	equ	0xFF2
 11992                           intcon2	equ	0xFF1
 11993                           intcon3	equ	0xFF0
 11994                           indf0	equ	0xFEF
 11995                           postinc0	equ	0xFEE
 11996                           fsr0h	equ	0xFEA
 11997                           fsr0l	equ	0xFE9
 11998                           wreg	equ	0xFE8
 11999                           postdec1	equ	0xFE5
 12000                           fsr1l	equ	0xFE1
 12001                           indf2	equ	0xFDF
 12002                           postinc2	equ	0xFDE
 12003                           postdec2	equ	0xFDD
 12004                           fsr2h	equ	0xFDA
 12005                           fsr2l	equ	0xFD9
 12006                           status	equ	0xFD8
 12007                           
 12008 ;; *************** function _lcd_send_nibble *****************
 12009 ;; Defined at:
 12010 ;;		line 153 in file "Main.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  n               1    wreg     unsigned char 
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;  n               1    7[BANK0 ] unsigned char 
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  1    wreg      void 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2, status,0, cstack
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;Total ram usage:        2 bytes
 12029 ;; Hardware stack levels used:    1
 12030 ;; Hardware stack levels required when called:    4
 12031 ;; This function calls:
 12032 ;;		_delay_cycles
 12033 ;; This function is called by:
 12034 ;;		_lcd_send_byte
 12035 ;;		_lcd_init
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           	psect	text34
 12040  0044E6                     __ptext34:
 12041                           	opt stack 0
 12042  0044E6                     _lcd_send_nibble:
 12043                           	opt stack 23
 12044                           
 12045                           ;incstack = 0
 12046                           ;lcd_send_nibble@n stored from wreg
 12047  0044E6  0100               	movlb	0	; () banked
 12048  0044E8  6F87               	movwf	lcd_send_nibble@n& (0+255),b
 12049                           
 12050                           ;Main.c: 154: lcd.data = n;
 12051  0044EA  C087  F086         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 12052  0044EE  0100               	movlb	0	; () banked
 12053  0044F0  3B86               	swapf	??_lcd_send_nibble& (0+255),f,b
 12054  0044F2  5083               	movf	3971,w,c
 12055  0044F4  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 12056  0044F6  0B0F               	andlw	-241
 12057  0044F8  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 12058  0044FA  6E83               	movwf	3971,c
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;Main.c: 155: delay_cycles(1);
 12062  0044FC  0E01               	movlw	1
 12063  0044FE  ECD2  F021         	call	_delay_cycles
 12064                           
 12065                           ;Main.c: 156: PORTEbits.RE1 = 1;
 12066  004502  8284               	bsf	3972,1,c	;volatile
 12067                           
 12068                           ;Main.c: 157: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 12069  004504  0004               	clrwdt	
 12070  004506  F000               	nop		;2 cycle nop
 12071                           
 12072                           ;Main.c: 158: PORTEbits.RE1 = 0;
 12073  004508  9284               	bcf	3972,1,c	;volatile
 12074  00450A  0012               	return		;funcret
 12075  00450C                     __end_of_lcd_send_nibble:
 12076                           	opt stack 0
 12077                           tblptru	equ	0xFF8
 12078                           tblptrh	equ	0xFF7
 12079                           tblptrl	equ	0xFF6
 12080                           tablat	equ	0xFF5
 12081                           prodh	equ	0xFF4
 12082                           prodl	equ	0xFF3
 12083                           intcon	equ	0xFF2
 12084                           intcon2	equ	0xFF1
 12085                           intcon3	equ	0xFF0
 12086                           indf0	equ	0xFEF
 12087                           postinc0	equ	0xFEE
 12088                           fsr0h	equ	0xFEA
 12089                           fsr0l	equ	0xFE9
 12090                           wreg	equ	0xFE8
 12091                           postdec1	equ	0xFE5
 12092                           fsr1l	equ	0xFE1
 12093                           indf2	equ	0xFDF
 12094                           postinc2	equ	0xFDE
 12095                           postdec2	equ	0xFDD
 12096                           fsr2h	equ	0xFDA
 12097                           fsr2l	equ	0xFD9
 12098                           status	equ	0xFD8
 12099                           
 12100 ;; *************** function _delay_cycles *****************
 12101 ;; Defined at:
 12102 ;;		line 148 in file "Main.c"
 12103 ;; Parameters:    Size  Location     Type
 12104 ;;  n               1    wreg     unsigned char 
 12105 ;; Auto vars:     Size  Location     Type
 12106 ;;  n               1    3[BANK0 ] unsigned char 
 12107 ;;  x               2    4[BANK0 ] int 
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1    wreg      void 
 12110 ;; Registers used:
 12111 ;;		wreg, status,2, status,0
 12112 ;; Tracked objects:
 12113 ;;		On entry : 0/0
 12114 ;;		On exit  : 0/0
 12115 ;;		Unchanged: 0/0
 12116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12118 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12120 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;Total ram usage:        6 bytes
 12122 ;; Hardware stack levels used:    1
 12123 ;; Hardware stack levels required when called:    3
 12124 ;; This function calls:
 12125 ;;		Nothing
 12126 ;; This function is called by:
 12127 ;;		_lcd_send_nibble
 12128 ;;		_lcd_send_byte
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text35
 12133  0043A4                     __ptext35:
 12134                           	opt stack 0
 12135  0043A4                     _delay_cycles:
 12136                           	opt stack 23
 12137                           
 12138                           ;incstack = 0
 12139                           ;delay_cycles@n stored from wreg
 12140  0043A4  0100               	movlb	0	; () banked
 12141  0043A6  6F83               	movwf	delay_cycles@n& (0+255),b
 12142                           
 12143                           ;Main.c: 149: int x;
 12144                           ;Main.c: 150: for (x = 0; x <= n; x++) asm(" clrwdt");
 12145  0043A8  0E00               	movlw	0
 12146  0043AA  0100               	movlb	0	; () banked
 12147  0043AC  6F85               	movwf	(delay_cycles@x+1)& (0+255),b
 12148  0043AE  0E00               	movlw	0
 12149  0043B0  6F84               	movwf	delay_cycles@x& (0+255),b
 12150  0043B2  D004               	goto	l158
 12151  0043B4                     l159:
 12152                           
 12153                           ; BSR set to: 0
 12154  0043B4  0004               	clrwdt		;# 
 12155  0043B6  0100               	movlb	0	; () banked
 12156  0043B8  4B84               	infsnz	delay_cycles@x& (0+255),f,b
 12157  0043BA  2B85               	incf	(delay_cycles@x+1)& (0+255),f,b
 12158  0043BC                     l158:
 12159                           
 12160                           ; BSR set to: 0
 12161                           
 12162                           ; BSR set to: 0
 12163  0043BC  5183               	movf	delay_cycles@n& (0+255),w,b
 12164  0043BE  6F80               	movwf	??_delay_cycles& (0+255),b
 12165  0043C0  6B81               	clrf	(??_delay_cycles+1)& (0+255),b
 12166  0043C2  5184               	movf	delay_cycles@x& (0+255),w,b
 12167  0043C4  5D80               	subwf	??_delay_cycles& (0+255),w,b
 12168  0043C6  5181               	movf	(??_delay_cycles+1)& (0+255),w,b
 12169  0043C8  0A80               	xorlw	128
 12170  0043CA  6F82               	movwf	(??_delay_cycles+2)& (0+255),b
 12171  0043CC  5185               	movf	(delay_cycles@x+1)& (0+255),w,b
 12172  0043CE  0A80               	xorlw	128
 12173  0043D0  5982               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 12174  0043D2  A0D8               	btfss	status,0,c
 12175  0043D4  0012               	return	
 12176  0043D6  D7EE               	goto	l159
 12177  0043D8                     __end_of_delay_cycles:
 12178                           	opt stack 0
 12179                           tblptru	equ	0xFF8
 12180                           tblptrh	equ	0xFF7
 12181                           tblptrl	equ	0xFF6
 12182                           tablat	equ	0xFF5
 12183                           prodh	equ	0xFF4
 12184                           prodl	equ	0xFF3
 12185                           intcon	equ	0xFF2
 12186                           intcon2	equ	0xFF1
 12187                           intcon3	equ	0xFF0
 12188                           indf0	equ	0xFEF
 12189                           postinc0	equ	0xFEE
 12190                           fsr0h	equ	0xFEA
 12191                           fsr0l	equ	0xFE9
 12192                           wreg	equ	0xFE8
 12193                           postdec1	equ	0xFE5
 12194                           fsr1l	equ	0xFE1
 12195                           indf2	equ	0xFDF
 12196                           postinc2	equ	0xFDE
 12197                           postdec2	equ	0xFDD
 12198                           fsr2h	equ	0xFDA
 12199                           fsr2l	equ	0xFD9
 12200                           status	equ	0xFD8
 12201                           
 12202 ;; *************** function _delay_ms *****************
 12203 ;; Defined at:
 12204 ;;		line 120 in file "Main.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;  n               2    0[BANK0 ] unsigned int 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  i               2    2[BANK0 ] int 
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, status,2, status,0
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;Total ram usage:        4 bytes
 12223 ;; Hardware stack levels used:    1
 12224 ;; Hardware stack levels required when called:    3
 12225 ;; This function calls:
 12226 ;;		Nothing
 12227 ;; This function is called by:
 12228 ;;		_lcd_send_byte
 12229 ;;		_lcd_init
 12230 ;;		_lcd_putc
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text36
 12235  004494                     __ptext36:
 12236                           	opt stack 0
 12237  004494                     _delay_ms:
 12238                           	opt stack 24
 12239                           
 12240                           ;Main.c: 121: int i;
 12241                           ;Main.c: 122: for (i=0; i < n; i++) _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;incstack = 0
 12245  004494  0E00               	movlw	0
 12246  004496  0100               	movlb	0	; () banked
 12247  004498  6F83               	movwf	(delay_ms@i+1)& (0+255),b
 12248  00449A  0E00               	movlw	0
 12249  00449C  6F82               	movwf	delay_ms@i& (0+255),b
 12250  00449E  D008               	goto	l140
 12251  0044A0                     
 12252                           ; BSR set to: 0
 12253                           
 12254                           ; BSR set to: 0
 12255  0044A0  0EC8               	movlw	200
 12256  0044A2                     u7827:
 12257  0044A2  0004               	clrwdt	
 12258  0044A4  0004               	clrwdt	
 12259  0044A6  2EE8               	decfsz	wreg,f,c
 12260  0044A8  D7FC               	bra	u7827
 12261  0044AA  0100               	movlb	0	; () banked
 12262  0044AC  4B82               	infsnz	delay_ms@i& (0+255),f,b
 12263  0044AE  2B83               	incf	(delay_ms@i+1)& (0+255),f,b
 12264  0044B0                     l140:
 12265                           
 12266                           ; BSR set to: 0
 12267  0044B0  5180               	movf	delay_ms@n& (0+255),w,b
 12268  0044B2  5D82               	subwf	delay_ms@i& (0+255),w,b
 12269  0044B4  5181               	movf	(delay_ms@n+1)& (0+255),w,b
 12270  0044B6  5983               	subwfb	(delay_ms@i+1)& (0+255),w,b
 12271  0044B8  B0D8               	btfsc	status,0,c
 12272  0044BA  0012               	return	
 12273  0044BC  D7F1               	goto	l141
 12274  0044BE                     __end_of_delay_ms:
 12275                           	opt stack 0
 12276                           tblptru	equ	0xFF8
 12277                           tblptrh	equ	0xFF7
 12278                           tblptrl	equ	0xFF6
 12279                           tablat	equ	0xFF5
 12280                           prodh	equ	0xFF4
 12281                           prodl	equ	0xFF3
 12282                           intcon	equ	0xFF2
 12283                           intcon2	equ	0xFF1
 12284                           intcon3	equ	0xFF0
 12285                           indf0	equ	0xFEF
 12286                           postinc0	equ	0xFEE
 12287                           fsr0h	equ	0xFEA
 12288                           fsr0l	equ	0xFE9
 12289                           wreg	equ	0xFE8
 12290                           postdec1	equ	0xFE5
 12291                           fsr1l	equ	0xFE1
 12292                           indf2	equ	0xFDF
 12293                           postinc2	equ	0xFDE
 12294                           postdec2	equ	0xFDD
 12295                           fsr2h	equ	0xFDA
 12296                           fsr2l	equ	0xFD9
 12297                           status	equ	0xFD8
 12298                           
 12299 ;; *************** function _highIsr *****************
 12300 ;; Defined at:
 12301 ;;		line 295 in file "Main.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;		None
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;		None
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12316 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12317 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12318 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12319 ;;Total ram usage:       24 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    2
 12322 ;; This function calls:
 12323 ;;		_changeOperationMode
 12324 ;;		_decrementHS
 12325 ;;		_decrementPercentCoolCounter
 12326 ;;		_decrementPercentHeatCounter
 12327 ;;		_incrementHS
 12328 ;;		_incrementPercentCoolCounter
 12329 ;;		_incrementPercentHeatCounter
 12330 ;;		_restartTimer3
 12331 ;;		i2___fladd
 12332 ;;		i2___flge
 12333 ;;		i2___flmul
 12334 ;;		i2___flneg
 12335 ;;		i2___xxtofl
 12336 ;;		i2_set_pwm1_percent
 12337 ;; This function is called by:
 12338 ;;		Interrupt level 2
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	intcode
 12343  000008                     __pintcode:
 12344                           	opt stack 0
 12345  000008                     _highIsr:
 12346                           	opt stack 21
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;incstack = 0
 12350  000008  827B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12351  00000A  EDE5  F011         	call	int_func,f	;refresh shadow registers
 12352                           tblptru	equ	0xFF8
 12353                           tblptrh	equ	0xFF7
 12354                           tblptrl	equ	0xFF6
 12355                           tablat	equ	0xFF5
 12356                           prodh	equ	0xFF4
 12357                           prodl	equ	0xFF3
 12358                           intcon	equ	0xFF2
 12359                           intcon2	equ	0xFF1
 12360                           intcon3	equ	0xFF0
 12361                           indf0	equ	0xFEF
 12362                           postinc0	equ	0xFEE
 12363                           fsr0h	equ	0xFEA
 12364                           fsr0l	equ	0xFE9
 12365                           wreg	equ	0xFE8
 12366                           postdec1	equ	0xFE5
 12367                           fsr1l	equ	0xFE1
 12368                           indf2	equ	0xFDF
 12369                           postinc2	equ	0xFDE
 12370                           postdec2	equ	0xFDD
 12371                           fsr2h	equ	0xFDA
 12372                           fsr2l	equ	0xFD9
 12373                           status	equ	0xFD8
 12374                           
 12375                           	psect	intcode_body
 12376  0023CA                     __pintcode_body:
 12377                           	opt stack 21
 12378  0023CA                     int_func:
 12379                           	opt stack 21
 12380  0023CA  0006               	pop		; remove dummy address from shadow register refresh
 12381  0023CC  CFFA F04D          	movff	pclath,??_highIsr+2
 12382  0023D0  CFFB F04E          	movff	pclatu,??_highIsr+3
 12383  0023D4  CFE9 F04F          	movff	fsr0l,??_highIsr+4
 12384  0023D8  CFEA F050          	movff	fsr0h,??_highIsr+5
 12385  0023DC  CFE1 F051          	movff	fsr1l,??_highIsr+6
 12386  0023E0  CFE2 F052          	movff	fsr1h,??_highIsr+7
 12387  0023E4  CFD9 F053          	movff	fsr2l,??_highIsr+8
 12388  0023E8  CFDA F054          	movff	fsr2h,??_highIsr+9
 12389  0023EC  CFF3 F055          	movff	prodl,??_highIsr+10
 12390  0023F0  CFF4 F056          	movff	prodh,??_highIsr+11
 12391  0023F4  CFF6 F057          	movff	tblptrl,??_highIsr+12
 12392  0023F8  CFF7 F058          	movff	tblptrh,??_highIsr+13
 12393  0023FC  CFF8 F059          	movff	tblptru,??_highIsr+14
 12394  002400  CFF5 F05A          	movff	tablat,??_highIsr+15
 12395  002404  C07B  F05B         	movff	btemp,??_highIsr+16
 12396  002408  C07C  F05C         	movff	btemp+1,??_highIsr+17
 12397  00240C  C07D  F05D         	movff	btemp+2,??_highIsr+18
 12398  002410  C07E  F05E         	movff	btemp+3,??_highIsr+19
 12399                           
 12400                           ;Main.c: 297: if(PIR2bits.TMR3IF) {
 12401  002414  A2A1               	btfss	4001,1,c	;volatile
 12402  002416  D103               	goto	i2l262
 12403                           
 12404                           ;Main.c: 298: RPS_count = ((unsigned int) TMR1H << 8) | (TMR1L);
 12405  002418  50CF               	movf	4047,w,c	;volatile
 12406  00241A  6E4B               	movwf	??_highIsr& (0+255),c
 12407  00241C  50CE               	movf	4046,w,c	;volatile
 12408  00241E  0101               	movlb	1	; () banked
 12409  002420  6F4D               	movwf	_RPS_count& (0+255),b
 12410  002422  C04B  F14E         	movff	??_highIsr,_RPS_count+1
 12411                           
 12412                           ; BSR set to: 1
 12413                           ;Main.c: 299: PIR2bits.TMR3IF = 0;
 12414  002426  92A1               	bcf	4001,1,c	;volatile
 12415                           
 12416                           ; BSR set to: 1
 12417                           ;Main.c: 300: if (operationMode == 2 && (autoMode==0 || ((autoMode==2) && (RT > SP)))) {
 12418  002428  0E02               	movlw	2
 12419  00242A  1873               	xorwf	_operationMode,w,c
 12420  00242C  1074               	iorwf	_operationMode+1,w,c
 12421  00242E  A4D8               	btfss	status,2,c
 12422  002430  D07A               	goto	i2l271
 12423                           
 12424                           ; BSR set to: 1
 12425  002432  5071               	movf	_autoMode,w,c
 12426  002434  1072               	iorwf	_autoMode+1,w,c
 12427  002436  B4D8               	btfsc	status,2,c
 12428  002438  D019               	goto	i2u740_40
 12429                           
 12430                           ; BSR set to: 1
 12431  00243A  0E02               	movlw	2
 12432  00243C  1871               	xorwf	_autoMode,w,c
 12433  00243E  1072               	iorwf	_autoMode+1,w,c
 12434  002440  A4D8               	btfss	status,2,c
 12435  002442  D071               	goto	i2l271
 12436                           
 12437                           ; BSR set to: 1
 12438  002444  C183  F027         	movff	_SP,i2___flge@ff1
 12439  002448  C184  F028         	movff	_SP+1,i2___flge@ff1+1
 12440  00244C  C185  F029         	movff	_SP+2,i2___flge@ff1+2
 12441  002450  C186  F02A         	movff	_SP+3,i2___flge@ff1+3
 12442  002454  C17B  F02B         	movff	_RT,i2___flge@ff2
 12443  002458  C17C  F02C         	movff	_RT+1,i2___flge@ff2+1
 12444  00245C  C17D  F02D         	movff	_RT+2,i2___flge@ff2+2
 12445  002460  C17E  F02E         	movff	_RT+3,i2___flge@ff2+3
 12446  002464  EC9F  F01C         	call	i2___flge	;wreg free
 12447  002468  B0D8               	btfsc	status,0,c
 12448  00246A  D05D               	goto	i2l271
 12449  00246C                     i2u740_40:
 12450                           
 12451                           ;Main.c: 301: if(RT<(SP-HS)) {
 12452  00246C  C17B  F027         	movff	_RT,i2___flge@ff1
 12453  002470  C17C  F028         	movff	_RT+1,i2___flge@ff1+1
 12454  002474  C17D  F029         	movff	_RT+2,i2___flge@ff1+2
 12455  002478  C17E  F02A         	movff	_RT+3,i2___flge@ff1+3
 12456  00247C  C183  F017         	movff	_SP,i2___fladd@a
 12457  002480  C184  F018         	movff	_SP+1,i2___fladd@a+1
 12458  002484  C185  F019         	movff	_SP+2,i2___fladd@a+2
 12459  002488  C186  F01A         	movff	_SP+3,i2___fladd@a+3
 12460  00248C  C151  F001         	movff	_HS,i2___xxtofl@val
 12461  002490  C152  F002         	movff	_HS+1,i2___xxtofl@val+1
 12462  002494  6A03               	clrf	i2___xxtofl@val+2,c
 12463  002496  6A04               	clrf	i2___xxtofl@val+3,c
 12464  002498  0E00               	movlw	0
 12465  00249A  EC37  F01A         	call	i2___xxtofl
 12466  00249E  C001  F00F         	movff	?i2___xxtofl,i2___flneg@f1
 12467  0024A2  C002  F010         	movff	?i2___xxtofl+1,i2___flneg@f1+1
 12468  0024A6  C003  F011         	movff	?i2___xxtofl+2,i2___flneg@f1+2
 12469  0024AA  C004  F012         	movff	?i2___xxtofl+3,i2___flneg@f1+3
 12470  0024AE  EC33  F022         	call	i2___flneg	;wreg free
 12471  0024B2  C00F  F013         	movff	?i2___flneg,i2___fladd@b
 12472  0024B6  C010  F014         	movff	?i2___flneg+1,i2___fladd@b+1
 12473  0024BA  C011  F015         	movff	?i2___flneg+2,i2___fladd@b+2
 12474  0024BE  C012  F016         	movff	?i2___flneg+3,i2___fladd@b+3
 12475  0024C2  EC47  F010         	call	i2___fladd	;wreg free
 12476  0024C6  C013  F02B         	movff	?i2___fladd,i2___flge@ff2
 12477  0024CA  C014  F02C         	movff	?i2___fladd+1,i2___flge@ff2+1
 12478  0024CE  C015  F02D         	movff	?i2___fladd+2,i2___flge@ff2+2
 12479  0024D2  C016  F02E         	movff	?i2___fladd+3,i2___flge@ff2+3
 12480  0024D6  EC9F  F01C         	call	i2___flge	;wreg free
 12481  0024DA  B0D8               	btfsc	status,0,c
 12482  0024DC  D023               	goto	i2l266
 12483                           
 12484                           ;Main.c: 302: set_pwm1_percent(0.0);
 12485  0024DE  0E00               	movlw	0
 12486  0024E0  6E41               	movwf	i2set_pwm1_percent@value,c
 12487  0024E2  0E00               	movlw	0
 12488  0024E4  6E42               	movwf	i2set_pwm1_percent@value+1,c
 12489  0024E6  0E00               	movlw	0
 12490  0024E8  6E43               	movwf	i2set_pwm1_percent@value+2,c
 12491  0024EA  0E00               	movlw	0
 12492  0024EC  6E44               	movwf	i2set_pwm1_percent@value+3,c
 12493  0024EE  ECF7  F01E         	call	i2_set_pwm1_percent	;wreg free
 12494                           
 12495                           ;Main.c: 303: if ( timerCounter++ < 5) PORTCbits.RC5 = 1;
 12496  0024F2  506D               	movf	_timerCounter,w,c
 12497  0024F4  6E4B               	movwf	??_highIsr& (0+255),c
 12498  0024F6  506E               	movf	_timerCounter+1,w,c
 12499  0024F8  6E4C               	movwf	(??_highIsr+1)& (0+255),c
 12500  0024FA  4A6D               	infsnz	_timerCounter,f,c
 12501  0024FC  2A6E               	incf	_timerCounter+1,f,c
 12502  0024FE  504C               	movf	??_highIsr+1,w,c
 12503  002500  E106               	bnz	i2l5916
 12504  002502  0E05               	movlw	5
 12505  002504  5C4B               	subwf	??_highIsr,w,c
 12506  002506  B0D8               	btfsc	status,0,c
 12507  002508  D002               	goto	i2l267
 12508  00250A  8A82               	bsf	3970,5,c	;volatile
 12509  00250C  D00C               	goto	i2l271
 12510  00250E                     i2l267:
 12511  00250E                     i2l5916:
 12512                           
 12513                           ;Main.c: 304: else if ( timerCounter <= 10 ) PORTCbits.RC5 = 0;
 12514  00250E  506E               	movf	_timerCounter+1,w,c
 12515  002510  E104               	bnz	i2l5920
 12516  002512  0E0B               	movlw	11
 12517  002514  5C6D               	subwf	_timerCounter,w,c
 12518  002516  A0D8               	btfss	status,0,c
 12519  002518  D005               	goto	i2l266
 12520  00251A                     i2l5920:
 12521                           
 12522                           ;Main.c: 305: else timerCounter = 0;
 12523  00251A  0E00               	movlw	0
 12524  00251C  6E6E               	movwf	_timerCounter+1,c
 12525  00251E  0E00               	movlw	0
 12526  002520  6E6D               	movwf	_timerCounter,c
 12527                           
 12528                           ;Main.c: 306: }else {
 12529  002522  D001               	goto	i2l271
 12530  002524                     i2l266:
 12531                           
 12532                           ;Main.c: 307: PORTCbits.RC5 = 0;
 12533  002524  9A82               	bcf	3970,5,c	;volatile
 12534  002526                     i2l271:
 12535                           
 12536                           ;Main.c: 308: }
 12537                           ;Main.c: 309: }
 12538                           ;Main.c: 311: if ((operationMode == 0) || (operationMode == 2 && autoMode == 1) || (oper
      +                          ationMode == 2 && autoMode == 2)) {
 12539  002526  5073               	movf	_operationMode,w,c
 12540  002528  1074               	iorwf	_operationMode+1,w,c
 12541  00252A  B4D8               	btfsc	status,2,c
 12542  00252C  D013               	goto	i2u748_40
 12543  00252E  0E02               	movlw	2
 12544  002530  1873               	xorwf	_operationMode,w,c
 12545  002532  1074               	iorwf	_operationMode+1,w,c
 12546  002534  A4D8               	btfss	status,2,c
 12547  002536  D004               	goto	i2u746_40
 12548  002538  0471               	decf	_autoMode,w,c
 12549  00253A  1072               	iorwf	_autoMode+1,w,c
 12550  00253C  B4D8               	btfsc	status,2,c
 12551  00253E  D00A               	goto	i2u748_40
 12552  002540                     i2u746_40:
 12553  002540  0E02               	movlw	2
 12554  002542  1873               	xorwf	_operationMode,w,c
 12555  002544  1074               	iorwf	_operationMode+1,w,c
 12556  002546  A4D8               	btfss	status,2,c
 12557  002548  D035               	goto	i2l272
 12558  00254A  0E02               	movlw	2
 12559  00254C  1871               	xorwf	_autoMode,w,c
 12560  00254E  1072               	iorwf	_autoMode+1,w,c
 12561  002550  A4D8               	btfss	status,2,c
 12562  002552  D030               	goto	i2l272
 12563  002554                     i2u748_40:
 12564                           
 12565                           ;Main.c: 312: if(!(operationMode == 2 && autoMode == 2)) {
 12566  002554  0E02               	movlw	2
 12567  002556  1873               	xorwf	_operationMode,w,c
 12568  002558  1074               	iorwf	_operationMode+1,w,c
 12569  00255A  A4D8               	btfss	status,2,c
 12570  00255C  D005               	goto	i2u750_40
 12571  00255E  0E02               	movlw	2
 12572  002560  1871               	xorwf	_autoMode,w,c
 12573  002562  1072               	iorwf	_autoMode+1,w,c
 12574  002564  B4D8               	btfsc	status,2,c
 12575  002566  D00A               	goto	i2l277
 12576  002568                     i2u750_40:
 12577                           
 12578                           ;Main.c: 313: set_pwm1_percent(0.0);
 12579  002568  0E00               	movlw	0
 12580  00256A  6E41               	movwf	i2set_pwm1_percent@value,c
 12581  00256C  0E00               	movlw	0
 12582  00256E  6E42               	movwf	i2set_pwm1_percent@value+1,c
 12583  002570  0E00               	movlw	0
 12584  002572  6E43               	movwf	i2set_pwm1_percent@value+2,c
 12585  002574  0E00               	movlw	0
 12586  002576  6E44               	movwf	i2set_pwm1_percent@value+3,c
 12587  002578  ECF7  F01E         	call	i2_set_pwm1_percent	;wreg free
 12588  00257C                     i2l277:
 12589                           
 12590                           ;Main.c: 314: }
 12591                           ;Main.c: 315: if ( timerCounter++ < percentHeatCounter) PORTCbits.RC5 = 1;
 12592  00257C  506D               	movf	_timerCounter,w,c
 12593  00257E  6E4B               	movwf	??_highIsr& (0+255),c
 12594  002580  506E               	movf	_timerCounter+1,w,c
 12595  002582  6E4C               	movwf	(??_highIsr+1)& (0+255),c
 12596  002584  4A6D               	infsnz	_timerCounter,f,c
 12597  002586  2A6E               	incf	_timerCounter+1,f,c
 12598  002588  0101               	movlb	1	; () banked
 12599  00258A  514F               	movf	_percentHeatCounter& (0+255),w,b
 12600  00258C  5C4B               	subwf	??_highIsr,w,c
 12601  00258E  5150               	movf	(_percentHeatCounter+1)& (0+255),w,b
 12602  002590  584C               	subwfb	??_highIsr+1,w,c
 12603  002592  B0D8               	btfsc	status,0,c
 12604  002594  D002               	goto	i2l280
 12605                           
 12606                           ; BSR set to: 1
 12607  002596  8A82               	bsf	3970,5,c	;volatile
 12608  002598  D03F               	goto	i2l285
 12609  00259A                     i2l280:
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;Main.c: 316: else if ( timerCounter <= 10 ) PORTCbits.RC5 = 0;
 12613                           
 12614                           ; BSR set to: 1
 12615  00259A  506E               	movf	_timerCounter+1,w,c
 12616  00259C  E106               	bnz	i2l5946
 12617  00259E  0E0B               	movlw	11
 12618  0025A0  5C6D               	subwf	_timerCounter,w,c
 12619  0025A2  B0D8               	btfsc	status,0,c
 12620  0025A4  D002               	goto	i2l282
 12621                           
 12622                           ; BSR set to: 1
 12623  0025A6  9A82               	bcf	3970,5,c	;volatile
 12624  0025A8  D037               	goto	i2l285
 12625  0025AA                     i2l282:
 12626  0025AA                     i2l5946:
 12627                           
 12628                           ; BSR set to: 1
 12629                           ;Main.c: 317: else timerCounter = 0;
 12630  0025AA  0E00               	movlw	0
 12631  0025AC  6E6E               	movwf	_timerCounter+1,c
 12632  0025AE  0E00               	movlw	0
 12633  0025B0  6E6D               	movwf	_timerCounter,c
 12634                           
 12635                           ; BSR set to: 1
 12636                           ;Main.c: 318: } else if (operationMode == 1) {
 12637                           
 12638                           ; BSR set to: 1
 12639  0025B2  D032               	goto	i2l285
 12640  0025B4                     i2l272:
 12641                           
 12642                           ; BSR set to: 1
 12643  0025B4  0473               	decf	_operationMode,w,c
 12644  0025B6  1074               	iorwf	_operationMode+1,w,c
 12645  0025B8  A4D8               	btfss	status,2,c
 12646  0025BA  D02E               	goto	i2l285
 12647                           
 12648                           ;Main.c: 319: PORTCbits.RC5 = 0;
 12649  0025BC  9A82               	bcf	3970,5,c	;volatile
 12650                           
 12651                           ;Main.c: 320: set_pwm1_percent(percentCoolCounter * 10.0);
 12652  0025BE  C06F  F001         	movff	_percentCoolCounter,i2___xxtofl@val
 12653  0025C2  C070  F002         	movff	_percentCoolCounter+1,i2___xxtofl@val+1
 12654  0025C6  6A03               	clrf	i2___xxtofl@val+2,c
 12655  0025C8  6A04               	clrf	i2___xxtofl@val+3,c
 12656  0025CA  0E00               	movlw	0
 12657  0025CC  EC37  F01A         	call	i2___xxtofl
 12658  0025D0  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
 12659  0025D4  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
 12660  0025D8  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
 12661  0025DC  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
 12662  0025E0  0E00               	movlw	0
 12663  0025E2  6E13               	movwf	i2___flmul@a,c
 12664  0025E4  0E00               	movlw	0
 12665  0025E6  6E14               	movwf	i2___flmul@a+1,c
 12666  0025E8  0E20               	movlw	32
 12667  0025EA  6E15               	movwf	i2___flmul@a+2,c
 12668  0025EC  0E41               	movlw	65
 12669  0025EE  6E16               	movwf	i2___flmul@a+3,c
 12670  0025F0  EC00  F00D         	call	i2___flmul	;wreg free
 12671  0025F4  C00F  F05F         	movff	?i2___flmul,_highIsr$1984
 12672  0025F8  C010  F060         	movff	?i2___flmul+1,_highIsr$1984+1
 12673  0025FC  C011  F061         	movff	?i2___flmul+2,_highIsr$1984+2
 12674  002600  C012  F062         	movff	?i2___flmul+3,_highIsr$1984+3
 12675                           
 12676                           ;Main.c: 320: set_pwm1_percent(percentCoolCounter * 10.0);
 12677  002604  C05F  F041         	movff	_highIsr$1984,i2set_pwm1_percent@value
 12678  002608  C060  F042         	movff	_highIsr$1984+1,i2set_pwm1_percent@value+1
 12679  00260C  C061  F043         	movff	_highIsr$1984+2,i2set_pwm1_percent@value+2
 12680  002610  C062  F044         	movff	_highIsr$1984+3,i2set_pwm1_percent@value+3
 12681  002614  ECF7  F01E         	call	i2_set_pwm1_percent	;wreg free
 12682  002618                     i2l285:
 12683                           
 12684                           ;Main.c: 321: }
 12685                           ;Main.c: 323: restartTimer3();
 12686  002618  ECC7  F022         	call	_restartTimer3	;wreg free
 12687                           
 12688                           ;Main.c: 325: } else if(INTCONbits.INT0IF) {
 12689  00261C  D02D               	goto	i2l294
 12690  00261E                     i2l262:
 12691  00261E  A2F2               	btfss	intcon,1,c	;volatile
 12692  002620  D004               	goto	i2l287
 12693                           
 12694                           ;Main.c: 326: changeOperationMode();
 12695  002622  EC97  F022         	call	_changeOperationMode	;wreg free
 12696                           
 12697                           ;Main.c: 327: INTCONbits.INT0IF = 0;
 12698  002626  92F2               	bcf	intcon,1,c	;volatile
 12699                           
 12700                           ;Main.c: 328: }else if(INTCON3bits.INT1IF) {
 12701  002628  D027               	goto	i2l294
 12702  00262A                     i2l287:
 12703  00262A  A0F0               	btfss	intcon3,0,c	;volatile
 12704  00262C  D012               	goto	i2l289
 12705                           
 12706                           ;Main.c: 329: if(operationMode == 0) decrementPercentHeatCounter();
 12707  00262E  5073               	movf	_operationMode,w,c
 12708  002630  1074               	iorwf	_operationMode+1,w,c
 12709  002632  B4D8               	btfsc	status,2,c
 12710  002634  ECD0  F022         	call	_decrementPercentHeatCounter	;wreg free
 12711                           
 12712                           ;Main.c: 330: if(operationMode == 1) decrementPercentCoolCounter();
 12713  002638  0473               	decf	_operationMode,w,c
 12714  00263A  1074               	iorwf	_operationMode+1,w,c
 12715  00263C  B4D8               	btfsc	status,2,c
 12716  00263E  ECEA  F022         	call	_decrementPercentCoolCounter	;wreg free
 12717                           
 12718                           ;Main.c: 331: if(operationMode == 2) decrementHS();
 12719  002642  0E02               	movlw	2
 12720  002644  1873               	xorwf	_operationMode,w,c
 12721  002646  1074               	iorwf	_operationMode+1,w,c
 12722  002648  B4D8               	btfsc	status,2,c
 12723  00264A  ECD9  F022         	call	_decrementHS	;wreg free
 12724                           
 12725                           ;Main.c: 332: INTCON3bits.INT1IF = 0;
 12726  00264E  90F0               	bcf	intcon3,0,c	;volatile
 12727                           
 12728                           ;Main.c: 333: }else if(INTCON3bits.INT2IF) {
 12729  002650  D013               	goto	i2l294
 12730  002652                     i2l289:
 12731  002652  A2F0               	btfss	intcon3,1,c	;volatile
 12732  002654  D011               	goto	i2l294
 12733                           
 12734                           ;Main.c: 334: if(operationMode == 0) incrementPercentHeatCounter();
 12735  002656  5073               	movf	_operationMode,w,c
 12736  002658  1074               	iorwf	_operationMode+1,w,c
 12737  00265A  B4D8               	btfsc	status,2,c
 12738  00265C  ECA7  F022         	call	_incrementPercentHeatCounter	;wreg free
 12739                           
 12740                           ;Main.c: 335: if(operationMode == 1) incrementPercentCoolCounter();
 12741  002660  0473               	decf	_operationMode,w,c
 12742  002662  1074               	iorwf	_operationMode+1,w,c
 12743  002664  B4D8               	btfsc	status,2,c
 12744  002666  ECBD  F022         	call	_incrementPercentCoolCounter	;wreg free
 12745                           
 12746                           ;Main.c: 336: if(operationMode == 2) incrementHS();
 12747  00266A  0E02               	movlw	2
 12748  00266C  1873               	xorwf	_operationMode,w,c
 12749  00266E  1074               	iorwf	_operationMode+1,w,c
 12750  002670  B4D8               	btfsc	status,2,c
 12751  002672  ECB2  F022         	call	_incrementHS	;wreg free
 12752                           
 12753                           ;Main.c: 337: INTCON3bits.INT2IF = 0;
 12754  002676  92F0               	bcf	intcon3,1,c	;volatile
 12755  002678                     i2l294:
 12756  002678  C05E  F07E         	movff	??_highIsr+19,btemp+3
 12757  00267C  C05D  F07D         	movff	??_highIsr+18,btemp+2
 12758  002680  C05C  F07C         	movff	??_highIsr+17,btemp+1
 12759  002684  C05B  F07B         	movff	??_highIsr+16,btemp
 12760  002688  C05A  FFF5         	movff	??_highIsr+15,tablat
 12761  00268C  C059  FFF8         	movff	??_highIsr+14,tblptru
 12762  002690  C058  FFF7         	movff	??_highIsr+13,tblptrh
 12763  002694  C057  FFF6         	movff	??_highIsr+12,tblptrl
 12764  002698  C056  FFF4         	movff	??_highIsr+11,prodh
 12765  00269C  C055  FFF3         	movff	??_highIsr+10,prodl
 12766  0026A0  C054  FFDA         	movff	??_highIsr+9,fsr2h
 12767  0026A4  C053  FFD9         	movff	??_highIsr+8,fsr2l
 12768  0026A8  C052  FFE2         	movff	??_highIsr+7,fsr1h
 12769  0026AC  C051  FFE1         	movff	??_highIsr+6,fsr1l
 12770  0026B0  C050  FFEA         	movff	??_highIsr+5,fsr0h
 12771  0026B4  C04F  FFE9         	movff	??_highIsr+4,fsr0l
 12772  0026B8  C04E  FFFB         	movff	??_highIsr+3,pclatu
 12773  0026BC  C04D  FFFA         	movff	??_highIsr+2,pclath
 12774  0026C0  927B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12775  0026C2  0011               	retfie		f
 12776  0026C4                     __end_of_highIsr:
 12777                           	opt stack 0
 12778                           pclatu	equ	0xFFB
 12779                           pclath	equ	0xFFA
 12780                           tblptru	equ	0xFF8
 12781                           tblptrh	equ	0xFF7
 12782                           tblptrl	equ	0xFF6
 12783                           tablat	equ	0xFF5
 12784                           prodh	equ	0xFF4
 12785                           prodl	equ	0xFF3
 12786                           intcon	equ	0xFF2
 12787                           intcon2	equ	0xFF1
 12788                           intcon3	equ	0xFF0
 12789                           indf0	equ	0xFEF
 12790                           postinc0	equ	0xFEE
 12791                           fsr0h	equ	0xFEA
 12792                           fsr0l	equ	0xFE9
 12793                           wreg	equ	0xFE8
 12794                           postdec1	equ	0xFE5
 12795                           fsr1h	equ	0xFE2
 12796                           fsr1l	equ	0xFE1
 12797                           indf2	equ	0xFDF
 12798                           postinc2	equ	0xFDE
 12799                           postdec2	equ	0xFDD
 12800                           fsr2h	equ	0xFDA
 12801                           fsr2l	equ	0xFD9
 12802                           status	equ	0xFD8
 12803                           
 12804 ;; *************** function i2_set_pwm1_percent *****************
 12805 ;; Defined at:
 12806 ;;		line 243 in file "Main.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  value           4   64[COMRAM] float 
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;  set_pwm1_per    4   68[COMRAM] float 
 12811 ;;  set_pwm1_per    2   72[COMRAM] int 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  1    wreg      void 
 12814 ;; Registers used:
 12815 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12822 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12824 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12825 ;;Total ram usage:       10 bytes
 12826 ;; Hardware stack levels used:    1
 12827 ;; Hardware stack levels required when called:    1
 12828 ;; This function calls:
 12829 ;;		i2___fladd
 12830 ;;		i2___fldiv
 12831 ;;		i2___flmul
 12832 ;;		i2___fltol
 12833 ;;		i2_set_pwm1_raw
 12834 ;; This function is called by:
 12835 ;;		_highIsr
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text38
 12840  003DEE                     __ptext38:
 12841                           	opt stack 0
 12842  003DEE                     i2_set_pwm1_percent:
 12843                           	opt stack 21
 12844                           
 12845                           ;Main.c: 244: float tmp = value*1023.0/100.0;
 12846                           
 12847                           ;incstack = 0
 12848  003DEE  0E00               	movlw	0
 12849  003DF0  6E13               	movwf	i2___flmul@a,c
 12850  003DF2  0EC0               	movlw	192
 12851  003DF4  6E14               	movwf	i2___flmul@a+1,c
 12852  003DF6  0E7F               	movlw	127
 12853  003DF8  6E15               	movwf	i2___flmul@a+2,c
 12854  003DFA  0E44               	movlw	68
 12855  003DFC  6E16               	movwf	i2___flmul@a+3,c
 12856  003DFE  C041  F00F         	movff	i2set_pwm1_percent@value,i2___flmul@b
 12857  003E02  C042  F010         	movff	i2set_pwm1_percent@value+1,i2___flmul@b+1
 12858  003E06  C043  F011         	movff	i2set_pwm1_percent@value+2,i2___flmul@b+2
 12859  003E0A  C044  F012         	movff	i2set_pwm1_percent@value+3,i2___flmul@b+3
 12860  003E0E  EC00  F00D         	call	i2___flmul	;wreg free
 12861  003E12  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 12862  003E16  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 12863  003E1A  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 12864  003E1E  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 12865  003E22  0E00               	movlw	0
 12866  003E24  6E2C               	movwf	i2___fldiv@a,c
 12867  003E26  0E00               	movlw	0
 12868  003E28  6E2D               	movwf	i2___fldiv@a+1,c
 12869  003E2A  0EC8               	movlw	200
 12870  003E2C  6E2E               	movwf	i2___fldiv@a+2,c
 12871  003E2E  0E42               	movlw	66
 12872  003E30  6E2F               	movwf	i2___fldiv@a+3,c
 12873  003E32  EC20  F016         	call	i2___fldiv	;wreg free
 12874  003E36  C028  F045         	movff	?i2___fldiv,i2set_pwm1_percent@tmp
 12875  003E3A  C029  F046         	movff	?i2___fldiv+1,i2set_pwm1_percent@tmp+1
 12876  003E3E  C02A  F047         	movff	?i2___fldiv+2,i2set_pwm1_percent@tmp+2
 12877  003E42  C02B  F048         	movff	?i2___fldiv+3,i2set_pwm1_percent@tmp+3
 12878                           
 12879                           ;Main.c: 245: int raw_val = (int)(tmp +0.5);
 12880  003E46  0E00               	movlw	0
 12881  003E48  6E17               	movwf	i2___fladd@a,c
 12882  003E4A  0E00               	movlw	0
 12883  003E4C  6E18               	movwf	i2___fladd@a+1,c
 12884  003E4E  0E00               	movlw	0
 12885  003E50  6E19               	movwf	i2___fladd@a+2,c
 12886  003E52  0E3F               	movlw	63
 12887  003E54  6E1A               	movwf	i2___fladd@a+3,c
 12888  003E56  C045  F013         	movff	i2set_pwm1_percent@tmp,i2___fladd@b
 12889  003E5A  C046  F014         	movff	i2set_pwm1_percent@tmp+1,i2___fladd@b+1
 12890  003E5E  C047  F015         	movff	i2set_pwm1_percent@tmp+2,i2___fladd@b+2
 12891  003E62  C048  F016         	movff	i2set_pwm1_percent@tmp+3,i2___fladd@b+3
 12892  003E66  EC47  F010         	call	i2___fladd	;wreg free
 12893  003E6A  C013  F027         	movff	?i2___fladd,i2___fltol@f1
 12894  003E6E  C014  F028         	movff	?i2___fladd+1,i2___fltol@f1+1
 12895  003E72  C015  F029         	movff	?i2___fladd+2,i2___fltol@f1+2
 12896  003E76  C016  F02A         	movff	?i2___fladd+3,i2___fltol@f1+3
 12897  003E7A  EC29  F01E         	call	i2___fltol	;wreg free
 12898  003E7E  C027  F049         	movff	?i2___fltol,i2set_pwm1_percent@raw_val
 12899  003E82  C028  F04A         	movff	?i2___fltol+1,i2set_pwm1_percent@raw_val+1
 12900                           
 12901                           ;Main.c: 246: if ( raw_val> 1023) raw_val = 1023;
 12902  003E86  BE4A               	btfsc	i2set_pwm1_percent@raw_val+1,7,c
 12903  003E88  D007               	goto	i2l213
 12904  003E8A  0E04               	movlw	4
 12905  003E8C  5C4A               	subwf	i2set_pwm1_percent@raw_val+1,w,c
 12906  003E8E  A0D8               	btfss	status,0,c
 12907  003E90  D003               	goto	i2l213
 12908  003E92  0E03               	movlw	3
 12909  003E94  6E4A               	movwf	i2set_pwm1_percent@raw_val+1,c
 12910  003E96  6849               	setf	i2set_pwm1_percent@raw_val,c
 12911  003E98                     i2l213:
 12912                           
 12913                           ;Main.c: 247: set_pwm1_raw(raw_val);
 12914  003E98  C049  F001         	movff	i2set_pwm1_percent@raw_val,i2set_pwm1_raw@raw_value
 12915  003E9C  C04A  F002         	movff	i2set_pwm1_percent@raw_val+1,i2set_pwm1_raw@raw_value+1
 12916  003EA0  EC1C  F022         	call	i2_set_pwm1_raw	;wreg free
 12917  003EA4  0012               	return		;funcret
 12918  003EA6                     __end_ofi2_set_pwm1_percent:
 12919                           	opt stack 0
 12920                           pclatu	equ	0xFFB
 12921                           pclath	equ	0xFFA
 12922                           tblptru	equ	0xFF8
 12923                           tblptrh	equ	0xFF7
 12924                           tblptrl	equ	0xFF6
 12925                           tablat	equ	0xFF5
 12926                           prodh	equ	0xFF4
 12927                           prodl	equ	0xFF3
 12928                           intcon	equ	0xFF2
 12929                           intcon2	equ	0xFF1
 12930                           intcon3	equ	0xFF0
 12931                           indf0	equ	0xFEF
 12932                           postinc0	equ	0xFEE
 12933                           fsr0h	equ	0xFEA
 12934                           fsr0l	equ	0xFE9
 12935                           wreg	equ	0xFE8
 12936                           postdec1	equ	0xFE5
 12937                           fsr1h	equ	0xFE2
 12938                           fsr1l	equ	0xFE1
 12939                           indf2	equ	0xFDF
 12940                           postinc2	equ	0xFDE
 12941                           postdec2	equ	0xFDD
 12942                           fsr2h	equ	0xFDA
 12943                           fsr2l	equ	0xFD9
 12944                           status	equ	0xFD8
 12945                           
 12946 ;; *************** function i2_set_pwm1_raw *****************
 12947 ;; Defined at:
 12948 ;;		line 238 in file "Main.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;  raw_value       2    0[COMRAM] unsigned int 
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;		None
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      void 
 12955 ;; Registers used:
 12956 ;;		wreg, status,2, status,0
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/0
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;Total ram usage:        4 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; This function calls:
 12969 ;;		Nothing
 12970 ;; This function is called by:
 12971 ;;		i2_set_pwm1_percent
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975                           	psect	text39
 12976  004438                     __ptext39:
 12977                           	opt stack 0
 12978  004438                     i2_set_pwm1_raw:
 12979                           	opt stack 21
 12980                           
 12981                           ;Main.c: 239: CCPR1L = (raw_value >> 2) & 0x00FF;
 12982                           
 12983                           ;incstack = 0
 12984  004438  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 12985  00443C  C002  F004         	movff	i2set_pwm1_raw@raw_value+1,??i2_set_pwm1_raw+1
 12986  004440  90D8               	bcf	status,0,c
 12987  004442  3204               	rrcf	??i2_set_pwm1_raw+1,f,c
 12988  004444  3203               	rrcf	??i2_set_pwm1_raw,f,c
 12989  004446  90D8               	bcf	status,0,c
 12990  004448  3204               	rrcf	??i2_set_pwm1_raw+1,f,c
 12991  00444A  3203               	rrcf	??i2_set_pwm1_raw,f,c
 12992  00444C  5003               	movf	??i2_set_pwm1_raw,w,c
 12993  00444E  6EBE               	movwf	4030,c	;volatile
 12994                           
 12995                           ;Main.c: 240: CCP1CONbits.DC1B = raw_value & 0x0003;
 12996  004450  C001  F003         	movff	i2set_pwm1_raw@raw_value,??i2_set_pwm1_raw
 12997  004454  0E03               	movlw	3
 12998  004456  1603               	andwf	??i2_set_pwm1_raw,f,c
 12999  004458  3A03               	swapf	??i2_set_pwm1_raw,f,c
 13000  00445A  50BD               	movf	4029,w,c	;volatile
 13001  00445C  1803               	xorwf	??i2_set_pwm1_raw,w,c
 13002  00445E  0BCF               	andlw	-49
 13003  004460  1803               	xorwf	??i2_set_pwm1_raw,w,c
 13004  004462  6EBD               	movwf	4029,c	;volatile
 13005  004464  0012               	return		;funcret
 13006  004466                     __end_ofi2_set_pwm1_raw:
 13007                           	opt stack 0
 13008                           pclatu	equ	0xFFB
 13009                           pclath	equ	0xFFA
 13010                           tblptru	equ	0xFF8
 13011                           tblptrh	equ	0xFF7
 13012                           tblptrl	equ	0xFF6
 13013                           tablat	equ	0xFF5
 13014                           prodh	equ	0xFF4
 13015                           prodl	equ	0xFF3
 13016                           intcon	equ	0xFF2
 13017                           intcon2	equ	0xFF1
 13018                           intcon3	equ	0xFF0
 13019                           indf0	equ	0xFEF
 13020                           postinc0	equ	0xFEE
 13021                           fsr0h	equ	0xFEA
 13022                           fsr0l	equ	0xFE9
 13023                           wreg	equ	0xFE8
 13024                           postdec1	equ	0xFE5
 13025                           fsr1h	equ	0xFE2
 13026                           fsr1l	equ	0xFE1
 13027                           indf2	equ	0xFDF
 13028                           postinc2	equ	0xFDE
 13029                           postdec2	equ	0xFDD
 13030                           fsr2h	equ	0xFDA
 13031                           fsr2l	equ	0xFD9
 13032                           status	equ	0xFD8
 13033                           
 13034 ;; *************** function i2___fltol *****************
 13035 ;; Defined at:
 13036 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 13037 ;; Parameters:    Size  Location     Type
 13038 ;;  f1              4   38[COMRAM] void 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;  __fltol         1   47[COMRAM] unsigned char 
 13041 ;;  __fltol         1   46[COMRAM] unsigned char 
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  4   38[COMRAM] long 
 13044 ;; Registers used:
 13045 ;;		wreg, status,2, status,0
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;Total ram usage:       10 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		i2_set_pwm1_percent
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           	psect	text40
 13065  003C52                     __ptext40:
 13066                           	opt stack 0
 13067  003C52                     i2___fltol:
 13068                           	opt stack 21
 13069                           
 13070                           ;incstack = 0
 13071  003C52  3429               	rlcf	i2___fltol@f1+2,w,c
 13072  003C54  342A               	rlcf	i2___fltol@f1+3,w,c
 13073  003C56  6E30               	movwf	i2___fltol@exp1,c
 13074  003C58  5030               	movf	i2___fltol@exp1,w,c
 13075  003C5A  A4D8               	btfss	status,2,c
 13076  003C5C  D009               	goto	i2l764
 13077  003C5E  0E00               	movlw	0
 13078  003C60  6E27               	movwf	?i2___fltol,c
 13079  003C62  0E00               	movlw	0
 13080  003C64  6E28               	movwf	?i2___fltol+1,c
 13081  003C66  0E00               	movlw	0
 13082  003C68  6E29               	movwf	?i2___fltol+2,c
 13083  003C6A  0E00               	movlw	0
 13084  003C6C  6E2A               	movwf	?i2___fltol+3,c
 13085  003C6E  0012               	return	
 13086  003C70                     i2l764:
 13087  003C70  C027  F02B         	movff	i2___fltol@f1,??i2___fltol
 13088  003C74  C028  F02C         	movff	i2___fltol@f1+1,??i2___fltol+1
 13089  003C78  C029  F02D         	movff	i2___fltol@f1+2,??i2___fltol+2
 13090  003C7C  C02A  F02E         	movff	i2___fltol@f1+3,??i2___fltol+3
 13091  003C80  0E20               	movlw	32
 13092  003C82  D005               	goto	i2u613_40
 13093  003C84                     i2u613_45:
 13094  003C84  90D8               	bcf	status,0,c
 13095  003C86  322E               	rrcf	??i2___fltol+3,f,c
 13096  003C88  322D               	rrcf	??i2___fltol+2,f,c
 13097  003C8A  322C               	rrcf	??i2___fltol+1,f,c
 13098  003C8C  322B               	rrcf	??i2___fltol,f,c
 13099  003C8E                     i2u613_40:
 13100  003C8E  2EE8               	decfsz	wreg,f,c
 13101  003C90  D7F9               	goto	i2u613_45
 13102  003C92  502B               	movf	??i2___fltol,w,c
 13103  003C94  6E2F               	movwf	i2___fltol@sign1,c
 13104  003C96  8E29               	bsf	i2___fltol@f1+2,7,c
 13105  003C98  0EFF               	movlw	255
 13106  003C9A  1627               	andwf	i2___fltol@f1,f,c
 13107  003C9C  0EFF               	movlw	255
 13108  003C9E  1628               	andwf	i2___fltol@f1+1,f,c
 13109  003CA0  0EFF               	movlw	255
 13110  003CA2  1629               	andwf	i2___fltol@f1+2,f,c
 13111  003CA4  0E00               	movlw	0
 13112  003CA6  162A               	andwf	i2___fltol@f1+3,f,c
 13113  003CA8  0E96               	movlw	150
 13114  003CAA  5E30               	subwf	i2___fltol@exp1,f,c
 13115  003CAC  AE30               	btfss	i2___fltol@exp1,7,c
 13116  003CAE  D016               	goto	i2l766
 13117  003CB0  5030               	movf	i2___fltol@exp1,w,c
 13118  003CB2  0A80               	xorlw	128
 13119  003CB4  0F97               	addlw	151
 13120  003CB6  B0D8               	btfsc	status,0,c
 13121  003CB8  D009               	goto	i2l767
 13122  003CBA  0E00               	movlw	0
 13123  003CBC  6E27               	movwf	?i2___fltol,c
 13124  003CBE  0E00               	movlw	0
 13125  003CC0  6E28               	movwf	?i2___fltol+1,c
 13126  003CC2  0E00               	movlw	0
 13127  003CC4  6E29               	movwf	?i2___fltol+2,c
 13128  003CC6  0E00               	movlw	0
 13129  003CC8  6E2A               	movwf	?i2___fltol+3,c
 13130  003CCA  0012               	return	
 13131  003CCC                     i2l767:
 13132  003CCC  90D8               	bcf	status,0,c
 13133  003CCE  322A               	rrcf	i2___fltol@f1+3,f,c
 13134  003CD0  3229               	rrcf	i2___fltol@f1+2,f,c
 13135  003CD2  3228               	rrcf	i2___fltol@f1+1,f,c
 13136  003CD4  3227               	rrcf	i2___fltol@f1,f,c
 13137  003CD6  3E30               	incfsz	i2___fltol@exp1,f,c
 13138  003CD8  D7F9               	goto	i2l767
 13139  003CDA  D015               	goto	i2u617_40
 13140  003CDC                     i2l766:
 13141  003CDC  0E1F               	movlw	31
 13142  003CDE  6430               	cpfsgt	i2___fltol@exp1,c
 13143  003CE0  D00F               	goto	i2l772
 13144  003CE2  0E00               	movlw	0
 13145  003CE4  6E27               	movwf	?i2___fltol,c
 13146  003CE6  0E00               	movlw	0
 13147  003CE8  6E28               	movwf	?i2___fltol+1,c
 13148  003CEA  0E00               	movlw	0
 13149  003CEC  6E29               	movwf	?i2___fltol+2,c
 13150  003CEE  0E00               	movlw	0
 13151  003CF0  6E2A               	movwf	?i2___fltol+3,c
 13152  003CF2  0012               	return	
 13153  003CF4  90D8               	bcf	status,0,c
 13154  003CF6  3627               	rlcf	i2___fltol@f1,f,c
 13155  003CF8  3628               	rlcf	i2___fltol@f1+1,f,c
 13156  003CFA  3629               	rlcf	i2___fltol@f1+2,f,c
 13157  003CFC  362A               	rlcf	i2___fltol@f1+3,f,c
 13158  003CFE  0630               	decf	i2___fltol@exp1,f,c
 13159  003D00                     i2l772:
 13160  003D00  5030               	movf	i2___fltol@exp1,w,c
 13161  003D02  A4D8               	btfss	status,2,c
 13162  003D04  D7F7               	goto	i2l773
 13163  003D06                     i2u617_40:
 13164  003D06  502F               	movf	i2___fltol@sign1,w,c
 13165  003D08  B4D8               	btfsc	status,2,c
 13166  003D0A  D008               	goto	i2l775
 13167  003D0C  1E2A               	comf	i2___fltol@f1+3,f,c
 13168  003D0E  1E29               	comf	i2___fltol@f1+2,f,c
 13169  003D10  1E28               	comf	i2___fltol@f1+1,f,c
 13170  003D12  6C27               	negf	i2___fltol@f1,c
 13171  003D14  0E00               	movlw	0
 13172  003D16  2228               	addwfc	i2___fltol@f1+1,f,c
 13173  003D18  2229               	addwfc	i2___fltol@f1+2,f,c
 13174  003D1A  222A               	addwfc	i2___fltol@f1+3,f,c
 13175  003D1C                     i2l775:
 13176  003D1C  C027  F027         	movff	i2___fltol@f1,?i2___fltol
 13177  003D20  C028  F028         	movff	i2___fltol@f1+1,?i2___fltol+1
 13178  003D24  C029  F029         	movff	i2___fltol@f1+2,?i2___fltol+2
 13179  003D28  C02A  F02A         	movff	i2___fltol@f1+3,?i2___fltol+3
 13180  003D2C  0012               	return	
 13181  003D2E                     __end_ofi2___fltol:
 13182                           	opt stack 0
 13183                           pclatu	equ	0xFFB
 13184                           pclath	equ	0xFFA
 13185                           tblptru	equ	0xFF8
 13186                           tblptrh	equ	0xFF7
 13187                           tblptrl	equ	0xFF6
 13188                           tablat	equ	0xFF5
 13189                           prodh	equ	0xFF4
 13190                           prodl	equ	0xFF3
 13191                           intcon	equ	0xFF2
 13192                           intcon2	equ	0xFF1
 13193                           intcon3	equ	0xFF0
 13194                           indf0	equ	0xFEF
 13195                           postinc0	equ	0xFEE
 13196                           fsr0h	equ	0xFEA
 13197                           fsr0l	equ	0xFE9
 13198                           wreg	equ	0xFE8
 13199                           postdec1	equ	0xFE5
 13200                           fsr1h	equ	0xFE2
 13201                           fsr1l	equ	0xFE1
 13202                           indf2	equ	0xFDF
 13203                           postinc2	equ	0xFDE
 13204                           postdec2	equ	0xFDD
 13205                           fsr2h	equ	0xFDA
 13206                           fsr2l	equ	0xFD9
 13207                           status	equ	0xFD8
 13208                           
 13209 ;; *************** function i2___flmul *****************
 13210 ;; Defined at:
 13211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 13212 ;; Parameters:    Size  Location     Type
 13213 ;;  b               4   14[COMRAM] long 
 13214 ;;  a               4   18[COMRAM] long 
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;  __flmul         4   33[COMRAM] struct .
 13217 ;;  __flmul         4   27[COMRAM] unsigned long 
 13218 ;;  __flmul         2   37[COMRAM] struct .
 13219 ;;  __flmul         1   32[COMRAM] unsigned char 
 13220 ;;  __flmul         1   31[COMRAM] unsigned char 
 13221 ;;  __flmul         1   26[COMRAM] unsigned char 
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  4   14[COMRAM] unsigned char 
 13224 ;; Registers used:
 13225 ;;		wreg, status,2, status,0, prodl, prodh
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13231 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13232 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13234 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13235 ;;Total ram usage:       25 bytes
 13236 ;; Hardware stack levels used:    1
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_highIsr
 13241 ;;		i2_set_pwm1_percent
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           	psect	text41
 13246  001A00                     __ptext41:
 13247                           	opt stack 0
 13248  001A00                     i2___flmul:
 13249                           	opt stack 21
 13250                           
 13251                           ;incstack = 0
 13252  001A00  5012               	movf	i2___flmul@b+3,w,c
 13253  001A02  0B80               	andlw	128
 13254  001A04  6E1B               	movwf	i2___flmul@sign,c
 13255  001A06  5012               	movf	i2___flmul@b+3,w,c
 13256  001A08  2412               	addwf	i2___flmul@b+3,w,c
 13257  001A0A  6E21               	movwf	i2___flmul@bexp,c
 13258  001A0C  BE11               	btfsc	i2___flmul@b+2,7,c
 13259  001A0E  8021               	bsf	i2___flmul@bexp,0,c
 13260  001A10  5021               	movf	i2___flmul@bexp,w,c
 13261  001A12  B4D8               	btfsc	status,2,c
 13262  001A14  D00D               	goto	i2l1080
 13263  001A16  2821               	incf	i2___flmul@bexp,w,c
 13264  001A18  A4D8               	btfss	status,2,c
 13265  001A1A  D008               	goto	i2l1081
 13266  001A1C  0E00               	movlw	0
 13267  001A1E  6E0F               	movwf	i2___flmul@b,c
 13268  001A20  0E00               	movlw	0
 13269  001A22  6E10               	movwf	i2___flmul@b+1,c
 13270  001A24  0E00               	movlw	0
 13271  001A26  6E11               	movwf	i2___flmul@b+2,c
 13272  001A28  0E00               	movlw	0
 13273  001A2A  6E12               	movwf	i2___flmul@b+3,c
 13274  001A2C                     i2l1081:
 13275  001A2C  8E11               	bsf	i2___flmul@b+2,7,c
 13276  001A2E  D008               	goto	i2l1082
 13277  001A30                     i2l1080:
 13278  001A30  0E00               	movlw	0
 13279  001A32  6E0F               	movwf	i2___flmul@b,c
 13280  001A34  0E00               	movlw	0
 13281  001A36  6E10               	movwf	i2___flmul@b+1,c
 13282  001A38  0E00               	movlw	0
 13283  001A3A  6E11               	movwf	i2___flmul@b+2,c
 13284  001A3C  0E00               	movlw	0
 13285  001A3E  6E12               	movwf	i2___flmul@b+3,c
 13286  001A40                     i2l1082:
 13287  001A40  5016               	movf	i2___flmul@a+3,w,c
 13288  001A42  0B80               	andlw	128
 13289  001A44  1A1B               	xorwf	i2___flmul@sign,f,c
 13290  001A46  5016               	movf	i2___flmul@a+3,w,c
 13291  001A48  2416               	addwf	i2___flmul@a+3,w,c
 13292  001A4A  6E20               	movwf	i2___flmul@aexp,c
 13293  001A4C  BE15               	btfsc	i2___flmul@a+2,7,c
 13294  001A4E  8020               	bsf	i2___flmul@aexp,0,c
 13295  001A50  5020               	movf	i2___flmul@aexp,w,c
 13296  001A52  B4D8               	btfsc	status,2,c
 13297  001A54  D00D               	goto	i2l1084
 13298  001A56  2820               	incf	i2___flmul@aexp,w,c
 13299  001A58  A4D8               	btfss	status,2,c
 13300  001A5A  D008               	goto	i2l1085
 13301  001A5C  0E00               	movlw	0
 13302  001A5E  6E13               	movwf	i2___flmul@a,c
 13303  001A60  0E00               	movlw	0
 13304  001A62  6E14               	movwf	i2___flmul@a+1,c
 13305  001A64  0E00               	movlw	0
 13306  001A66  6E15               	movwf	i2___flmul@a+2,c
 13307  001A68  0E00               	movlw	0
 13308  001A6A  6E16               	movwf	i2___flmul@a+3,c
 13309  001A6C                     i2l1085:
 13310  001A6C  8E15               	bsf	i2___flmul@a+2,7,c
 13311  001A6E  D008               	goto	i2l1086
 13312  001A70                     i2l1084:
 13313  001A70  0E00               	movlw	0
 13314  001A72  6E13               	movwf	i2___flmul@a,c
 13315  001A74  0E00               	movlw	0
 13316  001A76  6E14               	movwf	i2___flmul@a+1,c
 13317  001A78  0E00               	movlw	0
 13318  001A7A  6E15               	movwf	i2___flmul@a+2,c
 13319  001A7C  0E00               	movlw	0
 13320  001A7E  6E16               	movwf	i2___flmul@a+3,c
 13321  001A80                     i2l1086:
 13322  001A80  5020               	movf	i2___flmul@aexp,w,c
 13323  001A82  B4D8               	btfsc	status,2,c
 13324  001A84  D003               	goto	i2u688_40
 13325  001A86  5021               	movf	i2___flmul@bexp,w,c
 13326  001A88  A4D8               	btfss	status,2,c
 13327  001A8A  D009               	goto	i2l1087
 13328  001A8C                     i2u688_40:
 13329  001A8C  0E00               	movlw	0
 13330  001A8E  6E0F               	movwf	?i2___flmul,c
 13331  001A90  0E00               	movlw	0
 13332  001A92  6E10               	movwf	?i2___flmul+1,c
 13333  001A94  0E00               	movlw	0
 13334  001A96  6E11               	movwf	?i2___flmul+2,c
 13335  001A98  0E00               	movlw	0
 13336  001A9A  6E12               	movwf	?i2___flmul+3,c
 13337  001A9C  0012               	return	
 13338  001A9E                     i2l1087:
 13339  001A9E  5015               	movf	i2___flmul@a+2,w,c
 13340  001AA0  020F               	mulwf	i2___flmul@b,c
 13341  001AA2  CFF3 F026          	movff	prodl,i2___flmul@temp
 13342  001AA6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13343  001AAA  5026               	movf	i2___flmul@temp,w,c
 13344  001AAC  6E1C               	movwf	i2___flmul@grs,c
 13345  001AAE  6A1D               	clrf	i2___flmul@grs+1,c
 13346  001AB0  6A1E               	clrf	i2___flmul@grs+2,c
 13347  001AB2  6A1F               	clrf	i2___flmul@grs+3,c
 13348  001AB4  5027               	movf	i2___flmul@temp+1,w,c
 13349  001AB6  6E22               	movwf	i2___flmul@prod,c
 13350  001AB8  6A23               	clrf	i2___flmul@prod+1,c
 13351  001ABA  6A24               	clrf	i2___flmul@prod+2,c
 13352  001ABC  6A25               	clrf	i2___flmul@prod+3,c
 13353  001ABE  5014               	movf	i2___flmul@a+1,w,c
 13354  001AC0  0210               	mulwf	i2___flmul@b+1,c
 13355  001AC2  CFF3 F026          	movff	prodl,i2___flmul@temp
 13356  001AC6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13357  001ACA  5026               	movf	i2___flmul@temp,w,c
 13358  001ACC  261C               	addwf	i2___flmul@grs,f,c
 13359  001ACE  0E00               	movlw	0
 13360  001AD0  221D               	addwfc	i2___flmul@grs+1,f,c
 13361  001AD2  221E               	addwfc	i2___flmul@grs+2,f,c
 13362  001AD4  221F               	addwfc	i2___flmul@grs+3,f,c
 13363  001AD6  5027               	movf	i2___flmul@temp+1,w,c
 13364  001AD8  2622               	addwf	i2___flmul@prod,f,c
 13365  001ADA  0E00               	movlw	0
 13366  001ADC  2223               	addwfc	i2___flmul@prod+1,f,c
 13367  001ADE  2224               	addwfc	i2___flmul@prod+2,f,c
 13368  001AE0  2225               	addwfc	i2___flmul@prod+3,f,c
 13369  001AE2  5013               	movf	i2___flmul@a,w,c
 13370  001AE4  0211               	mulwf	i2___flmul@b+2,c
 13371  001AE6  CFF3 F026          	movff	prodl,i2___flmul@temp
 13372  001AEA  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13373  001AEE  5026               	movf	i2___flmul@temp,w,c
 13374  001AF0  261C               	addwf	i2___flmul@grs,f,c
 13375  001AF2  0E00               	movlw	0
 13376  001AF4  221D               	addwfc	i2___flmul@grs+1,f,c
 13377  001AF6  221E               	addwfc	i2___flmul@grs+2,f,c
 13378  001AF8  221F               	addwfc	i2___flmul@grs+3,f,c
 13379  001AFA  5027               	movf	i2___flmul@temp+1,w,c
 13380  001AFC  2622               	addwf	i2___flmul@prod,f,c
 13381  001AFE  0E00               	movlw	0
 13382  001B00  2223               	addwfc	i2___flmul@prod+1,f,c
 13383  001B02  2224               	addwfc	i2___flmul@prod+2,f,c
 13384  001B04  2225               	addwfc	i2___flmul@prod+3,f,c
 13385  001B06  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 13386  001B0A  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 13387  001B0E  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 13388  001B12  6A1C               	clrf	i2___flmul@grs,c
 13389  001B14  5013               	movf	i2___flmul@a,w,c
 13390  001B16  0210               	mulwf	i2___flmul@b+1,c
 13391  001B18  CFF3 F026          	movff	prodl,i2___flmul@temp
 13392  001B1C  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13393  001B20  5026               	movf	i2___flmul@temp,w,c
 13394  001B22  261C               	addwf	i2___flmul@grs,f,c
 13395  001B24  5027               	movf	i2___flmul@temp+1,w,c
 13396  001B26  221D               	addwfc	i2___flmul@grs+1,f,c
 13397  001B28  0E00               	movlw	0
 13398  001B2A  221E               	addwfc	i2___flmul@grs+2,f,c
 13399  001B2C  0E00               	movlw	0
 13400  001B2E  221F               	addwfc	i2___flmul@grs+3,f,c
 13401  001B30  5014               	movf	i2___flmul@a+1,w,c
 13402  001B32  020F               	mulwf	i2___flmul@b,c
 13403  001B34  CFF3 F026          	movff	prodl,i2___flmul@temp
 13404  001B38  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13405  001B3C  5026               	movf	i2___flmul@temp,w,c
 13406  001B3E  261C               	addwf	i2___flmul@grs,f,c
 13407  001B40  5027               	movf	i2___flmul@temp+1,w,c
 13408  001B42  221D               	addwfc	i2___flmul@grs+1,f,c
 13409  001B44  0E00               	movlw	0
 13410  001B46  221E               	addwfc	i2___flmul@grs+2,f,c
 13411  001B48  0E00               	movlw	0
 13412  001B4A  221F               	addwfc	i2___flmul@grs+3,f,c
 13413  001B4C  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 13414  001B50  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 13415  001B54  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 13416  001B58  6A1C               	clrf	i2___flmul@grs,c
 13417  001B5A  5013               	movf	i2___flmul@a,w,c
 13418  001B5C  020F               	mulwf	i2___flmul@b,c
 13419  001B5E  CFF3 F026          	movff	prodl,i2___flmul@temp
 13420  001B62  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13421  001B66  5026               	movf	i2___flmul@temp,w,c
 13422  001B68  261C               	addwf	i2___flmul@grs,f,c
 13423  001B6A  5027               	movf	i2___flmul@temp+1,w,c
 13424  001B6C  221D               	addwfc	i2___flmul@grs+1,f,c
 13425  001B6E  0E00               	movlw	0
 13426  001B70  221E               	addwfc	i2___flmul@grs+2,f,c
 13427  001B72  0E00               	movlw	0
 13428  001B74  221F               	addwfc	i2___flmul@grs+3,f,c
 13429  001B76  5015               	movf	i2___flmul@a+2,w,c
 13430  001B78  0210               	mulwf	i2___flmul@b+1,c
 13431  001B7A  CFF3 F026          	movff	prodl,i2___flmul@temp
 13432  001B7E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13433  001B82  5026               	movf	i2___flmul@temp,w,c
 13434  001B84  2622               	addwf	i2___flmul@prod,f,c
 13435  001B86  5027               	movf	i2___flmul@temp+1,w,c
 13436  001B88  2223               	addwfc	i2___flmul@prod+1,f,c
 13437  001B8A  0E00               	movlw	0
 13438  001B8C  2224               	addwfc	i2___flmul@prod+2,f,c
 13439  001B8E  0E00               	movlw	0
 13440  001B90  2225               	addwfc	i2___flmul@prod+3,f,c
 13441  001B92  5014               	movf	i2___flmul@a+1,w,c
 13442  001B94  0211               	mulwf	i2___flmul@b+2,c
 13443  001B96  CFF3 F026          	movff	prodl,i2___flmul@temp
 13444  001B9A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13445  001B9E  5026               	movf	i2___flmul@temp,w,c
 13446  001BA0  2622               	addwf	i2___flmul@prod,f,c
 13447  001BA2  5027               	movf	i2___flmul@temp+1,w,c
 13448  001BA4  2223               	addwfc	i2___flmul@prod+1,f,c
 13449  001BA6  0E00               	movlw	0
 13450  001BA8  2224               	addwfc	i2___flmul@prod+2,f,c
 13451  001BAA  0E00               	movlw	0
 13452  001BAC  2225               	addwfc	i2___flmul@prod+3,f,c
 13453  001BAE  5015               	movf	i2___flmul@a+2,w,c
 13454  001BB0  0211               	mulwf	i2___flmul@b+2,c
 13455  001BB2  CFF3 F026          	movff	prodl,i2___flmul@temp
 13456  001BB6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 13457  001BBA  5026               	movf	i2___flmul@temp,w,c
 13458  001BBC  6E17               	movwf	??i2___flmul& (0+255),c
 13459  001BBE  5027               	movf	i2___flmul@temp+1,w,c
 13460  001BC0  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 13461  001BC2  6A19               	clrf	(??i2___flmul+2)& (0+255),c
 13462  001BC4  6A1A               	clrf	(??i2___flmul+3)& (0+255),c
 13463  001BC6  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 13464  001BCA  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 13465  001BCE  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 13466  001BD2  6A17               	clrf	??i2___flmul,c
 13467  001BD4  5017               	movf	??i2___flmul,w,c
 13468  001BD6  2622               	addwf	i2___flmul@prod,f,c
 13469  001BD8  5018               	movf	??i2___flmul+1,w,c
 13470  001BDA  2223               	addwfc	i2___flmul@prod+1,f,c
 13471  001BDC  5019               	movf	??i2___flmul+2,w,c
 13472  001BDE  2224               	addwfc	i2___flmul@prod+2,f,c
 13473  001BE0  501A               	movf	??i2___flmul+3,w,c
 13474  001BE2  2225               	addwfc	i2___flmul@prod+3,f,c
 13475  001BE4  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 13476  001BE8  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 13477  001BEC  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 13478  001BF0  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 13479  001BF4  0E19               	movlw	25
 13480  001BF6  D005               	goto	i2u689_40
 13481  001BF8                     i2u689_45:
 13482  001BF8  90D8               	bcf	status,0,c
 13483  001BFA  321A               	rrcf	??i2___flmul+3,f,c
 13484  001BFC  3219               	rrcf	??i2___flmul+2,f,c
 13485  001BFE  3218               	rrcf	??i2___flmul+1,f,c
 13486  001C00  3217               	rrcf	??i2___flmul,f,c
 13487  001C02                     i2u689_40:
 13488  001C02  2EE8               	decfsz	wreg,f,c
 13489  001C04  D7F9               	goto	i2u689_45
 13490  001C06  5017               	movf	??i2___flmul,w,c
 13491  001C08  2622               	addwf	i2___flmul@prod,f,c
 13492  001C0A  5018               	movf	??i2___flmul+1,w,c
 13493  001C0C  2223               	addwfc	i2___flmul@prod+1,f,c
 13494  001C0E  5019               	movf	??i2___flmul+2,w,c
 13495  001C10  2224               	addwfc	i2___flmul@prod+2,f,c
 13496  001C12  501A               	movf	??i2___flmul+3,w,c
 13497  001C14  2225               	addwfc	i2___flmul@prod+3,f,c
 13498  001C16  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 13499  001C1A  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 13500  001C1E  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 13501  001C22  6A1C               	clrf	i2___flmul@grs,c
 13502  001C24  5020               	movf	i2___flmul@aexp,w,c
 13503  001C26  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 13504  001C2A  6A18               	clrf	(??i2___flmul+1)& (0+255),c
 13505  001C2C  2617               	addwf	??i2___flmul,f,c
 13506  001C2E  0E00               	movlw	0
 13507  001C30  2218               	addwfc	??i2___flmul+1,f,c
 13508  001C32  0E82               	movlw	130
 13509  001C34  2417               	addwf	??i2___flmul,w,c
 13510  001C36  6E26               	movwf	i2___flmul@temp,c
 13511  001C38  0EFF               	movlw	255
 13512  001C3A  2018               	addwfc	??i2___flmul+1,w,c
 13513  001C3C  6E27               	movwf	i2___flmul@temp+1,c
 13514  001C3E  D00F               	goto	i2l1091
 13515  001C40  90D8               	bcf	status,0,c
 13516  001C42  3622               	rlcf	i2___flmul@prod,f,c
 13517  001C44  3623               	rlcf	i2___flmul@prod+1,f,c
 13518  001C46  3624               	rlcf	i2___flmul@prod+2,f,c
 13519  001C48  3625               	rlcf	i2___flmul@prod+3,f,c
 13520  001C4A  BE1F               	btfsc	i2___flmul@grs+3,7,c
 13521  001C4C  8022               	bsf	i2___flmul@prod,0,c
 13522  001C4E  90D8               	bcf	status,0,c
 13523  001C50  361C               	rlcf	i2___flmul@grs,f,c
 13524  001C52  361D               	rlcf	i2___flmul@grs+1,f,c
 13525  001C54  361E               	rlcf	i2___flmul@grs+2,f,c
 13526  001C56  361F               	rlcf	i2___flmul@grs+3,f,c
 13527  001C58  0626               	decf	i2___flmul@temp,f,c
 13528  001C5A  A0D8               	btfss	status,0,c
 13529  001C5C  0627               	decf	i2___flmul@temp+1,f,c
 13530  001C5E                     i2l1091:
 13531  001C5E  AE24               	btfss	i2___flmul@prod+2,7,c
 13532  001C60  D7EF               	goto	i2l1092
 13533  001C62  0E00               	movlw	0
 13534  001C64  6E20               	movwf	i2___flmul@aexp,c
 13535  001C66  AE1F               	btfss	i2___flmul@grs+3,7,c
 13536  001C68  D016               	goto	i2l1098
 13537  001C6A  0EFF               	movlw	255
 13538  001C6C  141C               	andwf	i2___flmul@grs,w,c
 13539  001C6E  6E17               	movwf	??i2___flmul& (0+255),c
 13540  001C70  0EFF               	movlw	255
 13541  001C72  141D               	andwf	i2___flmul@grs+1,w,c
 13542  001C74  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 13543  001C76  0EFF               	movlw	255
 13544  001C78  141E               	andwf	i2___flmul@grs+2,w,c
 13545  001C7A  6E19               	movwf	(??i2___flmul+2)& (0+255),c
 13546  001C7C  0E7F               	movlw	127
 13547  001C7E  141F               	andwf	i2___flmul@grs+3,w,c
 13548  001C80  6E1A               	movwf	(??i2___flmul+3)& (0+255),c
 13549  001C82  5017               	movf	??i2___flmul,w,c
 13550  001C84  1018               	iorwf	??i2___flmul+1,w,c
 13551  001C86  1019               	iorwf	??i2___flmul+2,w,c
 13552  001C88  101A               	iorwf	??i2___flmul+3,w,c
 13553  001C8A  A4D8               	btfss	status,2,c
 13554  001C8C  D002               	goto	i2u694_40
 13555  001C8E  A022               	btfss	i2___flmul@prod,0,c
 13556  001C90  D002               	goto	i2l1098
 13557  001C92                     i2u694_40:
 13558  001C92  0E01               	movlw	1
 13559  001C94  6E20               	movwf	i2___flmul@aexp,c
 13560  001C96                     i2l1098:
 13561  001C96  5020               	movf	i2___flmul@aexp,w,c
 13562  001C98  B4D8               	btfsc	status,2,c
 13563  001C9A  D01F               	goto	i2l1100
 13564  001C9C  0E01               	movlw	1
 13565  001C9E  2622               	addwf	i2___flmul@prod,f,c
 13566  001CA0  0E00               	movlw	0
 13567  001CA2  2223               	addwfc	i2___flmul@prod+1,f,c
 13568  001CA4  2224               	addwfc	i2___flmul@prod+2,f,c
 13569  001CA6  2225               	addwfc	i2___flmul@prod+3,f,c
 13570  001CA8  A025               	btfss	i2___flmul@prod+3,0,c
 13571  001CAA  D017               	goto	i2l1100
 13572  001CAC  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 13573  001CB0  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 13574  001CB4  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 13575  001CB8  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 13576  001CBC  341A               	rlcf	??i2___flmul+3,w,c
 13577  001CBE  321A               	rrcf	??i2___flmul+3,f,c
 13578  001CC0  3219               	rrcf	??i2___flmul+2,f,c
 13579  001CC2  3218               	rrcf	??i2___flmul+1,f,c
 13580  001CC4  3217               	rrcf	??i2___flmul,f,c
 13581  001CC6  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 13582  001CCA  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 13583  001CCE  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 13584  001CD2  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 13585  001CD6  4A26               	infsnz	i2___flmul@temp,f,c
 13586  001CD8  2A27               	incf	i2___flmul@temp+1,f,c
 13587  001CDA                     i2l1100:
 13588  001CDA  BE27               	btfsc	i2___flmul@temp+1,7,c
 13589  001CDC  D00D               	goto	i2l1101
 13590  001CDE  5027               	movf	i2___flmul@temp+1,w,c
 13591  001CE0  E103               	bnz	i2u697_40
 13592  001CE2  2826               	incf	i2___flmul@temp,w,c
 13593  001CE4  A0D8               	btfss	status,0,c
 13594  001CE6  D008               	goto	i2l1101
 13595  001CE8                     i2u697_40:
 13596  001CE8  0E00               	movlw	0
 13597  001CEA  6E22               	movwf	i2___flmul@prod,c
 13598  001CEC  0E00               	movlw	0
 13599  001CEE  6E23               	movwf	i2___flmul@prod+1,c
 13600  001CF0  0E80               	movlw	128
 13601  001CF2  6E24               	movwf	i2___flmul@prod+2,c
 13602  001CF4  0E7F               	movlw	127
 13603  001CF6  D020               	goto	L20
 13604  001CF8                     i2l1101:
 13605  001CF8  BE27               	btfsc	i2___flmul@temp+1,7,c
 13606  001CFA  D005               	goto	i2u698_40
 13607  001CFC  5027               	movf	i2___flmul@temp+1,w,c
 13608  001CFE  E10E               	bnz	i2l1103
 13609  001D00  0426               	decf	i2___flmul@temp,w,c
 13610  001D02  B0D8               	btfsc	status,0,c
 13611  001D04  D00B               	goto	i2l1103
 13612  001D06                     i2u698_40:
 13613  001D06  0E00               	movlw	0
 13614  001D08  6E22               	movwf	i2___flmul@prod,c
 13615  001D0A  0E00               	movlw	0
 13616  001D0C  6E23               	movwf	i2___flmul@prod+1,c
 13617  001D0E  0E00               	movlw	0
 13618  001D10  6E24               	movwf	i2___flmul@prod+2,c
 13619  001D12  0E00               	movlw	0
 13620  001D14  6E25               	movwf	i2___flmul@prod+3,c
 13621  001D16  0E00               	movlw	0
 13622  001D18  6E1B               	movwf	i2___flmul@sign,c
 13623  001D1A  D00F               	goto	i2l1104
 13624  001D1C                     i2l1103:
 13625  001D1C  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 13626  001D20  0EFF               	movlw	255
 13627  001D22  1622               	andwf	i2___flmul@prod,f,c
 13628  001D24  0EFF               	movlw	255
 13629  001D26  1623               	andwf	i2___flmul@prod+1,f,c
 13630  001D28  0E7F               	movlw	127
 13631  001D2A  1624               	andwf	i2___flmul@prod+2,f,c
 13632  001D2C  0E00               	movlw	0
 13633  001D2E  1625               	andwf	i2___flmul@prod+3,f,c
 13634  001D30  B021               	btfsc	i2___flmul@bexp,0,c
 13635  001D32  8E24               	bsf	i2___flmul@prod+2,7,c
 13636  001D34  90D8               	bcf	status,0,c
 13637  001D36  3021               	rrcf	i2___flmul@bexp,w,c
 13638  001D38                     L20:
 13639  001D38  6E25               	movwf	i2___flmul@prod+3,c
 13640  001D3A                     i2l1104:
 13641  001D3A  501B               	movf	i2___flmul@sign,w,c
 13642  001D3C  1225               	iorwf	i2___flmul@prod+3,f,c
 13643  001D3E  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 13644  001D42  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 13645  001D46  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 13646  001D4A  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 13647  001D4E  0012               	return	
 13648  001D50                     __end_ofi2___flmul:
 13649                           	opt stack 0
 13650                           pclatu	equ	0xFFB
 13651                           pclath	equ	0xFFA
 13652                           tblptru	equ	0xFF8
 13653                           tblptrh	equ	0xFF7
 13654                           tblptrl	equ	0xFF6
 13655                           tablat	equ	0xFF5
 13656                           prodh	equ	0xFF4
 13657                           prodl	equ	0xFF3
 13658                           intcon	equ	0xFF2
 13659                           intcon2	equ	0xFF1
 13660                           intcon3	equ	0xFF0
 13661                           indf0	equ	0xFEF
 13662                           postinc0	equ	0xFEE
 13663                           fsr0h	equ	0xFEA
 13664                           fsr0l	equ	0xFE9
 13665                           wreg	equ	0xFE8
 13666                           postdec1	equ	0xFE5
 13667                           fsr1h	equ	0xFE2
 13668                           fsr1l	equ	0xFE1
 13669                           indf2	equ	0xFDF
 13670                           postinc2	equ	0xFDE
 13671                           postdec2	equ	0xFDD
 13672                           fsr2h	equ	0xFDA
 13673                           fsr2l	equ	0xFD9
 13674                           status	equ	0xFD8
 13675                           
 13676 ;; *************** function i2___fldiv *****************
 13677 ;; Defined at:
 13678 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;  b               4   39[COMRAM] unsigned char 
 13681 ;;  a               4   43[COMRAM] unsigned char 
 13682 ;; Auto vars:     Size  Location     Type
 13683 ;;  __fldiv         4   58[COMRAM] unsigned long 
 13684 ;;  __fldiv         4   52[COMRAM] unsigned long 
 13685 ;;  __fldiv         2   56[COMRAM] int 
 13686 ;;  __fldiv         1   63[COMRAM] unsigned char 
 13687 ;;  __fldiv         1   62[COMRAM] unsigned char 
 13688 ;;  __fldiv         1   51[COMRAM] unsigned char 
 13689 ;; Return value:  Size  Location     Type
 13690 ;;                  4   39[COMRAM] unsigned char 
 13691 ;; Registers used:
 13692 ;;		wreg, status,2, status,0
 13693 ;; Tracked objects:
 13694 ;;		On entry : 0/0
 13695 ;;		On exit  : 0/0
 13696 ;;		Unchanged: 0/0
 13697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13698 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13699 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13701 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;Total ram usage:       25 bytes
 13703 ;; Hardware stack levels used:    1
 13704 ;; This function calls:
 13705 ;;		Nothing
 13706 ;; This function is called by:
 13707 ;;		i2_set_pwm1_percent
 13708 ;; This function uses a non-reentrant model
 13709 ;;
 13710                           
 13711                           	psect	text42
 13712  002C40                     __ptext42:
 13713                           	opt stack 0
 13714  002C40                     i2___fldiv:
 13715                           	opt stack 21
 13716                           
 13717                           ;incstack = 0
 13718  002C40  502B               	movf	i2___fldiv@b+3,w,c
 13719  002C42  0B80               	andlw	128
 13720  002C44  6E34               	movwf	i2___fldiv@sign,c
 13721  002C46  502B               	movf	i2___fldiv@b+3,w,c
 13722  002C48  242B               	addwf	i2___fldiv@b+3,w,c
 13723  002C4A  6E3F               	movwf	i2___fldiv@bexp,c
 13724  002C4C  BE2A               	btfsc	i2___fldiv@b+2,7,c
 13725  002C4E  803F               	bsf	i2___fldiv@bexp,0,c
 13726  002C50  503F               	movf	i2___fldiv@bexp,w,c
 13727  002C52  B4D8               	btfsc	status,2,c
 13728  002C54  D00D               	goto	i2l1046
 13729  002C56  283F               	incf	i2___fldiv@bexp,w,c
 13730  002C58  A4D8               	btfss	status,2,c
 13731  002C5A  D008               	goto	i2l1047
 13732  002C5C  0E00               	movlw	0
 13733  002C5E  6E28               	movwf	i2___fldiv@b,c
 13734  002C60  0E00               	movlw	0
 13735  002C62  6E29               	movwf	i2___fldiv@b+1,c
 13736  002C64  0E00               	movlw	0
 13737  002C66  6E2A               	movwf	i2___fldiv@b+2,c
 13738  002C68  0E00               	movlw	0
 13739  002C6A  6E2B               	movwf	i2___fldiv@b+3,c
 13740  002C6C                     i2l1047:
 13741  002C6C  8E2A               	bsf	i2___fldiv@b+2,7,c
 13742  002C6E  D006               	goto	L21
 13743  002C70                     i2l1046:
 13744  002C70  0E00               	movlw	0
 13745  002C72  6E28               	movwf	i2___fldiv@b,c
 13746  002C74  0E00               	movlw	0
 13747  002C76  6E29               	movwf	i2___fldiv@b+1,c
 13748  002C78  0E00               	movlw	0
 13749  002C7A  6E2A               	movwf	i2___fldiv@b+2,c
 13750  002C7C                     L21:
 13751  002C7C  0E00               	movlw	0
 13752  002C7E  6E2B               	movwf	i2___fldiv@b+3,c
 13753  002C80  502F               	movf	i2___fldiv@a+3,w,c
 13754  002C82  0B80               	andlw	128
 13755  002C84  1A34               	xorwf	i2___fldiv@sign,f,c
 13756  002C86  502F               	movf	i2___fldiv@a+3,w,c
 13757  002C88  242F               	addwf	i2___fldiv@a+3,w,c
 13758  002C8A  6E40               	movwf	i2___fldiv@aexp,c
 13759  002C8C  BE2E               	btfsc	i2___fldiv@a+2,7,c
 13760  002C8E  8040               	bsf	i2___fldiv@aexp,0,c
 13761  002C90  5040               	movf	i2___fldiv@aexp,w,c
 13762  002C92  B4D8               	btfsc	status,2,c
 13763  002C94  D00D               	goto	i2l1050
 13764  002C96  2840               	incf	i2___fldiv@aexp,w,c
 13765  002C98  A4D8               	btfss	status,2,c
 13766  002C9A  D008               	goto	i2l1051
 13767  002C9C  0E00               	movlw	0
 13768  002C9E  6E2C               	movwf	i2___fldiv@a,c
 13769  002CA0  0E00               	movlw	0
 13770  002CA2  6E2D               	movwf	i2___fldiv@a+1,c
 13771  002CA4  0E00               	movlw	0
 13772  002CA6  6E2E               	movwf	i2___fldiv@a+2,c
 13773  002CA8  0E00               	movlw	0
 13774  002CAA  6E2F               	movwf	i2___fldiv@a+3,c
 13775  002CAC                     i2l1051:
 13776  002CAC  8E2E               	bsf	i2___fldiv@a+2,7,c
 13777  002CAE  D006               	goto	L22
 13778  002CB0                     i2l1050:
 13779  002CB0  0E00               	movlw	0
 13780  002CB2  6E2C               	movwf	i2___fldiv@a,c
 13781  002CB4  0E00               	movlw	0
 13782  002CB6  6E2D               	movwf	i2___fldiv@a+1,c
 13783  002CB8  0E00               	movlw	0
 13784  002CBA  6E2E               	movwf	i2___fldiv@a+2,c
 13785  002CBC                     L22:
 13786  002CBC  0E00               	movlw	0
 13787  002CBE  6E2F               	movwf	i2___fldiv@a+3,c
 13788  002CC0  502C               	movf	i2___fldiv@a,w,c
 13789  002CC2  102D               	iorwf	i2___fldiv@a+1,w,c
 13790  002CC4  102E               	iorwf	i2___fldiv@a+2,w,c
 13791  002CC6  102F               	iorwf	i2___fldiv@a+3,w,c
 13792  002CC8  A4D8               	btfss	status,2,c
 13793  002CCA  D015               	goto	i2l1053
 13794  002CCC  0E00               	movlw	0
 13795  002CCE  6E28               	movwf	i2___fldiv@b,c
 13796  002CD0  0E00               	movlw	0
 13797  002CD2  6E29               	movwf	i2___fldiv@b+1,c
 13798  002CD4  0E00               	movlw	0
 13799  002CD6  6E2A               	movwf	i2___fldiv@b+2,c
 13800  002CD8  0E00               	movlw	0
 13801  002CDA  6E2B               	movwf	i2___fldiv@b+3,c
 13802  002CDC  0E80               	movlw	128
 13803  002CDE  122A               	iorwf	i2___fldiv@b+2,f,c
 13804  002CE0  0E7F               	movlw	127
 13805  002CE2  122B               	iorwf	i2___fldiv@b+3,f,c
 13806  002CE4  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 13807  002CE8  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 13808  002CEC  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 13809  002CF0  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 13810  002CF4  0012               	return	
 13811  002CF6                     i2l1053:
 13812  002CF6  503F               	movf	i2___fldiv@bexp,w,c
 13813  002CF8  A4D8               	btfss	status,2,c
 13814  002CFA  D011               	goto	i2l1055
 13815  002CFC  0E00               	movlw	0
 13816  002CFE  6E28               	movwf	i2___fldiv@b,c
 13817  002D00  0E00               	movlw	0
 13818  002D02  6E29               	movwf	i2___fldiv@b+1,c
 13819  002D04  0E00               	movlw	0
 13820  002D06  6E2A               	movwf	i2___fldiv@b+2,c
 13821  002D08  0E00               	movlw	0
 13822  002D0A  6E2B               	movwf	i2___fldiv@b+3,c
 13823  002D0C  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 13824  002D10  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 13825  002D14  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 13826  002D18  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 13827  002D1C  0012               	return	
 13828  002D1E                     i2l1055:
 13829  002D1E  5040               	movf	i2___fldiv@aexp,w,c
 13830  002D20  6E30               	movwf	??i2___fldiv& (0+255),c
 13831  002D22  6A31               	clrf	(??i2___fldiv+1)& (0+255),c
 13832  002D24  1E30               	comf	??i2___fldiv,f,c
 13833  002D26  1E31               	comf	??i2___fldiv+1,f,c
 13834  002D28  4A30               	infsnz	??i2___fldiv,f,c
 13835  002D2A  2A31               	incf	??i2___fldiv+1,f,c
 13836  002D2C  503F               	movf	i2___fldiv@bexp,w,c
 13837  002D2E  6E32               	movwf	(??i2___fldiv+2)& (0+255),c
 13838  002D30  6A33               	clrf	(??i2___fldiv+3)& (0+255),c
 13839  002D32  5030               	movf	??i2___fldiv,w,c
 13840  002D34  2632               	addwf	??i2___fldiv+2,f,c
 13841  002D36  5031               	movf	??i2___fldiv+1,w,c
 13842  002D38  2233               	addwfc	??i2___fldiv+3,f,c
 13843  002D3A  0E7F               	movlw	127
 13844  002D3C  2432               	addwf	??i2___fldiv+2,w,c
 13845  002D3E  6E39               	movwf	i2___fldiv@new_exp,c
 13846  002D40  0E00               	movlw	0
 13847  002D42  2033               	addwfc	??i2___fldiv+3,w,c
 13848  002D44  6E3A               	movwf	i2___fldiv@new_exp+1,c
 13849  002D46  C028  F035         	movff	i2___fldiv@b,i2___fldiv@rem
 13850  002D4A  C029  F036         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 13851  002D4E  C02A  F037         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 13852  002D52  C02B  F038         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 13853  002D56  0E00               	movlw	0
 13854  002D58  6E28               	movwf	i2___fldiv@b,c
 13855  002D5A  0E00               	movlw	0
 13856  002D5C  6E29               	movwf	i2___fldiv@b+1,c
 13857  002D5E  0E00               	movlw	0
 13858  002D60  6E2A               	movwf	i2___fldiv@b+2,c
 13859  002D62  0E00               	movlw	0
 13860  002D64  6E2B               	movwf	i2___fldiv@b+3,c
 13861  002D66  0E00               	movlw	0
 13862  002D68  6E3B               	movwf	i2___fldiv@grs,c
 13863  002D6A  0E00               	movlw	0
 13864  002D6C  6E3C               	movwf	i2___fldiv@grs+1,c
 13865  002D6E  0E00               	movlw	0
 13866  002D70  6E3D               	movwf	i2___fldiv@grs+2,c
 13867  002D72  0E00               	movlw	0
 13868  002D74  6E3E               	movwf	i2___fldiv@grs+3,c
 13869  002D76  0E00               	movlw	0
 13870  002D78  6E40               	movwf	i2___fldiv@aexp,c
 13871  002D7A  D028               	goto	i2l1056
 13872  002D7C  5040               	movf	i2___fldiv@aexp,w,c
 13873  002D7E  B4D8               	btfsc	status,2,c
 13874  002D80  D011               	goto	i2l1058
 13875  002D82  90D8               	bcf	status,0,c
 13876  002D84  3635               	rlcf	i2___fldiv@rem,f,c
 13877  002D86  3636               	rlcf	i2___fldiv@rem+1,f,c
 13878  002D88  3637               	rlcf	i2___fldiv@rem+2,f,c
 13879  002D8A  3638               	rlcf	i2___fldiv@rem+3,f,c
 13880  002D8C  90D8               	bcf	status,0,c
 13881  002D8E  3628               	rlcf	i2___fldiv@b,f,c
 13882  002D90  3629               	rlcf	i2___fldiv@b+1,f,c
 13883  002D92  362A               	rlcf	i2___fldiv@b+2,f,c
 13884  002D94  362B               	rlcf	i2___fldiv@b+3,f,c
 13885  002D96  BE3E               	btfsc	i2___fldiv@grs+3,7,c
 13886  002D98  8028               	bsf	i2___fldiv@b,0,c
 13887  002D9A  90D8               	bcf	status,0,c
 13888  002D9C  363B               	rlcf	i2___fldiv@grs,f,c
 13889  002D9E  363C               	rlcf	i2___fldiv@grs+1,f,c
 13890  002DA0  363D               	rlcf	i2___fldiv@grs+2,f,c
 13891  002DA2  363E               	rlcf	i2___fldiv@grs+3,f,c
 13892  002DA4                     i2l1058:
 13893  002DA4  502C               	movf	i2___fldiv@a,w,c
 13894  002DA6  5C35               	subwf	i2___fldiv@rem,w,c
 13895  002DA8  502D               	movf	i2___fldiv@a+1,w,c
 13896  002DAA  5836               	subwfb	i2___fldiv@rem+1,w,c
 13897  002DAC  502E               	movf	i2___fldiv@a+2,w,c
 13898  002DAE  5837               	subwfb	i2___fldiv@rem+2,w,c
 13899  002DB0  502F               	movf	i2___fldiv@a+3,w,c
 13900  002DB2  5838               	subwfb	i2___fldiv@rem+3,w,c
 13901  002DB4  A0D8               	btfss	status,0,c
 13902  002DB6  D009               	goto	i2l1060
 13903  002DB8  8C3E               	bsf	i2___fldiv@grs+3,6,c
 13904  002DBA  502C               	movf	i2___fldiv@a,w,c
 13905  002DBC  5E35               	subwf	i2___fldiv@rem,f,c
 13906  002DBE  502D               	movf	i2___fldiv@a+1,w,c
 13907  002DC0  5A36               	subwfb	i2___fldiv@rem+1,f,c
 13908  002DC2  502E               	movf	i2___fldiv@a+2,w,c
 13909  002DC4  5A37               	subwfb	i2___fldiv@rem+2,f,c
 13910  002DC6  502F               	movf	i2___fldiv@a+3,w,c
 13911  002DC8  5A38               	subwfb	i2___fldiv@rem+3,f,c
 13912  002DCA                     i2l1060:
 13913  002DCA  2A40               	incf	i2___fldiv@aexp,f,c
 13914  002DCC                     i2l1056:
 13915  002DCC  0E19               	movlw	25
 13916  002DCE  6440               	cpfsgt	i2___fldiv@aexp,c
 13917  002DD0  D7D5               	goto	i2l1057
 13918  002DD2  5035               	movf	i2___fldiv@rem,w,c
 13919  002DD4  1036               	iorwf	i2___fldiv@rem+1,w,c
 13920  002DD6  1037               	iorwf	i2___fldiv@rem+2,w,c
 13921  002DD8  1038               	iorwf	i2___fldiv@rem+3,w,c
 13922  002DDA  B4D8               	btfsc	status,2,c
 13923  002DDC  D011               	goto	i2l1063
 13924  002DDE  803B               	bsf	i2___fldiv@grs,0,c
 13925  002DE0  D00F               	goto	i2l1063
 13926  002DE2  90D8               	bcf	status,0,c
 13927  002DE4  3628               	rlcf	i2___fldiv@b,f,c
 13928  002DE6  3629               	rlcf	i2___fldiv@b+1,f,c
 13929  002DE8  362A               	rlcf	i2___fldiv@b+2,f,c
 13930  002DEA  362B               	rlcf	i2___fldiv@b+3,f,c
 13931  002DEC  BE3E               	btfsc	i2___fldiv@grs+3,7,c
 13932  002DEE  8028               	bsf	i2___fldiv@b,0,c
 13933  002DF0  90D8               	bcf	status,0,c
 13934  002DF2  363B               	rlcf	i2___fldiv@grs,f,c
 13935  002DF4  363C               	rlcf	i2___fldiv@grs+1,f,c
 13936  002DF6  363D               	rlcf	i2___fldiv@grs+2,f,c
 13937  002DF8  363E               	rlcf	i2___fldiv@grs+3,f,c
 13938  002DFA  0639               	decf	i2___fldiv@new_exp,f,c
 13939  002DFC  A0D8               	btfss	status,0,c
 13940  002DFE  063A               	decf	i2___fldiv@new_exp+1,f,c
 13941  002E00                     i2l1063:
 13942  002E00  AE2A               	btfss	i2___fldiv@b+2,7,c
 13943  002E02  D7EF               	goto	i2l1064
 13944  002E04  0E00               	movlw	0
 13945  002E06  6E40               	movwf	i2___fldiv@aexp,c
 13946  002E08  AE3E               	btfss	i2___fldiv@grs+3,7,c
 13947  002E0A  D016               	goto	i2l1070
 13948  002E0C  0EFF               	movlw	255
 13949  002E0E  143B               	andwf	i2___fldiv@grs,w,c
 13950  002E10  6E30               	movwf	??i2___fldiv& (0+255),c
 13951  002E12  0EFF               	movlw	255
 13952  002E14  143C               	andwf	i2___fldiv@grs+1,w,c
 13953  002E16  6E31               	movwf	(??i2___fldiv+1)& (0+255),c
 13954  002E18  0EFF               	movlw	255
 13955  002E1A  143D               	andwf	i2___fldiv@grs+2,w,c
 13956  002E1C  6E32               	movwf	(??i2___fldiv+2)& (0+255),c
 13957  002E1E  0E7F               	movlw	127
 13958  002E20  143E               	andwf	i2___fldiv@grs+3,w,c
 13959  002E22  6E33               	movwf	(??i2___fldiv+3)& (0+255),c
 13960  002E24  5030               	movf	??i2___fldiv,w,c
 13961  002E26  1031               	iorwf	??i2___fldiv+1,w,c
 13962  002E28  1032               	iorwf	??i2___fldiv+2,w,c
 13963  002E2A  1033               	iorwf	??i2___fldiv+3,w,c
 13964  002E2C  A4D8               	btfss	status,2,c
 13965  002E2E  D002               	goto	i2u675_40
 13966  002E30  A028               	btfss	i2___fldiv@b,0,c
 13967  002E32  D002               	goto	i2l1070
 13968  002E34                     i2u675_40:
 13969  002E34  0E01               	movlw	1
 13970  002E36  6E40               	movwf	i2___fldiv@aexp,c
 13971  002E38                     i2l1070:
 13972  002E38  5040               	movf	i2___fldiv@aexp,w,c
 13973  002E3A  B4D8               	btfsc	status,2,c
 13974  002E3C  D01F               	goto	i2l1072
 13975  002E3E  0E01               	movlw	1
 13976  002E40  2628               	addwf	i2___fldiv@b,f,c
 13977  002E42  0E00               	movlw	0
 13978  002E44  2229               	addwfc	i2___fldiv@b+1,f,c
 13979  002E46  222A               	addwfc	i2___fldiv@b+2,f,c
 13980  002E48  222B               	addwfc	i2___fldiv@b+3,f,c
 13981  002E4A  A02B               	btfss	i2___fldiv@b+3,0,c
 13982  002E4C  D017               	goto	i2l1072
 13983  002E4E  C028  F030         	movff	i2___fldiv@b,??i2___fldiv
 13984  002E52  C029  F031         	movff	i2___fldiv@b+1,??i2___fldiv+1
 13985  002E56  C02A  F032         	movff	i2___fldiv@b+2,??i2___fldiv+2
 13986  002E5A  C02B  F033         	movff	i2___fldiv@b+3,??i2___fldiv+3
 13987  002E5E  3433               	rlcf	??i2___fldiv+3,w,c
 13988  002E60  3233               	rrcf	??i2___fldiv+3,f,c
 13989  002E62  3232               	rrcf	??i2___fldiv+2,f,c
 13990  002E64  3231               	rrcf	??i2___fldiv+1,f,c
 13991  002E66  3230               	rrcf	??i2___fldiv,f,c
 13992  002E68  C030  F028         	movff	??i2___fldiv,i2___fldiv@b
 13993  002E6C  C031  F029         	movff	??i2___fldiv+1,i2___fldiv@b+1
 13994  002E70  C032  F02A         	movff	??i2___fldiv+2,i2___fldiv@b+2
 13995  002E74  C033  F02B         	movff	??i2___fldiv+3,i2___fldiv@b+3
 13996  002E78  4A39               	infsnz	i2___fldiv@new_exp,f,c
 13997  002E7A  2A3A               	incf	i2___fldiv@new_exp+1,f,c
 13998  002E7C                     i2l1072:
 13999  002E7C  BE3A               	btfsc	i2___fldiv@new_exp+1,7,c
 14000  002E7E  D010               	goto	i2l1073
 14001  002E80  503A               	movf	i2___fldiv@new_exp+1,w,c
 14002  002E82  E103               	bnz	i2u678_40
 14003  002E84  2839               	incf	i2___fldiv@new_exp,w,c
 14004  002E86  A0D8               	btfss	status,0,c
 14005  002E88  D00B               	goto	i2l1073
 14006  002E8A                     i2u678_40:
 14007  002E8A  0E00               	movlw	0
 14008  002E8C  6E3A               	movwf	i2___fldiv@new_exp+1,c
 14009  002E8E  6839               	setf	i2___fldiv@new_exp,c
 14010  002E90  0E00               	movlw	0
 14011  002E92  6E28               	movwf	i2___fldiv@b,c
 14012  002E94  0E00               	movlw	0
 14013  002E96  6E29               	movwf	i2___fldiv@b+1,c
 14014  002E98  0E00               	movlw	0
 14015  002E9A  6E2A               	movwf	i2___fldiv@b+2,c
 14016  002E9C  0E00               	movlw	0
 14017  002E9E  6E2B               	movwf	i2___fldiv@b+3,c
 14018  002EA0                     i2l1073:
 14019  002EA0  BE3A               	btfsc	i2___fldiv@new_exp+1,7,c
 14020  002EA2  D005               	goto	i2u679_40
 14021  002EA4  503A               	movf	i2___fldiv@new_exp+1,w,c
 14022  002EA6  E111               	bnz	i2l5448
 14023  002EA8  0439               	decf	i2___fldiv@new_exp,w,c
 14024  002EAA  B0D8               	btfsc	status,0,c
 14025  002EAC  D00E               	goto	i2l1074
 14026  002EAE                     i2u679_40:
 14027  002EAE  0E00               	movlw	0
 14028  002EB0  6E3A               	movwf	i2___fldiv@new_exp+1,c
 14029  002EB2  0E00               	movlw	0
 14030  002EB4  6E39               	movwf	i2___fldiv@new_exp,c
 14031  002EB6  0E00               	movlw	0
 14032  002EB8  6E28               	movwf	i2___fldiv@b,c
 14033  002EBA  0E00               	movlw	0
 14034  002EBC  6E29               	movwf	i2___fldiv@b+1,c
 14035  002EBE  0E00               	movlw	0
 14036  002EC0  6E2A               	movwf	i2___fldiv@b+2,c
 14037  002EC2  0E00               	movlw	0
 14038  002EC4  6E2B               	movwf	i2___fldiv@b+3,c
 14039  002EC6  0E00               	movlw	0
 14040  002EC8  6E34               	movwf	i2___fldiv@sign,c
 14041  002ECA                     i2l1074:
 14042  002ECA                     i2l5448:
 14043  002ECA  C039  F03F         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 14044  002ECE  A03F               	btfss	i2___fldiv@bexp,0,c
 14045  002ED0  D002               	goto	i2l1075
 14046  002ED2  8E2A               	bsf	i2___fldiv@b+2,7,c
 14047  002ED4  D001               	goto	i2l1076
 14048  002ED6                     i2l1075:
 14049  002ED6  9E2A               	bcf	i2___fldiv@b+2,7,c
 14050  002ED8                     i2l1076:
 14051  002ED8  90D8               	bcf	status,0,c
 14052  002EDA  303F               	rrcf	i2___fldiv@bexp,w,c
 14053  002EDC  6E2B               	movwf	i2___fldiv@b+3,c
 14054  002EDE  5034               	movf	i2___fldiv@sign,w,c
 14055  002EE0  122B               	iorwf	i2___fldiv@b+3,f,c
 14056  002EE2  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 14057  002EE6  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 14058  002EEA  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 14059  002EEE  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 14060  002EF2  0012               	return	
 14061  002EF4                     __end_ofi2___fldiv:
 14062                           	opt stack 0
 14063                           pclatu	equ	0xFFB
 14064                           pclath	equ	0xFFA
 14065                           tblptru	equ	0xFF8
 14066                           tblptrh	equ	0xFF7
 14067                           tblptrl	equ	0xFF6
 14068                           tablat	equ	0xFF5
 14069                           prodh	equ	0xFF4
 14070                           prodl	equ	0xFF3
 14071                           intcon	equ	0xFF2
 14072                           intcon2	equ	0xFF1
 14073                           intcon3	equ	0xFF0
 14074                           indf0	equ	0xFEF
 14075                           postinc0	equ	0xFEE
 14076                           fsr0h	equ	0xFEA
 14077                           fsr0l	equ	0xFE9
 14078                           wreg	equ	0xFE8
 14079                           postdec1	equ	0xFE5
 14080                           fsr1h	equ	0xFE2
 14081                           fsr1l	equ	0xFE1
 14082                           indf2	equ	0xFDF
 14083                           postinc2	equ	0xFDE
 14084                           postdec2	equ	0xFDD
 14085                           fsr2h	equ	0xFDA
 14086                           fsr2l	equ	0xFD9
 14087                           status	equ	0xFD8
 14088                           
 14089 ;; *************** function i2___fladd *****************
 14090 ;; Defined at:
 14091 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;  b               4   18[COMRAM] unsigned char 
 14094 ;;  a               4   22[COMRAM] unsigned char 
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;  __fladd         1   37[COMRAM] unsigned char 
 14097 ;;  __fladd         1   36[COMRAM] unsigned char 
 14098 ;;  __fladd         1   35[COMRAM] unsigned char 
 14099 ;;  __fladd         1   34[COMRAM] unsigned char 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  4   18[COMRAM] unsigned char 
 14102 ;; Registers used:
 14103 ;;		wreg, status,2, status,0
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14109 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14110 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14113 ;;Total ram usage:       20 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; This function calls:
 14116 ;;		Nothing
 14117 ;; This function is called by:
 14118 ;;		_highIsr
 14119 ;;		i2_set_pwm1_percent
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text43
 14124  00208E                     __ptext43:
 14125                           	opt stack 0
 14126  00208E                     i2___fladd:
 14127                           	opt stack 21
 14128                           
 14129                           ;incstack = 0
 14130  00208E  5016               	movf	i2___fladd@b+3,w,c
 14131  002090  0B80               	andlw	128
 14132  002092  6E23               	movwf	i2___fladd@signs,c
 14133  002094  5016               	movf	i2___fladd@b+3,w,c
 14134  002096  2416               	addwf	i2___fladd@b+3,w,c
 14135  002098  6E25               	movwf	i2___fladd@bexp,c
 14136  00209A  BE15               	btfsc	i2___fladd@b+2,7,c
 14137  00209C  8025               	bsf	i2___fladd@bexp,0,c
 14138  00209E  5025               	movf	i2___fladd@bexp,w,c
 14139  0020A0  B4D8               	btfsc	status,2,c
 14140  0020A2  D00D               	goto	i2l989
 14141  0020A4  2825               	incf	i2___fladd@bexp,w,c
 14142  0020A6  A4D8               	btfss	status,2,c
 14143  0020A8  D008               	goto	i2l990
 14144  0020AA  0E00               	movlw	0
 14145  0020AC  6E13               	movwf	i2___fladd@b,c
 14146  0020AE  0E00               	movlw	0
 14147  0020B0  6E14               	movwf	i2___fladd@b+1,c
 14148  0020B2  0E00               	movlw	0
 14149  0020B4  6E15               	movwf	i2___fladd@b+2,c
 14150  0020B6  0E00               	movlw	0
 14151  0020B8  6E16               	movwf	i2___fladd@b+3,c
 14152  0020BA                     i2l990:
 14153  0020BA  8E15               	bsf	i2___fladd@b+2,7,c
 14154  0020BC  D006               	goto	L23
 14155  0020BE                     i2l989:
 14156  0020BE  0E00               	movlw	0
 14157  0020C0  6E13               	movwf	i2___fladd@b,c
 14158  0020C2  0E00               	movlw	0
 14159  0020C4  6E14               	movwf	i2___fladd@b+1,c
 14160  0020C6  0E00               	movlw	0
 14161  0020C8  6E15               	movwf	i2___fladd@b+2,c
 14162  0020CA                     L23:
 14163  0020CA  0E00               	movlw	0
 14164  0020CC  6E16               	movwf	i2___fladd@b+3,c
 14165  0020CE  501A               	movf	i2___fladd@a+3,w,c
 14166  0020D0  0B80               	andlw	128
 14167  0020D2  6E24               	movwf	i2___fladd@aexp,c
 14168  0020D4  5023               	movf	i2___fladd@signs,w,c
 14169  0020D6  1824               	xorwf	i2___fladd@aexp,w,c
 14170  0020D8  A4D8               	btfss	status,2,c
 14171  0020DA  8C23               	bsf	i2___fladd@signs,6,c
 14172  0020DC  501A               	movf	i2___fladd@a+3,w,c
 14173  0020DE  241A               	addwf	i2___fladd@a+3,w,c
 14174  0020E0  6E24               	movwf	i2___fladd@aexp,c
 14175  0020E2  BE19               	btfsc	i2___fladd@a+2,7,c
 14176  0020E4  8024               	bsf	i2___fladd@aexp,0,c
 14177  0020E6  5024               	movf	i2___fladd@aexp,w,c
 14178  0020E8  B4D8               	btfsc	status,2,c
 14179  0020EA  D00D               	goto	i2l994
 14180  0020EC  2824               	incf	i2___fladd@aexp,w,c
 14181  0020EE  A4D8               	btfss	status,2,c
 14182  0020F0  D008               	goto	i2l995
 14183  0020F2  0E00               	movlw	0
 14184  0020F4  6E17               	movwf	i2___fladd@a,c
 14185  0020F6  0E00               	movlw	0
 14186  0020F8  6E18               	movwf	i2___fladd@a+1,c
 14187  0020FA  0E00               	movlw	0
 14188  0020FC  6E19               	movwf	i2___fladd@a+2,c
 14189  0020FE  0E00               	movlw	0
 14190  002100  6E1A               	movwf	i2___fladd@a+3,c
 14191  002102                     i2l995:
 14192  002102  8E19               	bsf	i2___fladd@a+2,7,c
 14193  002104  D006               	goto	L24
 14194  002106                     i2l994:
 14195  002106  0E00               	movlw	0
 14196  002108  6E17               	movwf	i2___fladd@a,c
 14197  00210A  0E00               	movlw	0
 14198  00210C  6E18               	movwf	i2___fladd@a+1,c
 14199  00210E  0E00               	movlw	0
 14200  002110  6E19               	movwf	i2___fladd@a+2,c
 14201  002112                     L24:
 14202  002112  0E00               	movlw	0
 14203  002114  6E1A               	movwf	i2___fladd@a+3,c
 14204  002116  5025               	movf	i2___fladd@bexp,w,c
 14205  002118  5C24               	subwf	i2___fladd@aexp,w,c
 14206  00211A  B0D8               	btfsc	status,0,c
 14207  00211C  D022               	goto	i2l997
 14208  00211E  AC23               	btfss	i2___fladd@signs,6,c
 14209  002120  D002               	goto	i2l998
 14210  002122  0E80               	movlw	128
 14211  002124  1A23               	xorwf	i2___fladd@signs,f,c
 14212  002126                     i2l998:
 14213  002126  C025  F026         	movff	i2___fladd@bexp,i2___fladd@grs
 14214  00212A  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 14215  00212E  C026  F024         	movff	i2___fladd@grs,i2___fladd@aexp
 14216  002132  C013  F026         	movff	i2___fladd@b,i2___fladd@grs
 14217  002136  C017  F013         	movff	i2___fladd@a,i2___fladd@b
 14218  00213A  C026  F017         	movff	i2___fladd@grs,i2___fladd@a
 14219  00213E  C014  F026         	movff	i2___fladd@b+1,i2___fladd@grs
 14220  002142  C018  F014         	movff	i2___fladd@a+1,i2___fladd@b+1
 14221  002146  C026  F018         	movff	i2___fladd@grs,i2___fladd@a+1
 14222  00214A  C015  F026         	movff	i2___fladd@b+2,i2___fladd@grs
 14223  00214E  C019  F015         	movff	i2___fladd@a+2,i2___fladd@b+2
 14224  002152  C026  F019         	movff	i2___fladd@grs,i2___fladd@a+2
 14225  002156  C016  F026         	movff	i2___fladd@b+3,i2___fladd@grs
 14226  00215A  C01A  F016         	movff	i2___fladd@a+3,i2___fladd@b+3
 14227  00215E  C026  F01A         	movff	i2___fladd@grs,i2___fladd@a+3
 14228  002162                     i2l997:
 14229  002162  0E00               	movlw	0
 14230  002164  6E26               	movwf	i2___fladd@grs,c
 14231  002166  5025               	movf	i2___fladd@bexp,w,c
 14232  002168  6E1B               	movwf	??i2___fladd& (0+255),c
 14233  00216A  6A1C               	clrf	(??i2___fladd+1)& (0+255),c
 14234  00216C  1E1B               	comf	??i2___fladd,f,c
 14235  00216E  1E1C               	comf	??i2___fladd+1,f,c
 14236  002170  4A1B               	infsnz	??i2___fladd,f,c
 14237  002172  2A1C               	incf	??i2___fladd+1,f,c
 14238  002174  5024               	movf	i2___fladd@aexp,w,c
 14239  002176  6E1D               	movwf	(??i2___fladd+2)& (0+255),c
 14240  002178  6A1E               	clrf	(??i2___fladd+3)& (0+255),c
 14241  00217A  501B               	movf	??i2___fladd,w,c
 14242  00217C  261D               	addwf	??i2___fladd+2,f,c
 14243  00217E  501C               	movf	??i2___fladd+1,w,c
 14244  002180  221E               	addwfc	??i2___fladd+3,f,c
 14245  002182  BE1E               	btfsc	??i2___fladd+3,7,c
 14246  002184  D02C               	goto	i2l1001
 14247  002186  501E               	movf	??i2___fladd+3,w,c
 14248  002188  E104               	bnz	i2u628_40
 14249  00218A  0E1A               	movlw	26
 14250  00218C  5C1D               	subwf	??i2___fladd+2,w,c
 14251  00218E  A0D8               	btfss	status,0,c
 14252  002190  D026               	goto	i2l1001
 14253  002192                     i2u628_40:
 14254  002192  5013               	movf	i2___fladd@b,w,c
 14255  002194  1014               	iorwf	i2___fladd@b+1,w,c
 14256  002196  1015               	iorwf	i2___fladd@b+2,w,c
 14257  002198  1016               	iorwf	i2___fladd@b+3,w,c
 14258  00219A  B4D8               	btfsc	status,2,c
 14259  00219C  D002               	goto	i2u629_40
 14260  00219E  0E01               	movlw	1
 14261  0021A0  D001               	goto	i2u630_40
 14262  0021A2                     i2u629_40:
 14263  0021A2  0E00               	movlw	0
 14264  0021A4                     i2u630_40:
 14265  0021A4  6E26               	movwf	i2___fladd@grs,c
 14266  0021A6  0E00               	movlw	0
 14267  0021A8  6E13               	movwf	i2___fladd@b,c
 14268  0021AA  0E00               	movlw	0
 14269  0021AC  6E14               	movwf	i2___fladd@b+1,c
 14270  0021AE  0E00               	movlw	0
 14271  0021B0  6E15               	movwf	i2___fladd@b+2,c
 14272  0021B2  0E00               	movlw	0
 14273  0021B4  6E16               	movwf	i2___fladd@b+3,c
 14274  0021B6  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 14275  0021BA  D015               	goto	i2u633_40
 14276  0021BC                     i2l1002:
 14277  0021BC  A026               	btfss	i2___fladd@grs,0,c
 14278  0021BE  D005               	goto	i2l1003
 14279  0021C0  90D8               	bcf	status,0,c
 14280  0021C2  3026               	rrcf	i2___fladd@grs,w,c
 14281  0021C4  0901               	iorlw	1
 14282  0021C6  6E26               	movwf	i2___fladd@grs,c
 14283  0021C8  D002               	goto	i2l1004
 14284  0021CA                     i2l1003:
 14285  0021CA  90D8               	bcf	status,0,c
 14286  0021CC  3226               	rrcf	i2___fladd@grs,f,c
 14287  0021CE                     i2l1004:
 14288  0021CE  B013               	btfsc	i2___fladd@b,0,c
 14289  0021D0  8E26               	bsf	i2___fladd@grs,7,c
 14290  0021D2  3416               	rlcf	i2___fladd@b+3,w,c
 14291  0021D4  3216               	rrcf	i2___fladd@b+3,f,c
 14292  0021D6  3215               	rrcf	i2___fladd@b+2,f,c
 14293  0021D8  3214               	rrcf	i2___fladd@b+1,f,c
 14294  0021DA  3213               	rrcf	i2___fladd@b,f,c
 14295  0021DC  2A25               	incf	i2___fladd@bexp,f,c
 14296  0021DE                     i2l1001:
 14297  0021DE  5024               	movf	i2___fladd@aexp,w,c
 14298  0021E0  5C25               	subwf	i2___fladd@bexp,w,c
 14299  0021E2  A0D8               	btfss	status,0,c
 14300  0021E4  D7EB               	goto	i2l1002
 14301  0021E6                     i2u633_40:
 14302  0021E6  BC23               	btfsc	i2___fladd@signs,6,c
 14303  0021E8  D029               	goto	i2l1007
 14304  0021EA  5025               	movf	i2___fladd@bexp,w,c
 14305  0021EC  A4D8               	btfss	status,2,c
 14306  0021EE  D009               	goto	i2l1008
 14307  0021F0  0E00               	movlw	0
 14308  0021F2  6E13               	movwf	?i2___fladd,c
 14309  0021F4  0E00               	movlw	0
 14310  0021F6  6E14               	movwf	?i2___fladd+1,c
 14311  0021F8  0E00               	movlw	0
 14312  0021FA  6E15               	movwf	?i2___fladd+2,c
 14313  0021FC  0E00               	movlw	0
 14314  0021FE  6E16               	movwf	?i2___fladd+3,c
 14315  002200  0012               	return	
 14316  002202                     i2l1008:
 14317  002202  5017               	movf	i2___fladd@a,w,c
 14318  002204  2613               	addwf	i2___fladd@b,f,c
 14319  002206  5018               	movf	i2___fladd@a+1,w,c
 14320  002208  2214               	addwfc	i2___fladd@b+1,f,c
 14321  00220A  5019               	movf	i2___fladd@a+2,w,c
 14322  00220C  2215               	addwfc	i2___fladd@b+2,f,c
 14323  00220E  501A               	movf	i2___fladd@a+3,w,c
 14324  002210  2216               	addwfc	i2___fladd@b+3,f,c
 14325  002212  A016               	btfss	i2___fladd@b+3,0,c
 14326  002214  D083               	goto	i2u646_40
 14327  002216  A026               	btfss	i2___fladd@grs,0,c
 14328  002218  D006               	goto	i2l1011
 14329  00221A  90D8               	bcf	status,0,c
 14330  00221C  3226               	rrcf	i2___fladd@grs,f,c
 14331  00221E  5026               	movf	i2___fladd@grs,w,c
 14332  002220  0901               	iorlw	1
 14333  002222  6E26               	movwf	i2___fladd@grs,c
 14334  002224  D002               	goto	i2l1012
 14335  002226                     i2l1011:
 14336  002226  90D8               	bcf	status,0,c
 14337  002228  3226               	rrcf	i2___fladd@grs,f,c
 14338  00222A                     i2l1012:
 14339  00222A  B013               	btfsc	i2___fladd@b,0,c
 14340  00222C  8E26               	bsf	i2___fladd@grs,7,c
 14341  00222E  3416               	rlcf	i2___fladd@b+3,w,c
 14342  002230  3216               	rrcf	i2___fladd@b+3,f,c
 14343  002232  3215               	rrcf	i2___fladd@b+2,f,c
 14344  002234  3214               	rrcf	i2___fladd@b+1,f,c
 14345  002236  3213               	rrcf	i2___fladd@b,f,c
 14346  002238  2A25               	incf	i2___fladd@bexp,f,c
 14347  00223A  D070               	goto	i2u646_40
 14348  00223C                     i2l1007:
 14349  00223C  5017               	movf	i2___fladd@a,w,c
 14350  00223E  5C13               	subwf	i2___fladd@b,w,c
 14351  002240  5018               	movf	i2___fladd@a+1,w,c
 14352  002242  5814               	subwfb	i2___fladd@b+1,w,c
 14353  002244  5019               	movf	i2___fladd@a+2,w,c
 14354  002246  5815               	subwfb	i2___fladd@b+2,w,c
 14355  002248  5016               	movf	i2___fladd@b+3,w,c
 14356  00224A  0A80               	xorlw	128
 14357  00224C  6E1B               	movwf	??i2___fladd& (0+255),c
 14358  00224E  501A               	movf	i2___fladd@a+3,w,c
 14359  002250  0A80               	xorlw	128
 14360  002252  581B               	subwfb	??i2___fladd& (0+255),w,c
 14361  002254  B0D8               	btfsc	status,0,c
 14362  002256  D036               	goto	i2l1015
 14363  002258  C013  F01B         	movff	i2___fladd@b,??i2___fladd
 14364  00225C  C014  F01C         	movff	i2___fladd@b+1,??i2___fladd+1
 14365  002260  C015  F01D         	movff	i2___fladd@b+2,??i2___fladd+2
 14366  002264  C016  F01E         	movff	i2___fladd@b+3,??i2___fladd+3
 14367  002268  1E1B               	comf	??i2___fladd,f,c
 14368  00226A  1E1C               	comf	??i2___fladd+1,f,c
 14369  00226C  1E1D               	comf	??i2___fladd+2,f,c
 14370  00226E  1E1E               	comf	??i2___fladd+3,f,c
 14371  002270  2A1B               	incf	??i2___fladd,f,c
 14372  002272  0E00               	movlw	0
 14373  002274  221C               	addwfc	??i2___fladd+1,f,c
 14374  002276  221D               	addwfc	??i2___fladd+2,f,c
 14375  002278  221E               	addwfc	??i2___fladd+3,f,c
 14376  00227A  5017               	movf	i2___fladd@a,w,c
 14377  00227C  241B               	addwf	??i2___fladd,w,c
 14378  00227E  6E1F               	movwf	(??i2___fladd+4)& (0+255),c
 14379  002280  5018               	movf	i2___fladd@a+1,w,c
 14380  002282  201C               	addwfc	??i2___fladd+1,w,c
 14381  002284  6E20               	movwf	(??i2___fladd+5)& (0+255),c
 14382  002286  5019               	movf	i2___fladd@a+2,w,c
 14383  002288  201D               	addwfc	??i2___fladd+2,w,c
 14384  00228A  6E21               	movwf	(??i2___fladd+6)& (0+255),c
 14385  00228C  501A               	movf	i2___fladd@a+3,w,c
 14386  00228E  201E               	addwfc	??i2___fladd+3,w,c
 14387  002290  6E22               	movwf	(??i2___fladd+7)& (0+255),c
 14388  002292  0EFF               	movlw	255
 14389  002294  241F               	addwf	??i2___fladd+4,w,c
 14390  002296  6E13               	movwf	i2___fladd@b,c
 14391  002298  0EFF               	movlw	255
 14392  00229A  2020               	addwfc	??i2___fladd+5,w,c
 14393  00229C  6E14               	movwf	i2___fladd@b+1,c
 14394  00229E  0EFF               	movlw	255
 14395  0022A0  2021               	addwfc	??i2___fladd+6,w,c
 14396  0022A2  6E15               	movwf	i2___fladd@b+2,c
 14397  0022A4  0EFF               	movlw	255
 14398  0022A6  2022               	addwfc	??i2___fladd+7,w,c
 14399  0022A8  6E16               	movwf	i2___fladd@b+3,c
 14400  0022AA  0E80               	movlw	128
 14401  0022AC  1A23               	xorwf	i2___fladd@signs,f,c
 14402  0022AE  6C26               	negf	i2___fladd@grs,c
 14403  0022B0  5026               	movf	i2___fladd@grs,w,c
 14404  0022B2  A4D8               	btfss	status,2,c
 14405  0022B4  D00F               	goto	i2l1017
 14406  0022B6  0E01               	movlw	1
 14407  0022B8  2613               	addwf	i2___fladd@b,f,c
 14408  0022BA  0E00               	movlw	0
 14409  0022BC  2214               	addwfc	i2___fladd@b+1,f,c
 14410  0022BE  2215               	addwfc	i2___fladd@b+2,f,c
 14411  0022C0  2216               	addwfc	i2___fladd@b+3,f,c
 14412  0022C2  D008               	goto	i2l1017
 14413  0022C4                     i2l1015:
 14414  0022C4  5017               	movf	i2___fladd@a,w,c
 14415  0022C6  5E13               	subwf	i2___fladd@b,f,c
 14416  0022C8  5018               	movf	i2___fladd@a+1,w,c
 14417  0022CA  5A14               	subwfb	i2___fladd@b+1,f,c
 14418  0022CC  5019               	movf	i2___fladd@a+2,w,c
 14419  0022CE  5A15               	subwfb	i2___fladd@b+2,f,c
 14420  0022D0  501A               	movf	i2___fladd@a+3,w,c
 14421  0022D2  5A16               	subwfb	i2___fladd@b+3,f,c
 14422  0022D4                     i2l1017:
 14423  0022D4  5013               	movf	i2___fladd@b,w,c
 14424  0022D6  1014               	iorwf	i2___fladd@b+1,w,c
 14425  0022D8  1015               	iorwf	i2___fladd@b+2,w,c
 14426  0022DA  1016               	iorwf	i2___fladd@b+3,w,c
 14427  0022DC  A4D8               	btfss	status,2,c
 14428  0022DE  D01C               	goto	i2l1024
 14429  0022E0  5026               	movf	i2___fladd@grs,w,c
 14430  0022E2  A4D8               	btfss	status,2,c
 14431  0022E4  D019               	goto	i2l1024
 14432  0022E6  0E00               	movlw	0
 14433  0022E8  6E13               	movwf	?i2___fladd,c
 14434  0022EA  0E00               	movlw	0
 14435  0022EC  6E14               	movwf	?i2___fladd+1,c
 14436  0022EE  0E00               	movlw	0
 14437  0022F0  6E15               	movwf	?i2___fladd+2,c
 14438  0022F2  0E00               	movlw	0
 14439  0022F4  6E16               	movwf	?i2___fladd+3,c
 14440  0022F6  0012               	return	
 14441  0022F8  90D8               	bcf	status,0,c
 14442  0022FA  3613               	rlcf	i2___fladd@b,f,c
 14443  0022FC  3614               	rlcf	i2___fladd@b+1,f,c
 14444  0022FE  3615               	rlcf	i2___fladd@b+2,f,c
 14445  002300  3616               	rlcf	i2___fladd@b+3,f,c
 14446  002302  BE26               	btfsc	i2___fladd@grs,7,c
 14447  002304  8013               	bsf	i2___fladd@b,0,c
 14448  002306  A026               	btfss	i2___fladd@grs,0,c
 14449  002308  D002               	goto	i2l1022
 14450  00230A  80D8               	bsf	status,0,c
 14451  00230C  D001               	goto	L25
 14452  00230E                     i2l1022:
 14453  00230E  90D8               	bcf	status,0,c
 14454  002310                     L25:
 14455  002310  3626               	rlcf	i2___fladd@grs,f,c
 14456  002312  5025               	movf	i2___fladd@bexp,w,c
 14457  002314  A4D8               	btfss	status,2,c
 14458  002316  0625               	decf	i2___fladd@bexp,f,c
 14459  002318                     i2l1024:
 14460  002318  AE15               	btfss	i2___fladd@b+2,7,c
 14461  00231A  D7EE               	goto	i2l1020
 14462  00231C                     i2u646_40:
 14463  00231C  0E00               	movlw	0
 14464  00231E  6E24               	movwf	i2___fladd@aexp,c
 14465  002320  AE26               	btfss	i2___fladd@grs,7,c
 14466  002322  D00A               	goto	i2l1029
 14467  002324  C026  F01B         	movff	i2___fladd@grs,??i2___fladd
 14468  002328  0E7F               	movlw	127
 14469  00232A  161B               	andwf	??i2___fladd,f,c
 14470  00232C  A4D8               	btfss	status,2,c
 14471  00232E  D002               	goto	i2u649_40
 14472  002330  A013               	btfss	i2___fladd@b,0,c
 14473  002332  D002               	goto	i2l1029
 14474  002334                     i2u649_40:
 14475  002334  0E01               	movlw	1
 14476  002336  6E24               	movwf	i2___fladd@aexp,c
 14477  002338                     i2l1029:
 14478  002338  5024               	movf	i2___fladd@aexp,w,c
 14479  00233A  B4D8               	btfsc	status,2,c
 14480  00233C  D020               	goto	i2l1032
 14481  00233E  0E01               	movlw	1
 14482  002340  2613               	addwf	i2___fladd@b,f,c
 14483  002342  0E00               	movlw	0
 14484  002344  2214               	addwfc	i2___fladd@b+1,f,c
 14485  002346  2215               	addwfc	i2___fladd@b+2,f,c
 14486  002348  2216               	addwfc	i2___fladd@b+3,f,c
 14487  00234A  A016               	btfss	i2___fladd@b+3,0,c
 14488  00234C  D018               	goto	i2l1032
 14489  00234E  C013  F01B         	movff	i2___fladd@b,??i2___fladd
 14490  002352  C014  F01C         	movff	i2___fladd@b+1,??i2___fladd+1
 14491  002356  C015  F01D         	movff	i2___fladd@b+2,??i2___fladd+2
 14492  00235A  C016  F01E         	movff	i2___fladd@b+3,??i2___fladd+3
 14493  00235E  341E               	rlcf	??i2___fladd+3,w,c
 14494  002360  321E               	rrcf	??i2___fladd+3,f,c
 14495  002362  321D               	rrcf	??i2___fladd+2,f,c
 14496  002364  321C               	rrcf	??i2___fladd+1,f,c
 14497  002366  321B               	rrcf	??i2___fladd,f,c
 14498  002368  C01B  F013         	movff	??i2___fladd,i2___fladd@b
 14499  00236C  C01C  F014         	movff	??i2___fladd+1,i2___fladd@b+1
 14500  002370  C01D  F015         	movff	??i2___fladd+2,i2___fladd@b+2
 14501  002374  C01E  F016         	movff	??i2___fladd+3,i2___fladd@b+3
 14502  002378  2825               	incf	i2___fladd@bexp,w,c
 14503  00237A  A4D8               	btfss	status,2,c
 14504  00237C  2A25               	incf	i2___fladd@bexp,f,c
 14505  00237E                     i2l1032:
 14506  00237E  2825               	incf	i2___fladd@bexp,w,c
 14507  002380  B4D8               	btfsc	status,2,c
 14508  002382  D003               	goto	i2u654_40
 14509  002384  5025               	movf	i2___fladd@bexp,w,c
 14510  002386  A4D8               	btfss	status,2,c
 14511  002388  D00D               	goto	i2l1036
 14512  00238A                     i2u654_40:
 14513  00238A  0E00               	movlw	0
 14514  00238C  6E13               	movwf	i2___fladd@b,c
 14515  00238E  0E00               	movlw	0
 14516  002390  6E14               	movwf	i2___fladd@b+1,c
 14517  002392  0E00               	movlw	0
 14518  002394  6E15               	movwf	i2___fladd@b+2,c
 14519  002396  0E00               	movlw	0
 14520  002398  6E16               	movwf	i2___fladd@b+3,c
 14521  00239A  5025               	movf	i2___fladd@bexp,w,c
 14522  00239C  A4D8               	btfss	status,2,c
 14523  00239E  D002               	goto	i2l1036
 14524  0023A0  0E00               	movlw	0
 14525  0023A2  6E23               	movwf	i2___fladd@signs,c
 14526  0023A4                     i2l1036:
 14527  0023A4  A025               	btfss	i2___fladd@bexp,0,c
 14528  0023A6  D002               	goto	i2l1037
 14529  0023A8  8E15               	bsf	i2___fladd@b+2,7,c
 14530  0023AA  D001               	goto	i2l1038
 14531  0023AC                     i2l1037:
 14532  0023AC  9E15               	bcf	i2___fladd@b+2,7,c
 14533  0023AE                     i2l1038:
 14534  0023AE  90D8               	bcf	status,0,c
 14535  0023B0  3025               	rrcf	i2___fladd@bexp,w,c
 14536  0023B2  6E16               	movwf	i2___fladd@b+3,c
 14537  0023B4  BE23               	btfsc	i2___fladd@signs,7,c
 14538  0023B6  8E16               	bsf	i2___fladd@b+3,7,c
 14539  0023B8  C013  F013         	movff	i2___fladd@b,?i2___fladd
 14540  0023BC  C014  F014         	movff	i2___fladd@b+1,?i2___fladd+1
 14541  0023C0  C015  F015         	movff	i2___fladd@b+2,?i2___fladd+2
 14542  0023C4  C016  F016         	movff	i2___fladd@b+3,?i2___fladd+3
 14543  0023C8  0012               	return	
 14544  0023CA                     __end_ofi2___fladd:
 14545                           	opt stack 0
 14546                           pclatu	equ	0xFFB
 14547                           pclath	equ	0xFFA
 14548                           tblptru	equ	0xFF8
 14549                           tblptrh	equ	0xFF7
 14550                           tblptrl	equ	0xFF6
 14551                           tablat	equ	0xFF5
 14552                           prodh	equ	0xFF4
 14553                           prodl	equ	0xFF3
 14554                           intcon	equ	0xFF2
 14555                           intcon2	equ	0xFF1
 14556                           intcon3	equ	0xFF0
 14557                           indf0	equ	0xFEF
 14558                           postinc0	equ	0xFEE
 14559                           fsr0h	equ	0xFEA
 14560                           fsr0l	equ	0xFE9
 14561                           wreg	equ	0xFE8
 14562                           postdec1	equ	0xFE5
 14563                           fsr1h	equ	0xFE2
 14564                           fsr1l	equ	0xFE1
 14565                           indf2	equ	0xFDF
 14566                           postinc2	equ	0xFDE
 14567                           postdec2	equ	0xFDD
 14568                           fsr2h	equ	0xFDA
 14569                           fsr2l	equ	0xFD9
 14570                           status	equ	0xFD8
 14571                           
 14572 ;; *************** function i2___xxtofl *****************
 14573 ;; Defined at:
 14574 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;  sign            1    wreg     unsigned char 
 14577 ;;  val             4    0[COMRAM] long 
 14578 ;; Auto vars:     Size  Location     Type
 14579 ;;  sign            1    8[COMRAM] unsigned char 
 14580 ;;  __xxtofl        4   10[COMRAM] unsigned long 
 14581 ;;  __xxtofl        1    9[COMRAM] unsigned char 
 14582 ;; Return value:  Size  Location     Type
 14583 ;;                  4    0[COMRAM] unsigned char 
 14584 ;; Registers used:
 14585 ;;		wreg, status,2, status,0
 14586 ;; Tracked objects:
 14587 ;;		On entry : 0/0
 14588 ;;		On exit  : 0/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14592 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14594 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;Total ram usage:       14 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; This function calls:
 14598 ;;		Nothing
 14599 ;; This function is called by:
 14600 ;;		_highIsr
 14601 ;; This function uses a non-reentrant model
 14602 ;;
 14603                           
 14604                           	psect	text44
 14605  00346E                     __ptext44:
 14606                           	opt stack 0
 14607  00346E                     i2___xxtofl:
 14608                           	opt stack 22
 14609                           
 14610                           ;incstack = 0
 14611                           ;i2___xxtofl@sign stored from wreg
 14612  00346E  6E09               	movwf	i2___xxtofl@sign,c
 14613  003470  5009               	movf	i2___xxtofl@sign,w,c
 14614  003472  A4D8               	btfss	status,2,c
 14615  003474  AE04               	btfss	i2___xxtofl@val+3,7,c
 14616  003476  D01A               	goto	i2l1108
 14617  003478  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 14618  00347C  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 14619  003480  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 14620  003484  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 14621  003488  1E05               	comf	??i2___xxtofl,f,c
 14622  00348A  1E06               	comf	??i2___xxtofl+1,f,c
 14623  00348C  1E07               	comf	??i2___xxtofl+2,f,c
 14624  00348E  1E08               	comf	??i2___xxtofl+3,f,c
 14625  003490  2A05               	incf	??i2___xxtofl,f,c
 14626  003492  0E00               	movlw	0
 14627  003494  2206               	addwfc	??i2___xxtofl+1,f,c
 14628  003496  2207               	addwfc	??i2___xxtofl+2,f,c
 14629  003498  2208               	addwfc	??i2___xxtofl+3,f,c
 14630  00349A  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 14631  00349E  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 14632  0034A2  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 14633  0034A6  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 14634  0034AA  D008               	goto	i2l1109
 14635  0034AC                     i2l1108:
 14636  0034AC  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 14637  0034B0  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 14638  0034B4  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 14639  0034B8  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 14640  0034BC                     i2l1109:
 14641  0034BC  5001               	movf	i2___xxtofl@val,w,c
 14642  0034BE  1002               	iorwf	i2___xxtofl@val+1,w,c
 14643  0034C0  1003               	iorwf	i2___xxtofl@val+2,w,c
 14644  0034C2  1004               	iorwf	i2___xxtofl@val+3,w,c
 14645  0034C4  A4D8               	btfss	status,2,c
 14646  0034C6  D009               	goto	i2l1110
 14647  0034C8  0E00               	movlw	0
 14648  0034CA  6E01               	movwf	?i2___xxtofl,c
 14649  0034CC  0E00               	movlw	0
 14650  0034CE  6E02               	movwf	?i2___xxtofl+1,c
 14651  0034D0  0E00               	movlw	0
 14652  0034D2  6E03               	movwf	?i2___xxtofl+2,c
 14653  0034D4  0E00               	movlw	0
 14654  0034D6  6E04               	movwf	?i2___xxtofl+3,c
 14655  0034D8  0012               	return	
 14656  0034DA                     i2l1110:
 14657  0034DA  0E96               	movlw	150
 14658  0034DC  6E0A               	movwf	i2___xxtofl@exp,c
 14659  0034DE  D006               	goto	i2l1112
 14660  0034E0  2A0A               	incf	i2___xxtofl@exp,f,c
 14661  0034E2  90D8               	bcf	status,0,c
 14662  0034E4  320E               	rrcf	i2___xxtofl@arg+3,f,c
 14663  0034E6  320D               	rrcf	i2___xxtofl@arg+2,f,c
 14664  0034E8  320C               	rrcf	i2___xxtofl@arg+1,f,c
 14665  0034EA  320B               	rrcf	i2___xxtofl@arg,f,c
 14666  0034EC                     i2l1112:
 14667  0034EC  0E00               	movlw	0
 14668  0034EE  140B               	andwf	i2___xxtofl@arg,w,c
 14669  0034F0  6E05               	movwf	??i2___xxtofl& (0+255),c
 14670  0034F2  0E00               	movlw	0
 14671  0034F4  140C               	andwf	i2___xxtofl@arg+1,w,c
 14672  0034F6  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 14673  0034F8  0E00               	movlw	0
 14674  0034FA  140D               	andwf	i2___xxtofl@arg+2,w,c
 14675  0034FC  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 14676  0034FE  0EFE               	movlw	254
 14677  003500  140E               	andwf	i2___xxtofl@arg+3,w,c
 14678  003502  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 14679  003504  5005               	movf	??i2___xxtofl,w,c
 14680  003506  1006               	iorwf	??i2___xxtofl+1,w,c
 14681  003508  1007               	iorwf	??i2___xxtofl+2,w,c
 14682  00350A  1008               	iorwf	??i2___xxtofl+3,w,c
 14683  00350C  B4D8               	btfsc	status,2,c
 14684  00350E  D00D               	goto	i2l1115
 14685  003510  D7E7               	goto	i2l1113
 14686  003512  2A0A               	incf	i2___xxtofl@exp,f,c
 14687  003514  0E01               	movlw	1
 14688  003516  260B               	addwf	i2___xxtofl@arg,f,c
 14689  003518  0E00               	movlw	0
 14690  00351A  220C               	addwfc	i2___xxtofl@arg+1,f,c
 14691  00351C  220D               	addwfc	i2___xxtofl@arg+2,f,c
 14692  00351E  220E               	addwfc	i2___xxtofl@arg+3,f,c
 14693  003520  90D8               	bcf	status,0,c
 14694  003522  320E               	rrcf	i2___xxtofl@arg+3,f,c
 14695  003524  320D               	rrcf	i2___xxtofl@arg+2,f,c
 14696  003526  320C               	rrcf	i2___xxtofl@arg+1,f,c
 14697  003528  320B               	rrcf	i2___xxtofl@arg,f,c
 14698  00352A                     i2l1115:
 14699  00352A  0E00               	movlw	0
 14700  00352C  140B               	andwf	i2___xxtofl@arg,w,c
 14701  00352E  6E05               	movwf	??i2___xxtofl& (0+255),c
 14702  003530  0E00               	movlw	0
 14703  003532  140C               	andwf	i2___xxtofl@arg+1,w,c
 14704  003534  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 14705  003536  0E00               	movlw	0
 14706  003538  140D               	andwf	i2___xxtofl@arg+2,w,c
 14707  00353A  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 14708  00353C  0EFF               	movlw	255
 14709  00353E  140E               	andwf	i2___xxtofl@arg+3,w,c
 14710  003540  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 14711  003542  5005               	movf	??i2___xxtofl,w,c
 14712  003544  1006               	iorwf	??i2___xxtofl+1,w,c
 14713  003546  1007               	iorwf	??i2___xxtofl+2,w,c
 14714  003548  1008               	iorwf	??i2___xxtofl+3,w,c
 14715  00354A  B4D8               	btfsc	status,2,c
 14716  00354C  D007               	goto	i2l1118
 14717  00354E  D7E1               	goto	i2l1116
 14718  003550  060A               	decf	i2___xxtofl@exp,f,c
 14719  003552  90D8               	bcf	status,0,c
 14720  003554  360B               	rlcf	i2___xxtofl@arg,f,c
 14721  003556  360C               	rlcf	i2___xxtofl@arg+1,f,c
 14722  003558  360D               	rlcf	i2___xxtofl@arg+2,f,c
 14723  00355A  360E               	rlcf	i2___xxtofl@arg+3,f,c
 14724  00355C                     i2l1118:
 14725  00355C  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
 14726  00355E  D003               	goto	i2u732_40
 14727  003560  0E02               	movlw	2
 14728  003562  600A               	cpfslt	i2___xxtofl@exp,c
 14729  003564  D7F5               	goto	i2l1119
 14730  003566                     i2u732_40:
 14731  003566  B00A               	btfsc	i2___xxtofl@exp,0,c
 14732  003568  D008               	goto	i2l1123
 14733  00356A  0EFF               	movlw	255
 14734  00356C  160B               	andwf	i2___xxtofl@arg,f,c
 14735  00356E  0EFF               	movlw	255
 14736  003570  160C               	andwf	i2___xxtofl@arg+1,f,c
 14737  003572  0E7F               	movlw	127
 14738  003574  160D               	andwf	i2___xxtofl@arg+2,f,c
 14739  003576  0EFF               	movlw	255
 14740  003578  160E               	andwf	i2___xxtofl@arg+3,f,c
 14741  00357A                     i2l1123:
 14742  00357A  90D8               	bcf	status,0,c
 14743  00357C  320A               	rrcf	i2___xxtofl@exp,f,c
 14744  00357E  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 14745  003582  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
 14746  003584  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
 14747  003586  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
 14748  003588  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 14749  00358C  6A07               	clrf	??i2___xxtofl+2,c
 14750  00358E  6A06               	clrf	??i2___xxtofl+1,c
 14751  003590  6A05               	clrf	??i2___xxtofl,c
 14752  003592  5005               	movf	??i2___xxtofl,w,c
 14753  003594  120B               	iorwf	i2___xxtofl@arg,f,c
 14754  003596  5006               	movf	??i2___xxtofl+1,w,c
 14755  003598  120C               	iorwf	i2___xxtofl@arg+1,f,c
 14756  00359A  5007               	movf	??i2___xxtofl+2,w,c
 14757  00359C  120D               	iorwf	i2___xxtofl@arg+2,f,c
 14758  00359E  5008               	movf	??i2___xxtofl+3,w,c
 14759  0035A0  120E               	iorwf	i2___xxtofl@arg+3,f,c
 14760  0035A2  5009               	movf	i2___xxtofl@sign,w,c
 14761  0035A4  A4D8               	btfss	status,2,c
 14762  0035A6  AE04               	btfss	i2___xxtofl@val+3,7,c
 14763  0035A8  D001               	goto	i2l1124
 14764  0035AA  8E0E               	bsf	i2___xxtofl@arg+3,7,c
 14765  0035AC                     i2l1124:
 14766  0035AC  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 14767  0035B0  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 14768  0035B4  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 14769  0035B8  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 14770  0035BC  0012               	return	
 14771  0035BE                     __end_ofi2___xxtofl:
 14772                           	opt stack 0
 14773                           pclatu	equ	0xFFB
 14774                           pclath	equ	0xFFA
 14775                           tblptru	equ	0xFF8
 14776                           tblptrh	equ	0xFF7
 14777                           tblptrl	equ	0xFF6
 14778                           tablat	equ	0xFF5
 14779                           prodh	equ	0xFF4
 14780                           prodl	equ	0xFF3
 14781                           intcon	equ	0xFF2
 14782                           intcon2	equ	0xFF1
 14783                           intcon3	equ	0xFF0
 14784                           indf0	equ	0xFEF
 14785                           postinc0	equ	0xFEE
 14786                           fsr0h	equ	0xFEA
 14787                           fsr0l	equ	0xFE9
 14788                           wreg	equ	0xFE8
 14789                           postdec1	equ	0xFE5
 14790                           fsr1h	equ	0xFE2
 14791                           fsr1l	equ	0xFE1
 14792                           indf2	equ	0xFDF
 14793                           postinc2	equ	0xFDE
 14794                           postdec2	equ	0xFDD
 14795                           fsr2h	equ	0xFDA
 14796                           fsr2l	equ	0xFD9
 14797                           status	equ	0xFD8
 14798                           
 14799 ;; *************** function i2___flneg *****************
 14800 ;; Defined at:
 14801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;  f1              4   14[COMRAM] unsigned char 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;		None
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  4   14[COMRAM] unsigned char 
 14808 ;; Registers used:
 14809 ;;		wreg, status,2, status,0
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14818 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14819 ;;Total ram usage:        4 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; This function calls:
 14822 ;;		Nothing
 14823 ;; This function is called by:
 14824 ;;		_highIsr
 14825 ;; This function uses a non-reentrant model
 14826 ;;
 14827                           
 14828                           	psect	text45
 14829  004466                     __ptext45:
 14830                           	opt stack 0
 14831  004466                     i2___flneg:
 14832                           	opt stack 22
 14833                           
 14834                           ;incstack = 0
 14835  004466  500F               	movf	i2___flneg@f1,w,c
 14836  004468  1010               	iorwf	i2___flneg@f1+1,w,c
 14837  00446A  1011               	iorwf	i2___flneg@f1+2,w,c
 14838  00446C  1012               	iorwf	i2___flneg@f1+3,w,c
 14839  00446E  B4D8               	btfsc	status,2,c
 14840  004470  D008               	goto	i2l741
 14841  004472  0E00               	movlw	0
 14842  004474  1A0F               	xorwf	i2___flneg@f1,f,c
 14843  004476  0E00               	movlw	0
 14844  004478  1A10               	xorwf	i2___flneg@f1+1,f,c
 14845  00447A  0E00               	movlw	0
 14846  00447C  1A11               	xorwf	i2___flneg@f1+2,f,c
 14847  00447E  0E80               	movlw	128
 14848  004480  1A12               	xorwf	i2___flneg@f1+3,f,c
 14849  004482                     i2l741:
 14850  004482  C00F  F00F         	movff	i2___flneg@f1,?i2___flneg
 14851  004486  C010  F010         	movff	i2___flneg@f1+1,?i2___flneg+1
 14852  00448A  C011  F011         	movff	i2___flneg@f1+2,?i2___flneg+2
 14853  00448E  C012  F012         	movff	i2___flneg@f1+3,?i2___flneg+3
 14854  004492  0012               	return	
 14855  004494                     __end_ofi2___flneg:
 14856                           	opt stack 0
 14857                           pclatu	equ	0xFFB
 14858                           pclath	equ	0xFFA
 14859                           tblptru	equ	0xFF8
 14860                           tblptrh	equ	0xFF7
 14861                           tblptrl	equ	0xFF6
 14862                           tablat	equ	0xFF5
 14863                           prodh	equ	0xFF4
 14864                           prodl	equ	0xFF3
 14865                           intcon	equ	0xFF2
 14866                           intcon2	equ	0xFF1
 14867                           intcon3	equ	0xFF0
 14868                           indf0	equ	0xFEF
 14869                           postinc0	equ	0xFEE
 14870                           fsr0h	equ	0xFEA
 14871                           fsr0l	equ	0xFE9
 14872                           wreg	equ	0xFE8
 14873                           postdec1	equ	0xFE5
 14874                           fsr1h	equ	0xFE2
 14875                           fsr1l	equ	0xFE1
 14876                           indf2	equ	0xFDF
 14877                           postinc2	equ	0xFDE
 14878                           postdec2	equ	0xFDD
 14879                           fsr2h	equ	0xFDA
 14880                           fsr2l	equ	0xFD9
 14881                           status	equ	0xFD8
 14882                           
 14883 ;; *************** function i2___flge *****************
 14884 ;; Defined at:
 14885 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;  ff1             4   38[COMRAM] unsigned char 
 14888 ;;  ff2             4   42[COMRAM] unsigned char 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;		None               void
 14893 ;; Registers used:
 14894 ;;		wreg, status,2, status,0
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14900 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;Total ram usage:       12 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; This function calls:
 14907 ;;		Nothing
 14908 ;; This function is called by:
 14909 ;;		_highIsr
 14910 ;; This function uses a non-reentrant model
 14911 ;;
 14912                           
 14913                           	psect	text46
 14914  00393E                     __ptext46:
 14915                           	opt stack 0
 14916  00393E                     i2___flge:
 14917                           	opt stack 22
 14918                           
 14919                           ;incstack = 0
 14920  00393E  0E00               	movlw	0
 14921  003940  1427               	andwf	i2___flge@ff1,w,c
 14922  003942  6E2F               	movwf	??i2___flge& (0+255),c
 14923  003944  0E00               	movlw	0
 14924  003946  1428               	andwf	i2___flge@ff1+1,w,c
 14925  003948  6E30               	movwf	(??i2___flge+1)& (0+255),c
 14926  00394A  0E80               	movlw	128
 14927  00394C  1429               	andwf	i2___flge@ff1+2,w,c
 14928  00394E  6E31               	movwf	(??i2___flge+2)& (0+255),c
 14929  003950  0E7F               	movlw	127
 14930  003952  142A               	andwf	i2___flge@ff1+3,w,c
 14931  003954  6E32               	movwf	(??i2___flge+3)& (0+255),c
 14932  003956  502F               	movf	??i2___flge,w,c
 14933  003958  1030               	iorwf	??i2___flge+1,w,c
 14934  00395A  1031               	iorwf	??i2___flge+2,w,c
 14935  00395C  1032               	iorwf	??i2___flge+3,w,c
 14936  00395E  A4D8               	btfss	status,2,c
 14937  003960  D008               	goto	i2l734
 14938  003962  0E00               	movlw	0
 14939  003964  6E27               	movwf	i2___flge@ff1,c
 14940  003966  0E00               	movlw	0
 14941  003968  6E28               	movwf	i2___flge@ff1+1,c
 14942  00396A  0E00               	movlw	0
 14943  00396C  6E29               	movwf	i2___flge@ff1+2,c
 14944  00396E  0E00               	movlw	0
 14945  003970  6E2A               	movwf	i2___flge@ff1+3,c
 14946  003972                     i2l734:
 14947  003972  0E00               	movlw	0
 14948  003974  142B               	andwf	i2___flge@ff2,w,c
 14949  003976  6E2F               	movwf	??i2___flge& (0+255),c
 14950  003978  0E00               	movlw	0
 14951  00397A  142C               	andwf	i2___flge@ff2+1,w,c
 14952  00397C  6E30               	movwf	(??i2___flge+1)& (0+255),c
 14953  00397E  0E80               	movlw	128
 14954  003980  142D               	andwf	i2___flge@ff2+2,w,c
 14955  003982  6E31               	movwf	(??i2___flge+2)& (0+255),c
 14956  003984  0E7F               	movlw	127
 14957  003986  142E               	andwf	i2___flge@ff2+3,w,c
 14958  003988  6E32               	movwf	(??i2___flge+3)& (0+255),c
 14959  00398A  502F               	movf	??i2___flge,w,c
 14960  00398C  1030               	iorwf	??i2___flge+1,w,c
 14961  00398E  1031               	iorwf	??i2___flge+2,w,c
 14962  003990  1032               	iorwf	??i2___flge+3,w,c
 14963  003992  A4D8               	btfss	status,2,c
 14964  003994  D008               	goto	i2l735
 14965  003996  0E00               	movlw	0
 14966  003998  6E2B               	movwf	i2___flge@ff2,c
 14967  00399A  0E00               	movlw	0
 14968  00399C  6E2C               	movwf	i2___flge@ff2+1,c
 14969  00399E  0E00               	movlw	0
 14970  0039A0  6E2D               	movwf	i2___flge@ff2+2,c
 14971  0039A2  0E00               	movlw	0
 14972  0039A4  6E2E               	movwf	i2___flge@ff2+3,c
 14973  0039A6                     i2l735:
 14974  0039A6  AE2A               	btfss	i2___flge@ff1+3,7,c
 14975  0039A8  D01D               	goto	i2l736
 14976  0039AA  C027  F02F         	movff	i2___flge@ff1,??i2___flge
 14977  0039AE  C028  F030         	movff	i2___flge@ff1+1,??i2___flge+1
 14978  0039B2  C029  F031         	movff	i2___flge@ff1+2,??i2___flge+2
 14979  0039B6  C02A  F032         	movff	i2___flge@ff1+3,??i2___flge+3
 14980  0039BA  1E2F               	comf	??i2___flge,f,c
 14981  0039BC  1E30               	comf	??i2___flge+1,f,c
 14982  0039BE  1E31               	comf	??i2___flge+2,f,c
 14983  0039C0  1E32               	comf	??i2___flge+3,f,c
 14984  0039C2  2A2F               	incf	??i2___flge,f,c
 14985  0039C4  0E00               	movlw	0
 14986  0039C6  2230               	addwfc	??i2___flge+1,f,c
 14987  0039C8  2231               	addwfc	??i2___flge+2,f,c
 14988  0039CA  2232               	addwfc	??i2___flge+3,f,c
 14989  0039CC  0E00               	movlw	0
 14990  0039CE  242F               	addwf	??i2___flge,w,c
 14991  0039D0  6E27               	movwf	i2___flge@ff1,c
 14992  0039D2  0E00               	movlw	0
 14993  0039D4  2030               	addwfc	??i2___flge+1,w,c
 14994  0039D6  6E28               	movwf	i2___flge@ff1+1,c
 14995  0039D8  0E00               	movlw	0
 14996  0039DA  2031               	addwfc	??i2___flge+2,w,c
 14997  0039DC  6E29               	movwf	i2___flge@ff1+2,c
 14998  0039DE  0E80               	movlw	128
 14999  0039E0  2032               	addwfc	??i2___flge+3,w,c
 15000  0039E2  6E2A               	movwf	i2___flge@ff1+3,c
 15001  0039E4                     i2l736:
 15002  0039E4  AE2E               	btfss	i2___flge@ff2+3,7,c
 15003  0039E6  D01D               	goto	i2l737
 15004  0039E8  C02B  F02F         	movff	i2___flge@ff2,??i2___flge
 15005  0039EC  C02C  F030         	movff	i2___flge@ff2+1,??i2___flge+1
 15006  0039F0  C02D  F031         	movff	i2___flge@ff2+2,??i2___flge+2
 15007  0039F4  C02E  F032         	movff	i2___flge@ff2+3,??i2___flge+3
 15008  0039F8  1E2F               	comf	??i2___flge,f,c
 15009  0039FA  1E30               	comf	??i2___flge+1,f,c
 15010  0039FC  1E31               	comf	??i2___flge+2,f,c
 15011  0039FE  1E32               	comf	??i2___flge+3,f,c
 15012  003A00  2A2F               	incf	??i2___flge,f,c
 15013  003A02  0E00               	movlw	0
 15014  003A04  2230               	addwfc	??i2___flge+1,f,c
 15015  003A06  2231               	addwfc	??i2___flge+2,f,c
 15016  003A08  2232               	addwfc	??i2___flge+3,f,c
 15017  003A0A  0E00               	movlw	0
 15018  003A0C  242F               	addwf	??i2___flge,w,c
 15019  003A0E  6E2B               	movwf	i2___flge@ff2,c
 15020  003A10  0E00               	movlw	0
 15021  003A12  2030               	addwfc	??i2___flge+1,w,c
 15022  003A14  6E2C               	movwf	i2___flge@ff2+1,c
 15023  003A16  0E00               	movlw	0
 15024  003A18  2031               	addwfc	??i2___flge+2,w,c
 15025  003A1A  6E2D               	movwf	i2___flge@ff2+2,c
 15026  003A1C  0E80               	movlw	128
 15027  003A1E  2032               	addwfc	??i2___flge+3,w,c
 15028  003A20  6E2E               	movwf	i2___flge@ff2+3,c
 15029  003A22                     i2l737:
 15030  003A22  0E00               	movlw	0
 15031  003A24  1A27               	xorwf	i2___flge@ff1,f,c
 15032  003A26  0E00               	movlw	0
 15033  003A28  1A28               	xorwf	i2___flge@ff1+1,f,c
 15034  003A2A  0E00               	movlw	0
 15035  003A2C  1A29               	xorwf	i2___flge@ff1+2,f,c
 15036  003A2E  0E80               	movlw	128
 15037  003A30  1A2A               	xorwf	i2___flge@ff1+3,f,c
 15038  003A32  0E00               	movlw	0
 15039  003A34  1A2B               	xorwf	i2___flge@ff2,f,c
 15040  003A36  0E00               	movlw	0
 15041  003A38  1A2C               	xorwf	i2___flge@ff2+1,f,c
 15042  003A3A  0E00               	movlw	0
 15043  003A3C  1A2D               	xorwf	i2___flge@ff2+2,f,c
 15044  003A3E  0E80               	movlw	128
 15045  003A40  1A2E               	xorwf	i2___flge@ff2+3,f,c
 15046  003A42  502B               	movf	i2___flge@ff2,w,c
 15047  003A44  5C27               	subwf	i2___flge@ff1,w,c
 15048  003A46  502C               	movf	i2___flge@ff2+1,w,c
 15049  003A48  5828               	subwfb	i2___flge@ff1+1,w,c
 15050  003A4A  502D               	movf	i2___flge@ff2+2,w,c
 15051  003A4C  5829               	subwfb	i2___flge@ff1+2,w,c
 15052  003A4E  502E               	movf	i2___flge@ff2+3,w,c
 15053  003A50  582A               	subwfb	i2___flge@ff1+3,w,c
 15054  003A52  B0D8               	btfsc	status,0,c
 15055  003A54  D002               	goto	i2l3684
 15056  003A56  90D8               	bcf	status,0,c
 15057  003A58  0012               	return	
 15058  003A5A                     i2l3684:
 15059  003A5A  80D8               	bsf	status,0,c
 15060  003A5C  0012               	return	
 15061  003A5E                     __end_ofi2___flge:
 15062                           	opt stack 0
 15063                           pclatu	equ	0xFFB
 15064                           pclath	equ	0xFFA
 15065                           tblptru	equ	0xFF8
 15066                           tblptrh	equ	0xFF7
 15067                           tblptrl	equ	0xFF6
 15068                           tablat	equ	0xFF5
 15069                           prodh	equ	0xFF4
 15070                           prodl	equ	0xFF3
 15071                           intcon	equ	0xFF2
 15072                           intcon2	equ	0xFF1
 15073                           intcon3	equ	0xFF0
 15074                           indf0	equ	0xFEF
 15075                           postinc0	equ	0xFEE
 15076                           fsr0h	equ	0xFEA
 15077                           fsr0l	equ	0xFE9
 15078                           wreg	equ	0xFE8
 15079                           postdec1	equ	0xFE5
 15080                           fsr1h	equ	0xFE2
 15081                           fsr1l	equ	0xFE1
 15082                           indf2	equ	0xFDF
 15083                           postinc2	equ	0xFDE
 15084                           postdec2	equ	0xFDD
 15085                           fsr2h	equ	0xFDA
 15086                           fsr2l	equ	0xFD9
 15087                           status	equ	0xFD8
 15088                           
 15089 ;; *************** function _restartTimer3 *****************
 15090 ;; Defined at:
 15091 ;;		line 113 in file "Main.c"
 15092 ;; Parameters:    Size  Location     Type
 15093 ;;		None
 15094 ;; Auto vars:     Size  Location     Type
 15095 ;;		None
 15096 ;; Return value:  Size  Location     Type
 15097 ;;                  1    wreg      void 
 15098 ;; Registers used:
 15099 ;;		wreg, status,2
 15100 ;; Tracked objects:
 15101 ;;		On entry : 0/0
 15102 ;;		On exit  : 0/0
 15103 ;;		Unchanged: 0/0
 15104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15109 ;;Total ram usage:        0 bytes
 15110 ;; Hardware stack levels used:    1
 15111 ;; This function calls:
 15112 ;;		Nothing
 15113 ;; This function is called by:
 15114 ;;		_highIsr
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text47
 15119  00458E                     __ptext47:
 15120                           	opt stack 0
 15121  00458E                     _restartTimer3:
 15122                           	opt stack 22
 15123                           
 15124                           ;Main.c: 114: TMR1H = 0;
 15125                           
 15126                           ;incstack = 0
 15127  00458E  0E00               	movlw	0
 15128  004590  6ECF               	movwf	4047,c	;volatile
 15129                           
 15130                           ;Main.c: 115: TMR1L = 0;
 15131  004592  0E00               	movlw	0
 15132  004594  6ECE               	movwf	4046,c	;volatile
 15133                           
 15134                           ;Main.c: 116: TMR3H = (unsigned char)((40536 >> 8) & 0x00FF);
 15135  004596  0E9E               	movlw	158
 15136  004598  6EB3               	movwf	4019,c	;volatile
 15137                           
 15138                           ;Main.c: 117: TMR3L = (unsigned char)(40536 & 0x00FF );
 15139  00459A  0E58               	movlw	88
 15140  00459C  6EB2               	movwf	4018,c	;volatile
 15141  00459E  0012               	return		;funcret
 15142  0045A0                     __end_of_restartTimer3:
 15143                           	opt stack 0
 15144                           pclatu	equ	0xFFB
 15145                           pclath	equ	0xFFA
 15146                           tblptru	equ	0xFF8
 15147                           tblptrh	equ	0xFF7
 15148                           tblptrl	equ	0xFF6
 15149                           tablat	equ	0xFF5
 15150                           prodh	equ	0xFF4
 15151                           prodl	equ	0xFF3
 15152                           intcon	equ	0xFF2
 15153                           intcon2	equ	0xFF1
 15154                           intcon3	equ	0xFF0
 15155                           indf0	equ	0xFEF
 15156                           postinc0	equ	0xFEE
 15157                           fsr0h	equ	0xFEA
 15158                           fsr0l	equ	0xFE9
 15159                           wreg	equ	0xFE8
 15160                           postdec1	equ	0xFE5
 15161                           fsr1h	equ	0xFE2
 15162                           fsr1l	equ	0xFE1
 15163                           indf2	equ	0xFDF
 15164                           postinc2	equ	0xFDE
 15165                           postdec2	equ	0xFDD
 15166                           fsr2h	equ	0xFDA
 15167                           fsr2l	equ	0xFD9
 15168                           status	equ	0xFD8
 15169                           
 15170 ;; *************** function _incrementPercentHeatCounter *****************
 15171 ;; Defined at:
 15172 ;;		line 287 in file "Main.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      void 
 15179 ;; Registers used:
 15180 ;;		wreg, status,2, status,0
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; This function calls:
 15193 ;;		Nothing
 15194 ;; This function is called by:
 15195 ;;		_highIsr
 15196 ;; This function uses a non-reentrant model
 15197 ;;
 15198                           
 15199                           	psect	text48
 15200  00454E                     __ptext48:
 15201                           	opt stack 0
 15202  00454E                     _incrementPercentHeatCounter:
 15203                           	opt stack 22
 15204                           
 15205                           ;incstack = 0
 15206  00454E  0101               	movlb	1	; () banked
 15207  004550  5150               	movf	(_percentHeatCounter+1)& (0+255),w,b
 15208  004552  E107               	bnz	i2l237
 15209  004554  0E0A               	movlw	10
 15210  004556  5D4F               	subwf	_percentHeatCounter& (0+255),w,b
 15211  004558  B0D8               	btfsc	status,0,c
 15212  00455A  0012               	return	
 15213                           
 15214                           ; BSR set to: 1
 15215  00455C  4B4F               	infsnz	_percentHeatCounter& (0+255),f,b
 15216  00455E  2B50               	incf	(_percentHeatCounter+1)& (0+255),f,b
 15217  004560  0012               	return	
 15218  004562                     i2l237:
 15219                           
 15220                           ; BSR set to: 1
 15221  004562  0012               	return		;funcret
 15222  004564                     __end_of_incrementPercentHeatCounter:
 15223                           	opt stack 0
 15224                           pclatu	equ	0xFFB
 15225                           pclath	equ	0xFFA
 15226                           tblptru	equ	0xFF8
 15227                           tblptrh	equ	0xFF7
 15228                           tblptrl	equ	0xFF6
 15229                           tablat	equ	0xFF5
 15230                           prodh	equ	0xFF4
 15231                           prodl	equ	0xFF3
 15232                           intcon	equ	0xFF2
 15233                           intcon2	equ	0xFF1
 15234                           intcon3	equ	0xFF0
 15235                           indf0	equ	0xFEF
 15236                           postinc0	equ	0xFEE
 15237                           fsr0h	equ	0xFEA
 15238                           fsr0l	equ	0xFE9
 15239                           wreg	equ	0xFE8
 15240                           postdec1	equ	0xFE5
 15241                           fsr1h	equ	0xFE2
 15242                           fsr1l	equ	0xFE1
 15243                           indf2	equ	0xFDF
 15244                           postinc2	equ	0xFDE
 15245                           postdec2	equ	0xFDD
 15246                           fsr2h	equ	0xFDA
 15247                           fsr2l	equ	0xFD9
 15248                           status	equ	0xFD8
 15249                           
 15250 ;; *************** function _incrementPercentCoolCounter *****************
 15251 ;; Defined at:
 15252 ;;		line 289 in file "Main.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;		None
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;		None
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  1    wreg      void 
 15259 ;; Registers used:
 15260 ;;		wreg, status,2, status,0
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 0/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15270 ;;Total ram usage:        0 bytes
 15271 ;; Hardware stack levels used:    1
 15272 ;; This function calls:
 15273 ;;		Nothing
 15274 ;; This function is called by:
 15275 ;;		_highIsr
 15276 ;; This function uses a non-reentrant model
 15277 ;;
 15278                           
 15279                           	psect	text49
 15280  00457A                     __ptext49:
 15281                           	opt stack 0
 15282  00457A                     _incrementPercentCoolCounter:
 15283                           	opt stack 22
 15284                           
 15285                           ; BSR set to: 1
 15286                           ;incstack = 0
 15287  00457A  5070               	movf	_percentCoolCounter+1,w,c
 15288  00457C  E107               	bnz	i2l245
 15289  00457E  0E0A               	movlw	10
 15290  004580  5C6F               	subwf	_percentCoolCounter,w,c
 15291  004582  B0D8               	btfsc	status,0,c
 15292  004584  0012               	return	
 15293  004586  4A6F               	infsnz	_percentCoolCounter,f,c
 15294  004588  2A70               	incf	_percentCoolCounter+1,f,c
 15295  00458A  0012               	return	
 15296  00458C                     i2l245:
 15297  00458C  0012               	return		;funcret
 15298  00458E                     __end_of_incrementPercentCoolCounter:
 15299                           	opt stack 0
 15300                           pclatu	equ	0xFFB
 15301                           pclath	equ	0xFFA
 15302                           tblptru	equ	0xFF8
 15303                           tblptrh	equ	0xFF7
 15304                           tblptrl	equ	0xFF6
 15305                           tablat	equ	0xFF5
 15306                           prodh	equ	0xFF4
 15307                           prodl	equ	0xFF3
 15308                           intcon	equ	0xFF2
 15309                           intcon2	equ	0xFF1
 15310                           intcon3	equ	0xFF0
 15311                           indf0	equ	0xFEF
 15312                           postinc0	equ	0xFEE
 15313                           fsr0h	equ	0xFEA
 15314                           fsr0l	equ	0xFE9
 15315                           wreg	equ	0xFE8
 15316                           postdec1	equ	0xFE5
 15317                           fsr1h	equ	0xFE2
 15318                           fsr1l	equ	0xFE1
 15319                           indf2	equ	0xFDF
 15320                           postinc2	equ	0xFDE
 15321                           postdec2	equ	0xFDD
 15322                           fsr2h	equ	0xFDA
 15323                           fsr2l	equ	0xFD9
 15324                           status	equ	0xFD8
 15325                           
 15326 ;; *************** function _incrementHS *****************
 15327 ;; Defined at:
 15328 ;;		line 291 in file "Main.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, status,2, status,0
 15337 ;; Tracked objects:
 15338 ;;		On entry : 0/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15346 ;;Total ram usage:        0 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; This function calls:
 15349 ;;		Nothing
 15350 ;; This function is called by:
 15351 ;;		_highIsr
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355                           	psect	text50
 15356  004564                     __ptext50:
 15357                           	opt stack 0
 15358  004564                     _incrementHS:
 15359                           	opt stack 22
 15360                           
 15361                           ;incstack = 0
 15362  004564  0101               	movlb	1	; () banked
 15363  004566  5152               	movf	(_HS+1)& (0+255),w,b
 15364  004568  E107               	bnz	i2l253
 15365  00456A  0E05               	movlw	5
 15366  00456C  5D51               	subwf	_HS& (0+255),w,b
 15367  00456E  B0D8               	btfsc	status,0,c
 15368  004570  0012               	return	
 15369                           
 15370                           ; BSR set to: 1
 15371  004572  4B51               	infsnz	_HS& (0+255),f,b
 15372  004574  2B52               	incf	(_HS+1)& (0+255),f,b
 15373  004576  0012               	return	
 15374  004578                     i2l253:
 15375                           
 15376                           ; BSR set to: 1
 15377  004578  0012               	return		;funcret
 15378  00457A                     __end_of_incrementHS:
 15379                           	opt stack 0
 15380                           pclatu	equ	0xFFB
 15381                           pclath	equ	0xFFA
 15382                           tblptru	equ	0xFF8
 15383                           tblptrh	equ	0xFF7
 15384                           tblptrl	equ	0xFF6
 15385                           tablat	equ	0xFF5
 15386                           prodh	equ	0xFF4
 15387                           prodl	equ	0xFF3
 15388                           intcon	equ	0xFF2
 15389                           intcon2	equ	0xFF1
 15390                           intcon3	equ	0xFF0
 15391                           indf0	equ	0xFEF
 15392                           postinc0	equ	0xFEE
 15393                           fsr0h	equ	0xFEA
 15394                           fsr0l	equ	0xFE9
 15395                           wreg	equ	0xFE8
 15396                           postdec1	equ	0xFE5
 15397                           fsr1h	equ	0xFE2
 15398                           fsr1l	equ	0xFE1
 15399                           indf2	equ	0xFDF
 15400                           postinc2	equ	0xFDE
 15401                           postdec2	equ	0xFDD
 15402                           fsr2h	equ	0xFDA
 15403                           fsr2l	equ	0xFD9
 15404                           status	equ	0xFD8
 15405                           
 15406 ;; *************** function _decrementPercentHeatCounter *****************
 15407 ;; Defined at:
 15408 ;;		line 288 in file "Main.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;		None
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		wreg, status,2, status,0
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;Total ram usage:        0 bytes
 15427 ;; Hardware stack levels used:    1
 15428 ;; This function calls:
 15429 ;;		Nothing
 15430 ;; This function is called by:
 15431 ;;		_highIsr
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text51
 15436  0045A0                     __ptext51:
 15437                           	opt stack 0
 15438  0045A0                     _decrementPercentHeatCounter:
 15439                           	opt stack 22
 15440                           
 15441                           ; BSR set to: 1
 15442                           ;incstack = 0
 15443  0045A0  0101               	movlb	1	; () banked
 15444  0045A2  514F               	movf	_percentHeatCounter& (0+255),w,b
 15445  0045A4  1150               	iorwf	(_percentHeatCounter+1)& (0+255),w,b
 15446  0045A6  B4D8               	btfsc	status,2,c
 15447  0045A8  0012               	return	
 15448                           
 15449                           ; BSR set to: 1
 15450  0045AA  074F               	decf	_percentHeatCounter& (0+255),f,b
 15451  0045AC  A0D8               	btfss	status,0,c
 15452  0045AE  0750               	decf	(_percentHeatCounter+1)& (0+255),f,b
 15453  0045B0  0012               	return	
 15454  0045B2                     __end_of_decrementPercentHeatCounter:
 15455                           	opt stack 0
 15456                           pclatu	equ	0xFFB
 15457                           pclath	equ	0xFFA
 15458                           tblptru	equ	0xFF8
 15459                           tblptrh	equ	0xFF7
 15460                           tblptrl	equ	0xFF6
 15461                           tablat	equ	0xFF5
 15462                           prodh	equ	0xFF4
 15463                           prodl	equ	0xFF3
 15464                           intcon	equ	0xFF2
 15465                           intcon2	equ	0xFF1
 15466                           intcon3	equ	0xFF0
 15467                           indf0	equ	0xFEF
 15468                           postinc0	equ	0xFEE
 15469                           fsr0h	equ	0xFEA
 15470                           fsr0l	equ	0xFE9
 15471                           wreg	equ	0xFE8
 15472                           postdec1	equ	0xFE5
 15473                           fsr1h	equ	0xFE2
 15474                           fsr1l	equ	0xFE1
 15475                           indf2	equ	0xFDF
 15476                           postinc2	equ	0xFDE
 15477                           postdec2	equ	0xFDD
 15478                           fsr2h	equ	0xFDA
 15479                           fsr2l	equ	0xFD9
 15480                           status	equ	0xFD8
 15481                           
 15482 ;; *************** function _decrementPercentCoolCounter *****************
 15483 ;; Defined at:
 15484 ;;		line 290 in file "Main.c"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;		None
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;		None
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  1    wreg      void 
 15491 ;; Registers used:
 15492 ;;		wreg, status,2, status,0
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15502 ;;Total ram usage:        0 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; This function calls:
 15505 ;;		Nothing
 15506 ;; This function is called by:
 15507 ;;		_highIsr
 15508 ;; This function uses a non-reentrant model
 15509 ;;
 15510                           
 15511                           	psect	text52
 15512  0045D4                     __ptext52:
 15513                           	opt stack 0
 15514  0045D4                     _decrementPercentCoolCounter:
 15515                           	opt stack 22
 15516                           
 15517                           ; BSR set to: 1
 15518                           ;incstack = 0
 15519  0045D4  506F               	movf	_percentCoolCounter,w,c
 15520  0045D6  1070               	iorwf	_percentCoolCounter+1,w,c
 15521  0045D8  B4D8               	btfsc	status,2,c
 15522  0045DA  0012               	return	
 15523  0045DC  066F               	decf	_percentCoolCounter,f,c
 15524  0045DE  A0D8               	btfss	status,0,c
 15525  0045E0  0670               	decf	_percentCoolCounter+1,f,c
 15526  0045E2  0012               	return	
 15527  0045E4                     __end_of_decrementPercentCoolCounter:
 15528                           	opt stack 0
 15529                           pclatu	equ	0xFFB
 15530                           pclath	equ	0xFFA
 15531                           tblptru	equ	0xFF8
 15532                           tblptrh	equ	0xFF7
 15533                           tblptrl	equ	0xFF6
 15534                           tablat	equ	0xFF5
 15535                           prodh	equ	0xFF4
 15536                           prodl	equ	0xFF3
 15537                           intcon	equ	0xFF2
 15538                           intcon2	equ	0xFF1
 15539                           intcon3	equ	0xFF0
 15540                           indf0	equ	0xFEF
 15541                           postinc0	equ	0xFEE
 15542                           fsr0h	equ	0xFEA
 15543                           fsr0l	equ	0xFE9
 15544                           wreg	equ	0xFE8
 15545                           postdec1	equ	0xFE5
 15546                           fsr1h	equ	0xFE2
 15547                           fsr1l	equ	0xFE1
 15548                           indf2	equ	0xFDF
 15549                           postinc2	equ	0xFDE
 15550                           postdec2	equ	0xFDD
 15551                           fsr2h	equ	0xFDA
 15552                           fsr2l	equ	0xFD9
 15553                           status	equ	0xFD8
 15554                           
 15555 ;; *************** function _decrementHS *****************
 15556 ;; Defined at:
 15557 ;;		line 292 in file "Main.c"
 15558 ;; Parameters:    Size  Location     Type
 15559 ;;		None
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;		None
 15562 ;; Return value:  Size  Location     Type
 15563 ;;                  1    wreg      void 
 15564 ;; Registers used:
 15565 ;;		wreg, status,2, status,0
 15566 ;; Tracked objects:
 15567 ;;		On entry : 0/0
 15568 ;;		On exit  : 0/0
 15569 ;;		Unchanged: 0/0
 15570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15575 ;;Total ram usage:        0 bytes
 15576 ;; Hardware stack levels used:    1
 15577 ;; This function calls:
 15578 ;;		Nothing
 15579 ;; This function is called by:
 15580 ;;		_highIsr
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584                           	psect	text53
 15585  0045B2                     __ptext53:
 15586                           	opt stack 0
 15587  0045B2                     _decrementHS:
 15588                           	opt stack 22
 15589                           
 15590                           ;incstack = 0
 15591  0045B2  0101               	movlb	1	; () banked
 15592  0045B4  5151               	movf	_HS& (0+255),w,b
 15593  0045B6  1152               	iorwf	(_HS+1)& (0+255),w,b
 15594  0045B8  B4D8               	btfsc	status,2,c
 15595  0045BA  0012               	return	
 15596                           
 15597                           ; BSR set to: 1
 15598  0045BC  0751               	decf	_HS& (0+255),f,b
 15599  0045BE  A0D8               	btfss	status,0,c
 15600  0045C0  0752               	decf	(_HS+1)& (0+255),f,b
 15601  0045C2  0012               	return	
 15602  0045C4                     __end_of_decrementHS:
 15603                           	opt stack 0
 15604                           pclatu	equ	0xFFB
 15605                           pclath	equ	0xFFA
 15606                           tblptru	equ	0xFF8
 15607                           tblptrh	equ	0xFF7
 15608                           tblptrl	equ	0xFF6
 15609                           tablat	equ	0xFF5
 15610                           prodh	equ	0xFF4
 15611                           prodl	equ	0xFF3
 15612                           intcon	equ	0xFF2
 15613                           intcon2	equ	0xFF1
 15614                           intcon3	equ	0xFF0
 15615                           indf0	equ	0xFEF
 15616                           postinc0	equ	0xFEE
 15617                           fsr0h	equ	0xFEA
 15618                           fsr0l	equ	0xFE9
 15619                           wreg	equ	0xFE8
 15620                           postdec1	equ	0xFE5
 15621                           fsr1h	equ	0xFE2
 15622                           fsr1l	equ	0xFE1
 15623                           indf2	equ	0xFDF
 15624                           postinc2	equ	0xFDE
 15625                           postdec2	equ	0xFDD
 15626                           fsr2h	equ	0xFDA
 15627                           fsr2l	equ	0xFD9
 15628                           status	equ	0xFD8
 15629                           
 15630 ;; *************** function _changeOperationMode *****************
 15631 ;; Defined at:
 15632 ;;		line 225 in file "Main.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;		None
 15635 ;; Auto vars:     Size  Location     Type
 15636 ;;		None
 15637 ;; Return value:  Size  Location     Type
 15638 ;;                  1    wreg      void 
 15639 ;; Registers used:
 15640 ;;		wreg, status,2, status,0
 15641 ;; Tracked objects:
 15642 ;;		On entry : 0/0
 15643 ;;		On exit  : 0/0
 15644 ;;		Unchanged: 0/0
 15645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15650 ;;Total ram usage:        0 bytes
 15651 ;; Hardware stack levels used:    1
 15652 ;; This function calls:
 15653 ;;		Nothing
 15654 ;; This function is called by:
 15655 ;;		_highIsr
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           	psect	text54
 15660  00452E                     __ptext54:
 15661                           	opt stack 0
 15662  00452E                     _changeOperationMode:
 15663                           	opt stack 22
 15664                           
 15665                           ;Main.c: 226: if (operationMode++ == 2) operationMode = 0;
 15666                           
 15667                           ; BSR set to: 1
 15668                           ;incstack = 0
 15669  00452E  4A73               	infsnz	_operationMode,f,c
 15670  004530  2A74               	incf	_operationMode+1,f,c
 15671  004532  0E03               	movlw	3
 15672  004534  1873               	xorwf	_operationMode,w,c
 15673  004536  1074               	iorwf	_operationMode+1,w,c
 15674  004538  A4D8               	btfss	status,2,c
 15675  00453A  D004               	goto	i2l203
 15676  00453C  0E00               	movlw	0
 15677  00453E  6E74               	movwf	_operationMode+1,c
 15678  004540  0E00               	movlw	0
 15679  004542  6E73               	movwf	_operationMode,c
 15680  004544                     i2l203:
 15681                           
 15682                           ;Main.c: 227: timerCounter = 0;
 15683  004544  0E00               	movlw	0
 15684  004546  6E6E               	movwf	_timerCounter+1,c
 15685  004548  0E00               	movlw	0
 15686  00454A  6E6D               	movwf	_timerCounter,c
 15687  00454C  0012               	return		;funcret
 15688  00454E                     __end_of_changeOperationMode:
 15689                           	opt stack 0
 15690                           pclatu	equ	0xFFB
 15691                           pclath	equ	0xFFA
 15692                           tblptru	equ	0xFF8
 15693                           tblptrh	equ	0xFF7
 15694                           tblptrl	equ	0xFF6
 15695                           tablat	equ	0xFF5
 15696                           prodh	equ	0xFF4
 15697                           prodl	equ	0xFF3
 15698                           intcon	equ	0xFF2
 15699                           intcon2	equ	0xFF1
 15700                           intcon3	equ	0xFF0
 15701                           indf0	equ	0xFEF
 15702                           postinc0	equ	0xFEE
 15703                           fsr0h	equ	0xFEA
 15704                           fsr0l	equ	0xFE9
 15705                           wreg	equ	0xFE8
 15706                           postdec1	equ	0xFE5
 15707                           fsr1h	equ	0xFE2
 15708                           fsr1l	equ	0xFE1
 15709                           indf2	equ	0xFDF
 15710                           postinc2	equ	0xFDE
 15711                           postdec2	equ	0xFDD
 15712                           fsr2h	equ	0xFDA
 15713                           fsr2l	equ	0xFD9
 15714                           status	equ	0xFD8
 15715                           pclatu	equ	0xFFB
 15716                           pclath	equ	0xFFA
 15717                           tblptru	equ	0xFF8
 15718                           tblptrh	equ	0xFF7
 15719                           tblptrl	equ	0xFF6
 15720                           tablat	equ	0xFF5
 15721                           prodh	equ	0xFF4
 15722                           prodl	equ	0xFF3
 15723                           intcon	equ	0xFF2
 15724                           intcon2	equ	0xFF1
 15725                           intcon3	equ	0xFF0
 15726                           indf0	equ	0xFEF
 15727                           postinc0	equ	0xFEE
 15728                           fsr0h	equ	0xFEA
 15729                           fsr0l	equ	0xFE9
 15730                           wreg	equ	0xFE8
 15731                           postdec1	equ	0xFE5
 15732                           fsr1h	equ	0xFE2
 15733                           fsr1l	equ	0xFE1
 15734                           indf2	equ	0xFDF
 15735                           postinc2	equ	0xFDE
 15736                           postdec2	equ	0xFDD
 15737                           fsr2h	equ	0xFDA
 15738                           fsr2l	equ	0xFD9
 15739                           status	equ	0xFD8
 15740                           
 15741                           	psect	rparam
 15742  0000                     pclatu	equ	0xFFB
 15743                           pclath	equ	0xFFA
 15744                           tblptru	equ	0xFF8
 15745                           tblptrh	equ	0xFF7
 15746                           tblptrl	equ	0xFF6
 15747                           tablat	equ	0xFF5
 15748                           prodh	equ	0xFF4
 15749                           prodl	equ	0xFF3
 15750                           intcon	equ	0xFF2
 15751                           intcon2	equ	0xFF1
 15752                           intcon3	equ	0xFF0
 15753                           indf0	equ	0xFEF
 15754                           postinc0	equ	0xFEE
 15755                           fsr0h	equ	0xFEA
 15756                           fsr0l	equ	0xFE9
 15757                           wreg	equ	0xFE8
 15758                           postdec1	equ	0xFE5
 15759                           fsr1h	equ	0xFE2
 15760                           fsr1l	equ	0xFE1
 15761                           indf2	equ	0xFDF
 15762                           postinc2	equ	0xFDE
 15763                           postdec2	equ	0xFDD
 15764                           fsr2h	equ	0xFDA
 15765                           fsr2l	equ	0xFD9
 15766                           status	equ	0xFD8
 15767                           
 15768                           	psect	temp
 15769  00007B                     btemp:
 15770                           	opt stack 0
 15771  00007B                     	ds	1
 15772  0000                     int$flags	set	btemp
 15773  0000                     wtemp6	set	btemp+1
 15774                           pclatu	equ	0xFFB
 15775                           pclath	equ	0xFFA
 15776                           tblptru	equ	0xFF8
 15777                           tblptrh	equ	0xFF7
 15778                           tblptrl	equ	0xFF6
 15779                           tablat	equ	0xFF5
 15780                           prodh	equ	0xFF4
 15781                           prodl	equ	0xFF3
 15782                           intcon	equ	0xFF2
 15783                           intcon2	equ	0xFF1
 15784                           intcon3	equ	0xFF0
 15785                           indf0	equ	0xFEF
 15786                           postinc0	equ	0xFEE
 15787                           fsr0h	equ	0xFEA
 15788                           fsr0l	equ	0xFE9
 15789                           wreg	equ	0xFE8
 15790                           postdec1	equ	0xFE5
 15791                           fsr1h	equ	0xFE2
 15792                           fsr1l	equ	0xFE1
 15793                           indf2	equ	0xFDF
 15794                           postinc2	equ	0xFDE
 15795                           postdec2	equ	0xFDD
 15796                           fsr2h	equ	0xFDA
 15797                           fsr2l	equ	0xFD9
 15798                           status	equ	0xFD8


Data Sizes:
    Strings     118
    Constant    144
    Data        6
    BSS         56
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     98     122
    BANK0           128    128     128
    BANK1           256     77     135
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_26(CODE[7]), sprintf@c(BANK1[1]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 
		 -> STR_13(CODE[2]), STR_12(CODE[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[3]), STR_21(CODE[3]), STR_20(CODE[5]), STR_19(CODE[6]), 
		 -> STR_15(CODE[6]), STR_14(CODE[10]), STR_11(CODE[20]), STR_6(CODE[11]), 
		 -> STR_4(CODE[11]), STR_3(CODE[3]), STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> Buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    main$1232	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), STR_23(CODE[3]), 

    main$1231	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 

    main$1221	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_17(CODE[5]), 

    main$1220	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), 

    main$1212	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_13(CODE[2]), STR_12(CODE[2]), 

    main$1206	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), STR_9(CODE[2]), 

    main$1202	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_8(CODE[2]), STR_7(CODE[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_5(CODE[4]), STR_2(CODE[3]), Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->i2_set_pwm1_percent
    i2_set_pwm1_percent->i2___fldiv
    i2___fltol->i2___fladd
    i2___flmul->i2___xxtofl
    i2___fldiv->i2___flmul
    i2___fladd->i2___flneg
    i2___flneg->i2___xxtofl
    i2___flge->i2___fladd

Critical Paths under _main in BANK0

    _read_adc_voltage->___fldiv
    _lcd_init->_lcd_send_byte
    _autoHeat->_set_pwm1_percent
    _autoCool->_set_pwm1_percent
    _sprintf->___flge
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___xxtofl->___wmul
    ___llmod->___lldiv
    ___flsub->___fladd
    ___flneg->___xxtofl
    ___flge->___fladd
    _set_pwm1_percent->___fltol
    ___fltol->___fladd
    ___flmul->_read_adc_voltage
    ___fldiv->___xxtofl
    ___fladd->_fround
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_autoCool
    _autoHeat->_sprintf
    _autoCool->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  220194
                                             59 BANK1     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                             ___wmul
                           _autoCool
                           _autoHeat
                               _init
                    _init_adc_no_lib
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                   _read_adc_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    3967
                                             45 BANK0     11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1464
                                             10 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       1
                                              0 BANK0      1     1      0
                          _init_pwm1
 ---------------------------------------------------------------------------------
 (2) _init_pwm1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autoHeat                                             2     2      0   73322
                                             47 BANK1      2     2      0
                            ___fladd
                             ___flge
                            ___flneg
                            ___fltol
                             ___wmul
                           ___xxtofl
                         _lcd_gotoxy
                           _lcd_putc
                           _lcd_puts
                   _set_pwm1_percent
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _autoCool                                            12    12      0   75597
                                             47 BANK1     12    12      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                         _lcd_gotoxy
                           _lcd_puts
                   _set_pwm1_percent
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    36     12   43388
                                              0 BANK1     47    35     12
                            ___awdiv
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    8534
                                             81 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    8336
                                             81 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1664
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1820
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     802
                                              6 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1375
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3785
                                            114 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     475
                                             20 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    2206
                                            114 BANK0     12     4      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _set_pwm1_percent                                    10     6      4   10868
                                            124 BANK0      4     0      4
                                              0 BANK1      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (3) _set_pwm1_raw                                         4     2      2     120
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     609
                                            114 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4607
                                             56 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                   _read_adc_voltage (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1677
                                             20 BANK0     25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3462
                                             94 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    4502
                                             14 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    3469
                                             13 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    2143
                                             10 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     932
                                              8 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      68
                                              6 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      46
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2     350
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _highIsr                                             24    24      0    9545
                                             74 COMRAM    24    24      0
                _changeOperationMode
                        _decrementHS
        _decrementPercentCoolCounter
        _decrementPercentHeatCounter
                        _incrementHS
        _incrementPercentCoolCounter
        _incrementPercentHeatCounter
                      _restartTimer3
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                         i2___xxtofl
                 i2_set_pwm1_percent
 ---------------------------------------------------------------------------------
 (9) i2_set_pwm1_percent                                  10     6      4    5196
                                             64 COMRAM    10     6      4
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___fltol
                         i2___xxtofl (ARG)
                     i2_set_pwm1_raw
 ---------------------------------------------------------------------------------
 (10) i2_set_pwm1_raw                                      4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) i2___fltol                                          10     6      4     255
                                             38 COMRAM    10     6      4
                          i2___fladd (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___flmul                                          25    17      8    1543
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___fldiv                                          25    17      8    1107
                                             39 COMRAM    25    17      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___fladd                                          20    12      8    2052
                                             18 COMRAM    20    12      8
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___xxtofl                                          14    10      4     374
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (9) i2___flneg                                            4     0      4      71
                                             14 COMRAM     4     0      4
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___flge                                            12     4      8     286
                                             38 COMRAM    12     4      8
                          i2___fladd (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) _restartTimer3                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _incrementPercentHeatCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _incrementPercentCoolCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _incrementHS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _decrementPercentHeatCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _decrementPercentCoolCounter                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _decrementHS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _changeOperationMode                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
   ___flge
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     _read_adc_voltage (ARG)
       ___fldiv
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       _read_adc_raw_no_lib
   ___flneg
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   _autoCool
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flge
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       _read_adc_voltage (ARG)
         ___fldiv
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _read_adc_raw_no_lib
     ___flneg
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _delay_ms
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
     _set_pwm1_percent
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___fldiv
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
       ___fltol
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       _set_pwm1_raw
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flge (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flsub (ARG)
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
   _autoHeat
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
     ___flge
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _delay_ms
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
     _set_pwm1_percent
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___fldiv
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
       ___fltol
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       _set_pwm1_raw
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flge (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flsub (ARG)
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
   _init
     _init_pwm1
   _init_adc_no_lib
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _read_adc_voltage
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
     ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flge (ARG)
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       _read_adc_voltage (ARG)
         ___fldiv
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _read_adc_raw_no_lib
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flsub (ARG)
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol (ARG)
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             _read_adc_voltage (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
               _read_adc_raw_no_lib
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           _read_adc_voltage (ARG)
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul
             ___xxtofl
               ___wmul (ARG)
             _read_adc_raw_no_lib
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib

 _highIsr (ROOT)
   _changeOperationMode
   _decrementHS
   _decrementPercentCoolCounter
   _decrementPercentHeatCounter
   _incrementHS
   _incrementPercentCoolCounter
   _incrementPercentHeatCounter
   _restartTimer3
   i2___fladd
     i2___flneg (ARG)
       i2___xxtofl (ARG)
     i2___xxtofl (ARG)
   i2___flge
     i2___fladd (ARG)
       i2___flneg (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl (ARG)
     i2___flneg (ARG)
       i2___xxtofl (ARG)
     i2___xxtofl (ARG)
   i2___flmul
     i2___xxtofl (ARG)
   i2___flneg
     i2___xxtofl (ARG)
   i2___xxtofl
   i2_set_pwm1_percent
     i2___fladd
       i2___flneg (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl (ARG)
     i2___fldiv
       i2___flmul (ARG)
         i2___xxtofl (ARG)
     i2___flmul
       i2___xxtofl (ARG)
     i2___fltol
       i2___fladd (ARG)
         i2___flneg (ARG)
           i2___xxtofl (ARG)
         i2___xxtofl (ARG)
     i2___xxtofl (ARG)
     i2_set_pwm1_raw (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4D      87       7       52.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     80      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     62      7A       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     181      34        0.0%
DATA                 0      0     181       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 06 01:17:13 2021

                   ?_read_adc_voltage 00AD                         _autoHeat$1899 012F  
                        ___fldiv@aexp 00AC                          ___fldiv@bexp 00AB  
                        ___fldiv@sign 00A0                    ??_read_adc_voltage 00B1  
                                  _HS 0151                                    _OT 017F  
                                  _SP 0183                                    _RT 017B  
                      ?_lcd_send_byte 0088                          ___awdiv@sign 008B  
                       _autoCool$1036 0133                         _autoCool$1898 012F  
                 ___wmul@multiplicand 0082                           __CFG_BORV$3 000000  
                        __CFG_CP0$OFF 000000                          __CFG_CP1$OFF 000000  
                        __CFG_CP2$OFF 000000                          __CFG_CP3$OFF 000000  
                         __CFG_OSC$XT 000000                           __CFG_LVP$ON 000000  
                         __CFG_WDT$ON 000000                                   l140 44B0  
                                 l141 44A0                                   l213 3DE0  
                                 l221 2FF6                                   l150 437E  
                                 l232 3296                                   l312 0E8C  
                                 l401 0020                                   l217 30AA  
                                 l321 0F08                                   l410 008A  
                                 l402 003C                                   l226 322A  
                                 l330 0FBC                                   l306 0CF2  
                                 l219 2FE4                                   l227 31E8  
                                 l315 0F56                                   l180 42E0  
                                 l500 0AD6                                   l420 017C  
                                 l412 016E                                   l404 0056  
                                 l172 40CE                                   l324 0F96  
                                 l308 0E5C                                   l181 4310  
                                 l501 0AFA                                   l421 02E2  
                                 l413 0156                                   l405 004E  
                                 l341 10C8                                   l333 103A  
                                 l317 0ED8                                   l158 43BC  
                                 l182 42E6                                   l502 0B02  
                                 l430 020A                                   l414 0114  
                                 l174 40FC                                   l350 1114  
                                 l334 1050                                   l326 0FD0  
                                 l159 43B4                                   l167 4282  
                                 l183 42EA                                   l191 41A6  
                                 l503 0B4A                                   l431 0220  
                                 l184 42EE                                   l192 41B4  
                                 l504 0B2A                                   l440 09BA  
                                 l424 0180                                   l360 1204  
                                 l344 1150                                   l328 0FDA  
                                 l193 41C2                                   l513 0C24  
                                 l441 02F6                                   l417 02A8  
                                 l433 023A                                   l425 01A8  
                                 l353 1166                                   l337 10DC  
                                 l514 0B92                                   l442 0344  
                                 l434 022A                                   l426 01B8  
                                 l346 1128                                   l179 42F4  
                                 l427 01B2                                   l355 118C  
                                 l339 10E4                                   l188 41CE  
                                 l452 0538                                   l444 03B4  
                                 l436 0282                                   l348 1132  
                                 l189 418A                                   l197 4214  
                                 l701 4074                                   l445 0436  
                                 l437 024C                                   l357 119A  
                                 l198 41E8                                   l702 406C  
                                 l390 1462                                   l470 070A  
                                 l462 068A                                   l391 136A  
                                 l471 06F4                                   l463 06A4  
                                 l447 0468                                   l439 0296  
                                 l720 3772                                   l384 2844  
                                 l480 0818                                   l448 04B4  
                                 l721 37A2                                   l705 408C  
                                 l481 081C                                   l449 05A0  
                                 l730 37F8                                   l706 4096  
                                 l394 1430                                   l490 0A0C  
                                 l482 083E                                   l474 07D4  
                                 l466 06E4                                   l458 0618  
                                 l723 37E0                                   l707 40A4  
                                 l387 2934                                   l395 15B6  
                                 l483 098E                                   l475 0738  
                                 l467 06CE                                   l724 37D0  
                                 l484 089E                                   l741 43F6  
                                 l717 3712                                   l821 35EC  
                                 l397 167C                                   l477 07F4  
                                 l734 3852                                   l494 0A6A  
                                 l486 09B0                                   l478 07DE  
                                 l735 3886                                   l911 401C  
                                 l719 3730                                   l823 3618  
                                 l487 099A                                   l736 38C4  
                                 l912 402A                                   l824 3652  
                                 l496 0A8A                                   l737 3902  
                                 l921 4164                                   l729 3804  
                                 l833 36DA                                   l825 367A  
                                 l497 0AAC                                   l489 09F4  
                                 l922 4172                                   l834 36CE  
                                 l907 3FE8                                   l827 36B6  
                                 l499 0ACE                                   l772 3C24  
                                 l764 3B94                                   l908 3FDC  
                                 l828 36A6                                   l692 3F96  
                                 l773 3C18                                   l917 413C  
                                 l693 3FA0                                   l685 3F48  
                                 l766 3C00                                   l918 4130  
                                 l694 3FAE                                   l686 3F58  
                                 l775 3C40                                   l767 3BF0  
                                 l688 3F76                                   l689 3F6E  
                                 l881 4526                                   l698 4052  
                                 l699 405E                                   l990 1D7E  
                                 l994 1DCA                                   l995 1DC6  
                                 l997 1E26                                   l989 1D82  
                                 l998 1DEA                          __CFG_CPB$OFF 000000  
                                 _PR2 000FCB                          __CFG_CPD$OFF 000000  
                         i2___fladd@a 0017                           i2___fladd@b 0013  
                                 _lcd 000F83                           i2___fldiv@a 002C  
                         i2___fldiv@b 0028                          ___awmod@sign 0085  
                          i2___xxtofl 346E                                   prod 000FF3  
           read_adc_voltage@raw_value 00B5                                   wreg 000FE8  
                         i2___flmul@a 0013                           i2___flmul@b 000F  
                        ___flmul@aexp 00C9                          ___flmul@bexp 00CA  
                        ___flmul@sign 00C4                          ___flmul@temp 00CF  
                        ___flmul@prod 00CB                           lcd_gotoxy@x 008B  
                         lcd_gotoxy@y 008A                          ___fltol@exp1 00FB  
                                l1001 1EA2                                  l1002 1E80  
                                l1011 1EEA                                  l1003 1E8E  
                                l1020 1FBC                                  l1012 1EEE  
                                l1004 1E92                                  l1100 198A  
                                l1101 19A8                                  l1022 1FD2  
                                l1110 338A                                  l1015 1F88  
                                l1007 1F00                                  l1103 19CC  
                                l1032 2042                                  l1024 1FDC  
                                l1008 1EC6                                  l1104 19EA  
                                l1112 339C                                  l1017 1F98  
                                l1113 3390                                  l1050 29FC  
                                l1051 29F8                                  l1123 342A  
                                l1115 33DA                                  l1036 2068  
                                l1060 2B16                                  l1124 345C  
                                l1116 33C2                                  l1108 335C  
                                l1037 2070                                  l1029 1FFC  
                                l1053 2A42                                  l1109 336C  
                                l1038 2072                                  l1070 2B84  
                                l1046 29BC                                  l1118 340C  
                                l1063 2B4C                                  l1055 2A6A  
                                l1047 29B8                                  l1119 3400  
                                l1072 2BC8                                  l1064 2B2E  
                                l1056 2B18                                  l1080 16E0  
                                l1073 2BEC                                  l1057 2AC8  
                                l1081 16DC                                  l1074 2C16  
                                l1058 2AF0                                  l1082 16F0  
                                l1075 2C22                                  l1091 190E  
                                l1076 2C24                                  l1092 18F0  
                                l1084 1720                                  l1085 171C  
                                l1086 1730                                  l1087 174E  
                                l1098 1946                                  l5070 0C20  
                                l5066 0B92                                  l4492 2C16  
                                l4910 06F4                                  l4902 06CE  
                                l5614 40C6                                  l3688 393A  
                                l5628 40F4                                  l4934 07DE  
                                l4854 0506                                  l4846 04B4  
                                l4782 024C                                  l4776 022A  
                                l4874 061C                                  l5682 31E8  
                                l5686 3220                                  l4996 0A10  
                                STR_1 FFBD                                  STR_2 FFDA  
                                STR_3 FFCF                                  STR_4 FFA8  
                                STR_5 FFEC                                  STR_6 FF9D  
                                STR_7 FFFD                                  STR_8 FFFB  
                                STR_9 FFFD                                  u4040 1E56  
                                u4050 1E66                                  u4300 204E  
                                u4220 1FE0                                  u4060 1E68  
                                u5100 2BD6                                  u5110 2BFA  
                                _PIE1 000F9D                                  u5200 3BB2  
                                u4250 1FF8                                  u4090 1EAA  
                                u4410 173C                                  u4500 1998  
                                u4420 18B2                                  u5300 4140  
                                u6100 0C34                                  u5205 3BA8  
                                u5070 2B80                                  u4510 19B6  
                                u6110 0C50                                  u5240 3C2A  
                                u4425 18A8                                  u7010 40E8  
                                u4620 4078                                  u5430 420A  
                                u4470 1942                                  u5270 3FEC  
                                u6070 0B52                                  u7110 3220  
                                u5440 4236                                  u4560 3F7A  
                                u6080 0B70                                  u5530 01E6  
                                u5380 3416                                  u4820 36E0  
                                u5540 01EC                                  u5437 4200  
                                u4741 35D0                                  u3935 424C  
                                u5447 422C                                  u3936 424E  
                                u5720 0506                                  u4761 35FC  
                                u5537 01DC                                  u5490 00EE  
                                u5820 0718                                  u5590 0276  
                                u5760 065A                                  u5680 047A  
                                u4890 380A                                  u5850 0802  
                                u5690 04C6                                  u5860 0812  
                                u5597 026C                                  u5950 0A4E  
                                u7817 427A                                  u7827 44A2  
                    ?_lcd_send_nibble 0001                          i2___flge@ff1 0027  
                        i2___flge@ff2 002B                                  _main 0C5E  
                                _init 3A5E                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  indf0 000FEF  
                                fsr2h 000FDA                                  fsr0l 000FE9  
                                indf2 000FDF                                  fsr1l 000FE1  
                                fsr2l 000FD9                                  btemp 007B  
                        i2___flneg@f1 000F                                  prodh 000FF4  
                                prodl 000FF3                                  start 000E  
                       __CFG_IESO$OFF 000000                          i2___fltol@f1 0027  
                     ___fldiv@new_exp 00A5                          _sprintf$1904 0110  
         __end_of_changeOperationMode 454E                         __CFG_MCLRE$ON 000000  
                        ___param_bank 000000                          ?_incrementHS 0001  
        ?_incrementPercentHeatCounter 0001                      _set_pwm1_percent 3D2E  
                __end_of_delay_cycles 43D8                         ___fltol@sign1 00FA  
                     __end_of___fladd 208E                                 ?_main 0001  
                               ?_init 0001                       __end_of___fldiv 2C40  
                     __end_of___awdiv 3FB8                       __end_of___flneg 4408  
                               STR_10 FFFB                                 STR_11 FF89  
                               STR_12 FFF9                                 STR_20 FFD8  
                               STR_13 FFEE                                 STR_21 FFD5  
                               STR_22 FFF3                                 STR_14 FFB3  
                               STR_23 FFF6                                 STR_15 FFD2  
                               STR_24 FFF0                                 STR_16 FFE7  
                               STR_25 FFDA                                 STR_17 FFDD  
                               STR_18 FFE2                                 STR_26 FFC5  
                               STR_19 FFCC                       __end_of___awmod 40AE  
                     __end_of___flmul 1A00                       __end_of___flsub 42DA  
                     __end_of___fltol 3C52                       __end_of___lldiv 403C  
                     ___awdiv@divisor 0088                       __end_of___llmod 4184  
                               _T2CON 000FCA                        i2_set_pwm1_raw 4438  
                               i2l203 4544                                 i2l213 3E98  
                               i2l253 4578                                 i2l245 458C  
                               i2l237 4562                                 i2l262 261E  
                               i2l271 2526                                 i2l272 25B4  
                               i2l280 259A                                 i2l282 25AA  
                               i2l266 2524                                 i2l267 250E  
                               i2l285 2618                                 i2l277 257C  
                               i2l294 2678                                 i2l287 262A  
                               i2l289 2652                                 i2l741 4482  
                               i2l734 3972                                 i2l735 39A6  
                               i2l736 39E4                                 i2l737 3A22  
                               i2l772 3D00                                 i2l764 3C70  
                               i2l773 3CF4                                 i2l766 3CDC  
                               i2l775 3D1C                                 i2l767 3CCC  
                     ___awdiv@counter 008A                                 i2l990 20BA  
                               i2l994 2106                                 i2l995 2102  
                               i2l997 2162                                 i2l989 20BE  
                               i2l998 2126                                 _RCREG 000FAE  
                               _RCSTA 000FAB                                 _TMR1H 000FCF  
                               _TMR1L 000FCE                                 _TMR3H 000FB3  
                               _TMR3L 000FB2                                 _SPBRG 000FAF  
                               _PORTD 000F83               read_adc_voltage@channel 00B7  
                               _TRISA 000F92                                 _TRISB 000F93  
                               _TRISC 000F94                                 _TRISD 000F95  
                               _TRISE 000F96                                 _TXSTA 000FAC  
        ?_decrementPercentHeatCounter 0001                         __CFG_PWRT$OFF 000000  
                       __CFG_WRT0$OFF 000000                         __CFG_WRT1$OFF 000000  
                       __CFG_WRT2$OFF 000000                         __CFG_WRT3$OFF 000000  
                       i2___fladd@grs 0026                        __CFG_EBTR0$OFF 000000  
                      __CFG_FCMEN$OFF 000000                        __CFG_EBTR1$OFF 000000  
                      __CFG_EBTR2$OFF 000000                        __CFG_EBTR3$OFF 000000  
                     __end_of_highIsr 26C4                         __CFG_WRTB$OFF 000000  
                       __CFG_WRTC$OFF 000000                         __CFG_WRTD$OFF 000000  
                      __CFG_EBTRB$OFF 000000                       __end_of_dpowers FF89  
                               _scale 120A                       __end_of_isdigit 452E  
                               _hours 0067                       _init_adc_no_lib 45E4  
                       i2___fldiv@grs 003B                         i2___fldiv@rem 0035  
        ?_incrementPercentCoolCounter 0001                                 pclath 000FFA  
                    __end_ofi2___flge 3A5E                                 tablat 000FF5  
                __size_of_decrementHS 0012                                 status 000FD8  
             read_adc_voltage@voltage 00B1                                 wtemp6 007C  
                     __end_of_sprintf 0C5E                         i2___flmul@grs 001C  
                  __size_ofi2___fladd 033C                    __size_ofi2___fldiv 02B4  
                  __size_ofi2___flneg 002E                    __size_ofi2___flmul 0350  
                      __CFG_PBADEN$ON 000000                    __size_ofi2___fltol 00DC  
          __end_ofi2_set_pwm1_percent 3EA6                       __initialization 4322  
        ?_decrementPercentCoolCounter 0001                          __end_of_main 120A  
                     ??_lcd_send_byte 0089                          __end_of_init 3B74  
       ??_incrementPercentHeatCounter 0001                __end_ofi2_set_pwm1_raw 4466  
                              ??_main 0100                                ??_init 0080  
             i2set_pwm1_percent@value 0041                         __activetblptr 000003  
                __size_of__tdiv_to_l_ 0134                           ?i2___xxtofl 0001  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _ADCON2 000FC0                      ___llmod@dividend 008D  
                              ?_scale 00D1                                _ADRESH 000FC4  
                              _ADRESL 000FC3                                _CCPR1L 000FBE  
                    ___awdiv@dividend 0086                                i2l1001 21DE  
                              i2l1002 21BC                                i2l1011 2226  
                              i2l1003 21CA                                i2l1020 22F8  
                              i2l1012 222A                                i2l1004 21CE  
                              i2l1100 1CDA                                i2l1101 1CF8  
                              i2l1110 34DA                                i2l1022 230E  
                              i2l1015 22C4                                i2l1007 223C  
                              i2l1103 1D1C                                i2l1112 34EC  
                              i2l1032 237E                                i2l1024 2318  
                              i2l1008 2202                                i2l1104 1D3A  
                              i2l1113 34E0                                i2l1017 22D4  
                              i2l1050 2CB0                                i2l1123 357A  
                              i2l1115 352A                                i2l1051 2CAC  
                              i2l1124 35AC                                i2l1116 3512  
                              i2l1108 34AC                                i2l1036 23A4  
                              i2l1060 2DCA                                i2l1109 34BC  
                              i2l1037 23AC                                i2l1029 2338  
                              i2l1053 2CF6                                i2l1118 355C  
                              i2l1038 23AE                                i2l1070 2E38  
                              i2l1046 2C70                                i2l1119 3550  
                              i2l1063 2E00                                i2l1055 2D1E  
                              i2l1047 2C6C                                i2l1072 2E7C  
                              i2l1064 2DE2                                i2l1056 2DCC  
                              i2l1080 1A30                                i2l1073 2EA0  
                              i2l1057 2D7C                                i2l1081 1A2C  
                              i2l1074 2ECA                                i2l1058 2DA4  
                              i2l1082 1A40                                i2l1075 2ED6  
                              i2l1091 1C5E                                i2l1076 2ED8  
                              i2l1092 1C40                                i2l1084 1A70  
                              i2l1085 1A6C                                i2l1086 1A80  
                              i2l1087 1A9E                                i2l1098 1C96  
                              i2l3684 3A5A                                i2l5448 2ECA  
                              i2l5920 251A                                i2l5916 250E  
                              i2l5946 25AA         ??_incrementPercentCoolCounter 0001  
                    __end_of___xxtofl 346E                      __end_of_delay_ms 44BE  
                              _Buffer 0153                        i2___fladd@aexp 0024  
                      i2___fladd@bexp 0025                        __CFG_XINST$OFF 000000  
                    __end_of__powers_ FF2D                      __end_of_lcd_init 411C  
                              ___flge 381C                      __end_of_lcd_putc 41E6  
                    __end_of_lcd_puts 423E                      __end_of_autoHeat 331A  
                    __end_of_autoCool 312C                             ??___fladd 00E6  
                              ___wmul 44BE                             ??___fldiv 009C  
                           ??___awdiv 008A                             ??___flneg 0098  
                      __CFG_STVREN$ON 000000                             ??___awmod 0084  
                           ??___flmul 00C0                             ??___flsub 00FA  
                           ??___fltol 00F6                             ??___lldiv 0088  
                           ??___llmod 0095             i2set_pwm1_percent@raw_val 0049  
                              _fround 26C4                                clear_0 4348  
                              clear_1 4354                       ?i2_set_pwm1_raw 0001  
                    ___awdiv@quotient 008C                        i2___fldiv@aexp 0040  
                      i2___fldiv@bexp 003F                       ___awmod@divisor 0082  
                      i2___fldiv@sign 0034                       ___awmod@counter 0084  
                           ??_highIsr 004B               __end_of_init_adc_no_lib 45F0  
                        __pdataCOMRAM 0075                     __end_ofi2___fladd 23CA  
                           ??_isdigit 0080                     __end_ofi2___fldiv 2EF4  
                   __end_ofi2___flneg 4494                     __end_ofi2___flmul 1D50  
                   __end_ofi2___fltol 3D2E                          __mediumconst FEF8  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8  __size_of_incrementPercentHeatCounter 0016  
                           ??_sprintf 010C                        i2___flmul@aexp 0020  
                      i2___flmul@bexp 0021                        i2___flmul@sign 001B  
                      i2___flmul@temp 0026                        i2___flmul@prod 0022  
                          ___flge@ff1 00F2                            ___flge@ff2 00F6  
                        ___xxtofl@arg 0090                          ___xxtofl@exp 008F  
                        ___xxtofl@val 0086                            __accesstop 0080  
             __end_of__initialization 435A                        i2___fltol@exp1 0030  
                          ___flneg@f1 0094                         ___rparam_used 000001  
                          ___fltol@f1 00F2  __size_of_decrementPercentHeatCounter 0012  
                 __size_ofi2___xxtofl 0150                        __pcstackCOMRAM 0001  
               __size_of_delay_cycles 0034                         __end_of_scale 16AE  
                __size_of_incrementHS 0016  __size_of_incrementPercentCoolCounter 0014  
                           ?i2___flge 0027                 i2set_pwm1_percent@tmp 0045  
                          __div_to_l_ 36F2             __size_of_read_adc_voltage 008C  
                   lcd_gotoxy@address 008C  __size_of_decrementPercentCoolCounter 0010  
                     __div_to_l_@exp1 008D                       __div_to_l_@cntr 008C  
                             ??_scale 00D5                       __div_to_l_@quot 0088  
                        sprintf@width 012A                    _percentHeatCounter 014F  
            __end_of_set_pwm1_percent 3DEE                            __pbssBANK1 014D  
         __end_of_read_adc_raw_no_lib 43A4                          _delay_cycles 43A4  
                       __div_to_l_@f1 0080                         __div_to_l_@f2 0084  
                  __size_of_init_pwm1 0010                 __end_of_restartTimer3 45A0  
                      lcd_send_byte@n 0088                               ?___flge 00F2  
                             ?___wmul 0080                         autoCool@value 0137  
                    lcd_send_nibble@n 0087                               _CCP1CON 000FBD  
                             ?_fround 00D1                    _percentCoolCounter 006F  
                          ??i2___flge 002F                      ?_init_adc_no_lib 0001  
                             _INTCON2 000FF1                               _INTCON3 000FF0  
                           ?___xxtofl 0086                             ?_delay_ms 0080  
                          _lcd_gotoxy 42DA                             ?_lcd_init 0001  
                           ?_lcd_putc 0001                             ?_lcd_puts 008E  
                           ?_autoHeat 0001                             ?_autoCool 0001  
                     i2___fladd@signs 0023                     __end_of__npowers_ FF61  
                             __Hparam 0000                            _scale$1903 00D5  
                             __Lparam 0000              __size_of_lcd_send_nibble 0026  
                        _highIsr$1984 005F                       __size_of___flge 0122  
                             ___fladd 1D50                               ___fldiv 298A  
                             ___awdiv 3F32                               ___flneg 43D8  
                             ___awmod 403C                               ___flmul 16AE  
                             ___flsub 4292                               ___fltol 3B74  
                             ___lldiv 3FB8                       __size_of___wmul 0028  
                             ___llmod 411C                         ?_set_pwm1_raw 0080  
                             __pcinit 4322                               _clkMode 0065  
                     __size_of_fround 02C6          __size_of_changeOperationMode 0020  
                             __ramtop 1000                               __ptext0 0C5E  
                             __ptext1 3EA6                               __ptext2 4364  
                             __ptext3 40AE                               __ptext4 45E4  
                             __ptext5 3A5E                               __ptext6 45C4  
                             __ptext7 312C                               __ptext8 2EF4  
                             __ptext9 0012                               _highIsr 0008  
                           _T1CONbits 000FCD                           ?__div_to_l_ 0080  
                             _dpowers FF61                    i2_set_pwm1_percent 3DEE  
                           _T2CONbits 000FCA                               _initial 0079  
                             _isdigit 450C                          ??i2___xxtofl 0005  
                          ??___xxtofl 008A                             _T3CONbits 000FB1  
                   __end_of_init_pwm1 45D4                      ___awmod@dividend 0080  
                             _minutes 0069                               _seconds 006B  
                          ??_delay_ms 0082                               _stpMode 0063  
                       ??_decrementHS 0001                               _sprintf 0012  
                          ??_lcd_init 008A                   ?i2_set_pwm1_percent 0041  
                      __pintcode_body 23CA                            ??_lcd_putc 008D  
                          ??_lcd_puts 0090                  end_of_initialization 435A  
                          ??_autoHeat 0100                            ??_autoCool 0100  
                             int_func 23CA                  lcd_send_byte@cm_data 0089  
                      i2___xxtofl@arg 000B                        i2___xxtofl@exp 000A  
                      i2___xxtofl@val 0001                       ___lldiv@divisor 0084  
                     ___lldiv@counter 008C                      ??i2_set_pwm1_raw 0003  
                           _RCSTAbits 000FAB                    __end_ofi2___xxtofl 35BE  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
                ??i2_set_pwm1_percent 0045                        ??_set_pwm1_raw 0082  
                      __tdiv_to_l_@f1 0080                        __tdiv_to_l_@f2 0084  
               __end_of_lcd_send_byte 4292                         ??__tdiv_to_l_ 0088  
                           _PORTCbits 000F82                             _PORTEbits 000F84  
                 set_pwm1_percent@tmp 0100                           ___fladd@grs 00F1  
                       ___xxtofl@sign 008E                      _read_adc_voltage 3EA6  
                           _TRISCbits 000F94                           ?_lcd_gotoxy 008A  
                         ___fldiv@grs 00A7                           ___fldiv@rem 00A1  
                     i2___fltol@sign1 002F                             i2___fladd 208E  
                           i2___fldiv 2C40                             i2___flneg 4466  
                     _LCD_INIT_STRING 0075                             i2___flmul 1A00  
                           i2___fltol 3C52                             _RPS_count 014D  
                         ___flmul@grs 00C5                           _CCP1CONbits 000FBD  
                           _TXSTAbits 000FAC                   __end_of_decrementHS 45C4  
                 __size_of__div_to_l_ 012A   __end_of_incrementPercentHeatCounter 4564  
         _incrementPercentHeatCounter 454E                        __end_of___flge 393E  
                      __end_of___wmul 44E6                           _BAUDCONbits 000FB8  
                       __pidataCOMRAM 45F0                         delay_cycles@n 0083  
                       delay_cycles@x 0084                     ??_lcd_send_nibble 0086  
                      __end_of_fround 298A   __end_of_decrementPercentHeatCounter 45B2  
         _decrementPercentHeatCounter 45A0                     __size_ofi2___flge 0120  
                 start_initialization 4322                   __end_of__tdiv_to_l_ 36F2  
                          ?i2___fladd 0013                            ?i2___fldiv 0028  
                          ?i2___flneg 000F                            ?i2___flmul 000F  
                          ?i2___fltol 0027   __end_of_incrementPercentCoolCounter 458E  
         _incrementPercentCoolCounter 457A         ??_decrementPercentHeatCounter 0001  
                   ?_set_pwm1_percent 00FC                    ??_set_pwm1_percent 0100  
                     ___llmod@divisor 0091                       ___llmod@counter 0095  
 __end_of_decrementPercentCoolCounter 45E4           _decrementPercentCoolCounter 45D4  
                       ??_incrementHS 0001                              ??___flge 00FA  
                 __size_of_lcd_gotoxy 0048                              ??___wmul 0084  
        read_adc_raw_no_lib@raw_value 0084                      __CFG_LPT1OSC$OFF 000000  
                            ??_fround 00D5                         sprintf@tmpval 011A  
       ??_decrementPercentCoolCounter 0001                             ___fladd@a 00E2  
                           ___fladd@b 00DE                            fround@prec 00DD  
                           ___fldiv@a 0098                             ___fldiv@b 0094  
                           ___flmul@a 00BC                             ___flmul@b 00B8  
                         __pbssCOMRAM 0063                             ___flsub@a 00F6  
                           ___flsub@b 00F2                         __pcstackBANK0 0080  
                       __pcstackBANK1 0100                     __size_of___xxtofl 0154  
                        _isdigit$1518 0081                     __size_of_delay_ms 002A  
                         _decrementHS 45B2                  __end_of_set_pwm1_raw 4438  
                 _changeOperationMode 452E                     __size_of_lcd_init 006E  
                         sprintf@flag 0124                     __size_of_lcd_putc 0062  
                   __size_of_lcd_puts 0058                           sprintf@fval 0126  
                         sprintf@prec 012C                     __size_of_autoHeat 01EE  
                   __size_of_autoCool 0238                             __pnvBANK1 0173  
                           _main$1202 013B                             _main$1211 013F  
                           _main$1220 0143                             _main$1212 0141  
                           _main$1221 0145                             _main$1206 013D  
                           _main$1231 0149                             _main$1232 014B  
                           _main$1224 0147                     __CFG_CCP2MX$PORTC 000000  
                           _heatError 0173                             __pintcode 0008  
        __size_of_read_adc_raw_no_lib 0040                         __pmediumconst FEF8  
                            ?___fladd 00DE                              ?___fldiv 0094  
                            ?___awdiv 0086                              ?___flneg 0094  
                            ?___awmod 0080                              ?___flmul 00B8  
                            ?___flsub 00F2                              ?___fltol 00F2  
                            ?___lldiv 0080                              ?___llmod 008D  
                           __npowers_ FF2D                             _coolError 0177  
                ?_changeOperationMode 0001                           __tdiv_to_l_ 35BE  
                 __end_of_incrementHS 457A                              ?_highIsr 0001  
                        ??__div_to_l_ 0088                              ?_isdigit 0001  
                         ??i2___fladd 001B                           ??i2___fldiv 0030  
                         ??i2___flneg 0013                              ?_sprintf 0100  
              __size_of_restartTimer3 0012                           ??i2___flmul 0017  
                         ??i2___fltol 002B                             _init_pwm1 45C4  
                      __size_of_scale 04A4              __size_of_init_adc_no_lib 000C  
                      ___wmul@product 0084                             delay_ms@i 0082  
                           delay_ms@n 0080                              _IPR2bits 000FA2  
                            _PIE2bits 000FA0                         _operationMode 0073  
                  __end_of__div_to_l_ 381C                              _PIR2bits 000FA1  
            __end_of_read_adc_voltage 3F32                              i2u613_40 3C8E  
                            i2u613_45 3C84                              i2u630_40 21A4  
                            i2u633_40 21E6                              i2u617_40 3D06  
                            i2u732_40 3566                              i2u628_40 2192  
                            i2u740_40 246C                              i2u629_40 21A2  
                            i2u654_40 238A                              i2u646_40 231C  
                            i2u750_40 2568                              i2u649_40 2334  
                            i2u746_40 2540                              i2u675_40 2E34  
                            i2u748_40 2554                              i2u678_40 2E8A  
                            i2u694_40 1C92                              i2u679_40 2EAE  
                            i2u688_40 1A8C                              i2u697_40 1CE8  
                            i2u689_40 1C02                              i2u689_45 1BF8  
                            i2u698_40 1D06                              _RCONbits 000FD0  
                   i2___fldiv@new_exp 0039                      __CFG_WDTPS$32768 000000  
          read_adc_raw_no_lib@channel 0086                 ??_changeOperationMode 0001  
                          _ADCON0bits 000FC2                              i2___flge 393E  
                   ___wmul@multiplier 0080                             lcd_init@i 008A  
                           lcd_putc@c 008D                             lcd_puts@s 008E  
                        ??_lcd_gotoxy 008B                            ?_init_pwm1 0001  
                         _INTCON2bits 000FF1                           _INTCON3bits 000FF0  
                           copy_data0 4336                             init@dummy 0080  
                     _lcd_send_nibble 44E6                              __Hrparam 0000  
               set_pwm1_raw@raw_value 0080                              __Lrparam 0000  
                  __CFG_BOREN$SBORDIS 000000                           _incrementHS 4564  
                       _restartTimer3 458E                    __end_of_lcd_gotoxy 4322  
         __size_ofi2_set_pwm1_percent 00B8                      __size_of___fladd 033E  
                    __size_of___fldiv 02B6                      __size_of___awdiv 0086  
                    __size_of___flneg 0030                      __size_of___awmod 0072  
                    __size_of___flmul 0352                      __size_of___flsub 0048  
                    __size_of___fltol 00DE                      __size_of___lldiv 0084  
                    __size_of___llmod 0068                           _fround$1901 00D9  
                         _fround$1902 00D5                      __size_of_highIsr 26BC  
                          sprintf@len 0118                            sprintf@exp 0122  
                          sprintf@val 011E                              ___xxtofl 331A  
               __size_of_set_pwm1_raw 0030                      __size_of_isdigit 0022  
                            _delay_ms 4494                              __ptext10 120A  
                            __ptext11 450C                              __ptext20 3FB8  
                            __ptext12 26C4                              __ptext21 4292  
                            __ptext13 403C                              __ptext30 41E6  
                            __ptext22 43D8                              __ptext14 3F32  
                            __ptext31 4184                              __ptext23 381C  
                            __ptext15 35BE                              __ptext40 3C52  
                            __ptext32 42DA                              __ptext24 3D2E  
                            __ptext16 36F2                              __ptext41 1A00  
                            __ptext33 423E                              __ptext25 4408  
                            __ptext17 331A                              __ptext50 4564  
                            __ptext42 2C40                              __ptext34 44E6  
                            __ptext26 3B74                              __ptext18 44BE  
                            __ptext51 45A0                              __ptext43 208E  
                            __ptext35 43A4                              __ptext27 16AE  
                            __ptext19 411C                              __ptext52 45D4  
                            __ptext44 346E                              __ptext36 4494  
                            __ptext28 298A                              __ptext53 45B2  
                            __ptext45 4466                              __ptext29 1D50  
                            __ptext54 452E                              __ptext46 393E  
                            __ptext38 3DEE                              __ptext47 458E  
                            __ptext39 4438                              __ptext48 454E  
                            __ptext49 457A                              __powers_ FEF9  
                            _lcd_init 40AE                              _lcd_putc 4184  
                            _lcd_puts 41E6                              _autoHeat 312C  
                            _autoCool 2EF4                      __size_of_sprintf 0C4C  
             set_pwm1_percent@raw_val 0104                              _autoMode 0071  
              __size_of_lcd_send_byte 0054                         ?_delay_cycles 0001  
                       __size_of_main 05AC                         __size_of_init 0116  
                   ??_init_adc_no_lib 0080                        ?_restartTimer3 0001  
                            int$flags 007B             __size_of_set_pwm1_percent 00C0  
                        _set_pwm1_raw 4408               __size_ofi2_set_pwm1_raw 002E  
                          _INTCONbits 000FF2                              isdigit@c 0082  
                 _read_adc_raw_no_lib 4364                              scale@scl 00D9  
                         ??_init_pwm1 0080                          ?_decrementHS 0001  
                            intlevel2 0000                             sprintf@ap 0114  
                           sprintf@cp 0116               __end_of_lcd_send_nibble 450C  
                    __tdiv_to_l_@exp1 0090                      __tdiv_to_l_@cntr 008F  
                           sprintf@sp 0100                        ??_delay_cycles 0080  
                    __tdiv_to_l_@quot 008B                       i2___xxtofl@sign 0009  
                        _timerCounter 006D                      ___lldiv@dividend 0080  
                ?_read_adc_raw_no_lib 0080                         _lcd_send_byte 423E  
                        ?__tdiv_to_l_ 0080                              sprintf@c 012E  
                            sprintf@f 0102                      ___lldiv@quotient 0088  
               set_pwm1_percent@value 00FC                         ___fladd@signs 00EE  
                        ___fladd@aexp 00EF                          ___fladd@bexp 00F0  
             i2set_pwm1_raw@raw_value 0001                       ??_restartTimer3 0001  
               ??_read_adc_raw_no_lib 0082  
